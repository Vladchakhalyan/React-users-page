{"ast":null,"code":"import { profileApi } from \"../API/api\";\nconst D_R = \"BRAT_JAN\";\nconst D_R_R = \"AB_JAN\";\nconst P_R_C = \"P_R_C\";\nconst P_S = \"P_S\";\nlet initialState = {\n  person: [{\n    name: \"Sasha\",\n    id: \"1\"\n  }, {\n    name: \"Tyom\",\n    id: \"2\"\n  }, {\n    name: \"Viktoria\",\n    id: \"3\"\n  }, {\n    name: \"Ann\",\n    id: \"4\"\n  }, {\n    name: \"Ani\",\n    id: \"5\"\n  }],\n  messages: [{\n    msg: \"Hi\"\n  }, {\n    msg: \"How is your komasutra?\"\n  }, {\n    msg: \"Yo\"\n  }],\n  newmsg: \"Hi\",\n  profile: null,\n  status: \"\"\n};\n\nconst DDRS = (state = initialState, action) => {\n  switch (action.type) {\n    case D_R:\n      {\n        let addMsg = {\n          msg: state.newmsg\n        };\n        return { ...state,\n          messages: [...state.messages],\n          addMsg,\n          newmsg: \"\"\n        };\n      }\n\n    case D_R_R:\n      return { ...state,\n        newmsg: action.newText\n      };\n\n    case P_R_C:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case P_S:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\n_c = DDRS;\nexport const ar = () => ({\n  type: D_R\n});\nexport const er = text => ({\n  type: D_R_R,\n  newMsg: text\n});\nexport const pr = profile => ({\n  type: P_R_C,\n  profile\n});\nexport const st = status => ({\n  type: P_S,\n  status\n});\nexport const VUprofile = userid => {\n  return dispatch => {\n    profileApi.getUsers5(userid).then(data => {\n      dispatch(pr(data));\n    });\n  };\n};\n_c2 = VUprofile;\nexport const getStatus = userid => {\n  return dispatch => {\n    profileApi.getStatus(userid).then(response => {\n      dispatch(st(response.data));\n    });\n  };\n};\nexport const updateStatus = status => {\n  return dispatch => {\n    profileApi.statusUpdate(status).then(() => {\n      dispatch(st(status));\n    });\n  };\n};\nexport default DDRS;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"DDRS\");\n$RefreshReg$(_c2, \"VUprofile\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/redux/dr.js"],"names":["profileApi","D_R","D_R_R","P_R_C","P_S","initialState","person","name","id","messages","msg","newmsg","profile","status","DDRS","state","action","type","addMsg","newText","ar","er","text","newMsg","pr","st","VUprofile","userid","dispatch","getUsers5","then","data","getStatus","response","updateStatus","statusUpdate"],"mappings":"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","sourcesContent":["import { profileApi } from \"../API/api\";\n\nconst D_R = \"BRAT_JAN\";\nconst D_R_R = \"AB_JAN\";\nconst P_R_C = \"P_R_C\";\nconst P_S = \"P_S\";\n\nlet initialState = {\n  person: [\n    { name: \"Sasha\", id: \"1\" },\n    { name: \"Tyom\", id: \"2\" },\n    { name: \"Viktoria\", id: \"3\" },\n    { name: \"Ann\", id: \"4\" },\n    { name: \"Ani\", id: \"5\" },\n  ],\n  messages: [{ msg: \"Hi\" }, { msg: \"How is your komasutra?\" }, { msg: \"Yo\" }],\n  newmsg: \"Hi\",\n  profile: null,\n  status: \"\",\n};\n\nconst DDRS = (state = initialState, action) => {\n  switch (action.type) {\n    case D_R: {\n      let addMsg = {\n        msg: state.newmsg,\n      };\n\n      return { ...state, messages: [...state.messages], addMsg, newmsg: \"\" };\n    }\n    case D_R_R:\n      return { ...state, newmsg: action.newText };\n    case P_R_C:\n      return { ...state, profile: action.profile };\n    case P_S:\n      return { ...state, status: action.status };\n    default:\n      return state;\n  }\n};\n\nexport const ar = () => ({\n  type: D_R,\n});\n\nexport const er = (text) => ({\n  type: D_R_R,\n  newMsg: text,\n});\nexport const pr = (profile) => ({\n  type: P_R_C,\n  profile,\n});\n\nexport const st = (status) => ({\n  type: P_S,\n  status,\n});\n\nexport const VUprofile = (userid) => {\n  return (dispatch) => {\n    profileApi.getUsers5(userid).then((data) => {\n      dispatch(pr(data));\n    });\n  };\n};\n\nexport const getStatus = (userid) => {\n  return (dispatch) => {\n    profileApi.getStatus(userid).then((response) => {\n      dispatch(st(response.data));\n    });\n  };\n};\nexport const updateStatus = (status) => {\n  return (dispatch) => {\n    profileApi.statusUpdate(status).then(() => {\n      dispatch(st(status));\n    });\n  };\n};\n\nexport default DDRS;\n"]},"metadata":{},"sourceType":"module"}