{"ast":null,"code":"import * as axios from \"axios\";\nlet instacne = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"759ff387-cc25-472b-95e3-bb182814d4b3\"\n  }\n});\nexport const UsersApi = {\n  getUsers(mpageq = 1, mklient = 10) {\n    return instacne.get(`users?page=${mpageq}&count=${mklient}`).then(response => response.data);\n  },\n\n  getUsers2(id) {\n    return instacne.delete(`follow/${id} `).then(response => response.data);\n  },\n\n  getUsers3(id) {\n    return instacne.post(`follow/${id} `).then(response => response.data);\n  },\n\n  getUsers4() {\n    return instacne.get(`auth/me`).then(response => response.data);\n  },\n\n  getUsers5(userid) {\n    return instacne.get(`profile/` + userid).then(response => response.data);\n  }\n\n};\nexport const profileApi = {\n  getUsers5(userid) {\n    return instacne.get(`profile/` + userid).then(response => response.data);\n  },\n\n  getStatus(userid) {\n    return instacne.get(`profile/status/` + userid.then(response => response.data));\n  },\n\n  statusUpdate(status) {\n    return instacne.put(`profile/status/`, {\n      status: status\n    }).then(response => response.data);\n  }\n\n};","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/API/api.js"],"names":["axios","instacne","create","withCredentials","baseURL","headers","UsersApi","getUsers","mpageq","mklient","get","then","response","data","getUsers2","id","delete","getUsers3","post","getUsers4","getUsers5","userid","profileApi","getStatus","statusUpdate","status","put"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,IAAIC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC1BC,EAAAA,eAAe,EAAE,IADS;AAE1BC,EAAAA,OAAO,EAAE,+CAFiB;AAG1BC,EAAAA,OAAO,EAAE;AACP,eAAW;AADJ;AAHiB,CAAb,CAAf;AAQA,OAAO,MAAMC,QAAQ,GAAG;AACtBC,EAAAA,QAAQ,CAACC,MAAM,GAAG,CAAV,EAAaC,OAAO,GAAG,EAAvB,EAA2B;AACjC,WAAOR,QAAQ,CACZS,GADI,CACC,cAAaF,MAAO,UAASC,OAAQ,EADtC,EAEJE,IAFI,CAEEC,QAAD,IAAcA,QAAQ,CAACC,IAFxB,CAAP;AAGD,GALqB;;AAMtBC,EAAAA,SAAS,CAACC,EAAD,EAAK;AACZ,WAAOd,QAAQ,CAACe,MAAT,CAAiB,UAASD,EAAG,GAA7B,EAAiCJ,IAAjC,CAAuCC,QAAD,IAAcA,QAAQ,CAACC,IAA7D,CAAP;AACD,GARqB;;AAStBI,EAAAA,SAAS,CAACF,EAAD,EAAK;AACZ,WAAOd,QAAQ,CAACiB,IAAT,CAAe,UAASH,EAAG,GAA3B,EAA+BJ,IAA/B,CAAqCC,QAAD,IAAcA,QAAQ,CAACC,IAA3D,CAAP;AACD,GAXqB;;AAYtBM,EAAAA,SAAS,GAAG;AACV,WAAOlB,QAAQ,CAACS,GAAT,CAAc,SAAd,EAAwBC,IAAxB,CAA8BC,QAAD,IAAcA,QAAQ,CAACC,IAApD,CAAP;AACD,GAdqB;;AAetBO,EAAAA,SAAS,CAACC,MAAD,EAAS;AAChB,WAAOpB,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaW,MAA1B,EAAkCV,IAAlC,CAAwCC,QAAD,IAAcA,QAAQ,CAACC,IAA9D,CAAP;AACD;;AAjBqB,CAAjB;AAoBP,OAAO,MAAMS,UAAU,GAAG;AACxBF,EAAAA,SAAS,CAACC,MAAD,EAAS;AAChB,WAAOpB,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaW,MAA1B,EAAkCV,IAAlC,CAAwCC,QAAD,IAAcA,QAAQ,CAACC,IAA9D,CAAP;AACD,GAHuB;;AAIxBU,EAAAA,SAAS,CAACF,MAAD,EAAS;AAChB,WAAOpB,QAAQ,CAACS,GAAT,CACJ,iBAAD,GAAoBW,MAAM,CAACV,IAAP,CAAaC,QAAD,IAAcA,QAAQ,CAACC,IAAnC,CADf,CAAP;AAGD,GARuB;;AASxBW,EAAAA,YAAY,CAACC,MAAD,EAAS;AACnB,WAAOxB,QAAQ,CACZyB,GADI,CACC,iBADD,EACmB;AACtBD,MAAAA,MAAM,EAAEA;AADc,KADnB,EAIJd,IAJI,CAIEC,QAAD,IAAcA,QAAQ,CAACC,IAJxB,CAAP;AAKD;;AAfuB,CAAnB","sourcesContent":["import * as axios from \"axios\";\n\nlet instacne = axios.create({\n  withCredentials: true,\n  baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n  headers: {\n    \"API-KEY\": \"759ff387-cc25-472b-95e3-bb182814d4b3\",\n  },\n});\n\nexport const UsersApi = {\n  getUsers(mpageq = 1, mklient = 10) {\n    return instacne\n      .get(`users?page=${mpageq}&count=${mklient}`)\n      .then((response) => response.data);\n  },\n  getUsers2(id) {\n    return instacne.delete(`follow/${id} `).then((response) => response.data);\n  },\n  getUsers3(id) {\n    return instacne.post(`follow/${id} `).then((response) => response.data);\n  },\n  getUsers4() {\n    return instacne.get(`auth/me`).then((response) => response.data);\n  },\n  getUsers5(userid) {\n    return instacne.get(`profile/` + userid).then((response) => response.data);\n  },\n};\n\nexport const profileApi = {\n  getUsers5(userid) {\n    return instacne.get(`profile/` + userid).then((response) => response.data);\n  },\n  getStatus(userid) {\n    return instacne.get(\n      `profile/status/` + userid.then((response) => response.data)\n    );\n  },\n  statusUpdate(status) {\n    return instacne\n      .put(`profile/status/`, {\n        status: status,\n      })\n      .then((response) => response.data);\n  },\n};\n"]},"metadata":{},"sourceType":"module"}