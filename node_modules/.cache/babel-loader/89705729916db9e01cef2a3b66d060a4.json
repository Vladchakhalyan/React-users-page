{"ast":null,"code":"import { dialogMsg } from \"../../../redux/DialogPageRedux.js\";\nimport Dialog from \"../Dialog\";\nimport { connect } from \"react-redux\";\nimport { WithAuthRedirect } from \"../../hoc/AuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = state => {\n  return {\n    person: state.myPage.person,\n    messages: state.myPage.messages,\n    newmsg: state.myPage.newmsg,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    AddF: text => {\n      dispatch(dialogMsg(text));\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialog);","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React-js/React-Page/src/conponents/Dialogs/Message/DialogContaner.jsx"],"names":["dialogMsg","Dialog","connect","WithAuthRedirect","compose","mapStateToProps","state","person","myPage","messages","newmsg","isAuth","auth","mapDispatchToProps","dispatch","AddF","text"],"mappings":"AAAA,SAASA,SAAT,QAA0B,mCAA1B;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,OAAT,QAAwB,OAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,MAAN,CAAaD,MADhB;AAELE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,CAAaC,QAFlB;AAGLC,IAAAA,MAAM,EAAEJ,KAAK,CAACE,MAAN,CAAaE,MAHhB;AAILC,IAAAA,MAAM,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJd,GAAP;AAMD,CAPD;;AASA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAGC,IAAD,IAAU;AACdF,MAAAA,QAAQ,CAACd,SAAS,CAACgB,IAAD,CAAV,CAAR;AACD;AAHI,GAAP;AAKD,CAND;;AAQA,eAAeZ,OAAO,CACpBF,OAAO,CAACG,eAAD,EAAkBQ,kBAAlB,CADa,EACyBV,gBADzB,CAAP,CACkDF,MADlD,CAAf","sourcesContent":["import { dialogMsg } from \"../../../redux/DialogPageRedux.js\";\nimport Dialog from \"../Dialog\";\nimport { connect } from \"react-redux\";\nimport { WithAuthRedirect } from \"../../hoc/AuthRedirect\";\nimport { compose } from \"redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    person: state.myPage.person,\n    messages: state.myPage.messages,\n    newmsg: state.myPage.newmsg,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    AddF: (text) => {\n      dispatch(dialogMsg(text));\n    },\n  };\n};\n\nexport default compose(\n  connect(mapStateToProps, mapDispatchToProps),WithAuthRedirect)(Dialog);\n"]},"metadata":{},"sourceType":"module"}