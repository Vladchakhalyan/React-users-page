{"ast":null,"code":"import React from 'react';\nimport MyPosts from './MyPosts';\nimport { arajin, erkrord } from '../../../redux/mr.js';\nimport StoreContext from '../../../StoreContext';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = state => {\n  return {\n    mymsg: state.mymsg,\n    adText: state.adText\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    add: () => {\n      dispatch(arajin());\n    },\n    change: text => {\n      let ac = erkrord(text);\n      dispatch(ac);\n    }\n  };\n};\n\nconst PostsMy = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default PostsMy;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/conponents/Profile/MyPosts/PostMy.jsx"],"names":["React","MyPosts","arajin","erkrord","StoreContext","connect","mapStateToProps","state","mymsg","adText","mapDispatchToProps","dispatch","add","change","text","ac","PostsMy"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAASC,MAAT,EAAiBC,OAAjB,QAAgC,sBAAhC;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,KAAK,EAAED,KAAK,CAACC,KADR;AAELC,IAAAA,MAAM,EAAEF,KAAK,CAACE;AAFT,GAAP;AAID,CALD;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,GAAG,EAAE,MAAM;AACTD,MAAAA,QAAQ,CAACT,MAAM,EAAP,CAAR;AACD,KAHI;AAILW,IAAAA,MAAM,EAAGC,IAAD,IAAU;AAChB,UAAIC,EAAE,GAAGZ,OAAO,CAACW,IAAD,CAAhB;AACAH,MAAAA,QAAQ,CAACI,EAAD,CAAR;AACD;AAPI,GAAP;AASD,CAVD;;AAYA,MAAMC,OAAO,GAAGX,OAAO,CAACC,eAAD,EAAkBI,kBAAlB,CAAP,CAA6CT,OAA7C,CAAhB;AAEA,eAAee,OAAf","sourcesContent":["import React from 'react';\r\nimport MyPosts from './MyPosts';\r\nimport { arajin, erkrord } from '../../../redux/mr.js';\r\nimport StoreContext from '../../../StoreContext';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    mymsg: state.mymsg,\r\n    adText: state.adText,\r\n  };\r\n};\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    add: () => {\r\n      dispatch(arajin());\r\n    },\r\n    change: (text) => {\r\n      let ac = erkrord(text);\r\n      dispatch(ac);\r\n    },\r\n  };\r\n};\r\n\r\nconst PostsMy = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default PostsMy;\r\n"]},"metadata":{},"sourceType":"module"}