{"ast":null,"code":"const FOLOW = \"FOLOW\";\nconst UNFOLOW = \"UNFOLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_USERS_CH = \"SET_USERS_CH\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst IS_FETCHING = \"IS_FETCHING\";\nconst IS_TOGGLE_FLUN = \"IS_TOGGLE_FLUN\";\nlet initialState = {\n  users: [],\n  mpage: 5,\n  totalUsersCount: 0,\n  mpageq: 1,\n  isFetching: false,\n  toggleFLUN: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLOW:\n      {\n        return { ...state,\n          users: state.users.map(dd => {\n            if (dd.id === action.usersID) {\n              return { ...dd,\n                followed: true\n              };\n            }\n\n            return dd;\n          })\n        };\n      }\n\n    case UNFOLOW:\n      {\n        return { ...state,\n          users: state.users.map(ddd => {\n            if (ddd.id === action.usersID) {\n              return { ...ddd,\n                followed: false\n              };\n            }\n\n            return ddd;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_USERS_CH:\n      {\n        return { ...state,\n          mpageq: action.mpageq\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isfch\n        };\n      }\n\n    case IS_TOGGLE_FLUN:\n      {\n        return { ...state,\n          toggleFLUN: action.fun ? [...state.toggleFLUN, action.UserID] : state.toggleFLUN.filter(id => id != action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const folow = usersID => ({\n  type: FOLOW,\n  usersID\n});\nexport const unfolow = usersID => ({\n  type: UNFOLOW,\n  usersID\n});\nexport const setusers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setch = mpageq => ({\n  type: SET_USERS_CH,\n  mpageq\n});\nexport const setTotalUserCount = totalUsersCountt => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCountt\n});\nexport const isFetchings = isfch => ({\n  type: IS_FETCHING,\n  isfch\n});\nexport const isFLUN = (fun, userId) => ({\n  type: IS_TOGGLE_FLUN,\n  fun,\n  userId\n});\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/redux/users.js"],"names":["FOLOW","UNFOLOW","SET_USERS","SET_USERS_CH","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_TOGGLE_FLUN","initialState","users","mpage","totalUsersCount","mpageq","isFetching","toggleFLUN","usersReducer","state","action","type","map","dd","id","usersID","followed","ddd","count","isfch","fun","UserID","filter","userId","folow","unfolow","setusers","setch","setTotalUserCount","totalUsersCountt","isFetchings","isFLUN"],"mappings":"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","sourcesContent":["const FOLOW = \"FOLOW\";\nconst UNFOLOW = \"UNFOLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_USERS_CH = \"SET_USERS_CH\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst IS_FETCHING = \"IS_FETCHING\";\nconst IS_TOGGLE_FLUN = \"IS_TOGGLE_FLUN\";\n\nlet initialState = {\n  users: [],\n  mpage: 5,\n  totalUsersCount: 0,\n  mpageq: 1,\n  isFetching: false,\n  toggleFLUN: false,\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLOW: {\n      return {\n        ...state,\n        users: state.users.map((dd) => {\n          if (dd.id === action.usersID) {\n            return { ...dd, followed: true };\n          }\n          return dd;\n        }),\n      };\n    }\n    case UNFOLOW: {\n      return {\n        ...state,\n        users: state.users.map((ddd) => {\n          if (ddd.id === action.usersID) {\n            return { ...ddd, followed: false };\n          }\n          return ddd;\n        }),\n      };\n    }\n    case SET_USERS: {\n      return { ...state, users: action.users };\n    }\n    case SET_USERS_CH: {\n      return { ...state, mpageq: action.mpageq };\n    }\n    case SET_TOTAL_USERS_COUNT: {\n      return { ...state, totalUsersCount: action.count };\n    }\n    case IS_FETCHING: {\n      return { ...state, isFetching: action.isfch };\n    }\n    case IS_TOGGLE_FLUN: {\n      return {\n        ...state,\n        toggleFLUN: action.fun\n          ? [...state.toggleFLUN, action.UserID]\n          : state.toggleFLUN.filter((id) => id != action.userId),\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const folow = (usersID) => ({ type: FOLOW, usersID });\nexport const unfolow = (usersID) => ({ type: UNFOLOW, usersID });\nexport const setusers = (users) => ({ type: SET_USERS, users });\nexport const setch = (mpageq) => ({ type: SET_USERS_CH, mpageq });\nexport const setTotalUserCount = (totalUsersCountt) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCountt,\n});\nexport const isFetchings = (isfch) => ({ type: IS_FETCHING, isfch });\nexport const isFLUN = (fun, userId) => ({ type: IS_TOGGLE_FLUN, fun, userId });\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}