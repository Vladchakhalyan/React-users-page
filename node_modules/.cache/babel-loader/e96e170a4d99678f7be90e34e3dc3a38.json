{"ast":null,"code":"const FOLOW = \"FOLOW\";\nconst UNFOLOW = \"UNFOLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_USERS_CH = \"SET_USERS_CH\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nlet initialState = {\n  users: [],\n  mpage: 5,\n  totalUsersCount: 0,\n  mpageq: 1\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLOW:\n      {\n        return { ...state,\n          users: state.users.map(dd => {\n            if (dd.id === action.usersID) {\n              return { ...dd,\n                followed: true\n              };\n            }\n\n            return dd;\n          })\n        };\n      }\n\n    case UNFOLOW:\n      {\n        return { ...state,\n          users: state.users.map(ddd => {\n            if (ddd.id === action.usersID) {\n              return { ...ddd,\n                followed: false\n              };\n            }\n\n            return ddd;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_USERS_CH:\n      {\n        return { ...state,\n          mpageq: action.mpageq\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const fl = usersID => ({\n  type: FOLOW,\n  usersID\n});\nexport const uw = usersID => ({\n  type: UNFOLOW,\n  usersID\n});\nexport const su = users => ({\n  type: SET_USERS,\n  users\n});\nexport const ch = mpageq => ({\n  type: SET_USERS_CH,\n  mpageq\n});\nexport const setTotalUserCountAC = totalUsersCountt => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCountt\n});\nexport default usersReducer;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/redux/users.js"],"names":["FOLOW","UNFOLOW","SET_USERS","SET_USERS_CH","SET_TOTAL_USERS_COUNT","initialState","users","mpage","totalUsersCount","mpageq","usersReducer","state","action","type","map","dd","id","usersID","followed","ddd","count","fl","uw","su","ch","setTotalUserCountAC","totalUsersCountt"],"mappings":"AAAA,MAAMA,KAAK,GAAG,OAAd;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,SAAS,GAAG,WAAlB;AACA,MAAMC,YAAY,GAAG,cAArB;AACA,MAAMC,qBAAqB,GAAG,uBAA9B;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE,EADU;AAEjBC,EAAAA,KAAK,EAAE,CAFU;AAGjBC,EAAAA,eAAe,EAAE,CAHA;AAIjBC,EAAAA,MAAM,EAAE;AAJS,CAAnB;;AAOA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGN,YAAT,EAAuBO,MAAvB,KAAkC;AACrD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKb,KAAL;AAAY;AACV,eAAO,EACL,GAAGW,KADE;AAELL,UAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAiBC,EAAD,IAAQ;AAC7B,gBAAIA,EAAE,CAACC,EAAH,KAAUJ,MAAM,CAACK,OAArB,EAA8B;AAC5B,qBAAO,EAAE,GAAGF,EAAL;AAASG,gBAAAA,QAAQ,EAAE;AAAnB,eAAP;AACD;;AACD,mBAAOH,EAAP;AACD,WALM;AAFF,SAAP;AASD;;AACD,SAAKd,OAAL;AAAc;AACZ,eAAO,EACL,GAAGU,KADE;AAELL,UAAAA,KAAK,EAAEK,KAAK,CAACL,KAAN,CAAYQ,GAAZ,CAAiBK,GAAD,IAAS;AAC9B,gBAAIA,GAAG,CAACH,EAAJ,KAAWJ,MAAM,CAACK,OAAtB,EAA+B;AAC7B,qBAAO,EAAE,GAAGE,GAAL;AAAUD,gBAAAA,QAAQ,EAAE;AAApB,eAAP;AACD;;AACD,mBAAOC,GAAP;AACD,WALM;AAFF,SAAP;AASD;;AACD,SAAKjB,SAAL;AAAgB;AACd,eAAO,EAAE,GAAGS,KAAL;AAAYL,UAAAA,KAAK,EAAEM,MAAM,CAACN;AAA1B,SAAP;AACD;;AACD,SAAKH,YAAL;AAAmB;AACjB,eAAO,EAAE,GAAGQ,KAAL;AAAYF,UAAAA,MAAM,EAAEG,MAAM,CAACH;AAA3B,SAAP;AACD;;AACD,SAAKL,qBAAL;AAA4B;AAC1B,eAAO,EAAE,GAAGO,KAAL;AAAYH,UAAAA,eAAe,EAAEI,MAAM,CAACQ;AAApC,SAAP;AACD;;AACD;AACE,aAAOT,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,OAAO,MAAMU,EAAE,GAAIJ,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAEb,KAAR;AAAeiB,EAAAA;AAAf,CAAd,CAAX;AACP,OAAO,MAAMK,EAAE,GAAIL,OAAD,KAAc;AAAEJ,EAAAA,IAAI,EAAEZ,OAAR;AAAiBgB,EAAAA;AAAjB,CAAd,CAAX;AACP,OAAO,MAAMM,EAAE,GAAIjB,KAAD,KAAY;AAAEO,EAAAA,IAAI,EAAEX,SAAR;AAAmBI,EAAAA;AAAnB,CAAZ,CAAX;AACP,OAAO,MAAMkB,EAAE,GAAIf,MAAD,KAAa;AAAEI,EAAAA,IAAI,EAAEV,YAAR;AAAsBM,EAAAA;AAAtB,CAAb,CAAX;AACP,OAAO,MAAMgB,mBAAmB,GAAIC,gBAAD,KAAuB;AACxDb,EAAAA,IAAI,EAAET,qBADkD;AAExDgB,EAAAA,KAAK,EAAEM;AAFiD,CAAvB,CAA5B;AAKP,eAAehB,YAAf","sourcesContent":["const FOLOW = \"FOLOW\";\nconst UNFOLOW = \"UNFOLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_USERS_CH = \"SET_USERS_CH\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\n\nlet initialState = {\n  users: [],\n  mpage: 5,\n  totalUsersCount: 0,\n  mpageq: 1,\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLOW: {\n      return {\n        ...state,\n        users: state.users.map((dd) => {\n          if (dd.id === action.usersID) {\n            return { ...dd, followed: true };\n          }\n          return dd;\n        }),\n      };\n    }\n    case UNFOLOW: {\n      return {\n        ...state,\n        users: state.users.map((ddd) => {\n          if (ddd.id === action.usersID) {\n            return { ...ddd, followed: false };\n          }\n          return ddd;\n        }),\n      };\n    }\n    case SET_USERS: {\n      return { ...state, users: action.users };\n    }\n    case SET_USERS_CH: {\n      return { ...state, mpageq: action.mpageq };\n    }\n    case SET_TOTAL_USERS_COUNT: {\n      return { ...state, totalUsersCount: action.count };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const fl = (usersID) => ({ type: FOLOW, usersID });\nexport const uw = (usersID) => ({ type: UNFOLOW, usersID });\nexport const su = (users) => ({ type: SET_USERS, users });\nexport const ch = (mpageq) => ({ type: SET_USERS_CH, mpageq });\nexport const setTotalUserCountAC = (totalUsersCountt) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCountt,\n});\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}