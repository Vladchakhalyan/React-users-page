{"ast":null,"code":"import { loginApi } from \"../API/api\";\nconst L_G = \"L_G\";\nlet initialState = {\n  Login: null\n};\n\nconst loginform = (state = initialState, action) => {\n  switch (action.type) {\n    case L_G:\n      return { ...state,\n        Login: action.Login\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const lg = Login => ({\n  type: L_G,\n  Login\n});\nexport const PostLogin = dispatch => {\n  loginApi.getUserLogin(Login).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(lg(Login));\n    }\n  });\n};\n_c = PostLogin;\nexport default loginform;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostLogin\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/redux/LoginSt.js"],"names":["loginApi","L_G","initialState","Login","loginform","state","action","type","lg","PostLogin","dispatch","getUserLogin","then","response","data","resultCode"],"mappings":"AAAA,SAASA,QAAT,QAAyB,YAAzB;AAEA,MAAMC,GAAG,GAAG,KAAZ;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAE;AADU,CAAnB;;AAIA,MAAMC,SAAS,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,GAAL;AACE,aAAO,EAAE,GAAGI,KAAL;AAAYF,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAA1B,OAAP;;AACF;AACE,aAAOE,KAAP;AAJJ;AAMD,CAPD;;AASA,OAAO,MAAMG,EAAE,GAAIL,KAAD,KAAY;AAC5BI,EAAAA,IAAI,EAAEN,GADsB;AAE5BE,EAAAA;AAF4B,CAAZ,CAAX;AAKP,OAAO,MAAMM,SAAS,GAAIC,QAAD,IAAc;AACrCV,EAAAA,QAAQ,CAACW,YAAT,CAAsBR,KAAtB,EAA6BS,IAA7B,CAAmCC,QAAD,IAAc;AAC9C,QAAIA,QAAQ,CAACC,IAAT,CAAcC,UAAd,KAA6B,CAAjC,EAAoC;AAClCL,MAAAA,QAAQ,CAACF,EAAE,CAACL,KAAD,CAAH,CAAR;AACD;AACF,GAJD;AAKD,CANM;KAAMM,S;AAQb,eAAeL,SAAf","sourcesContent":["import { loginApi } from \"../API/api\";\n\nconst L_G = \"L_G\";\n\nlet initialState = {\n  Login: null,\n};\n\nconst loginform = (state = initialState, action) => {\n  switch (action.type) {\n    case L_G:\n      return { ...state, Login: action.Login };\n    default:\n      return state;\n  }\n};\n\nexport const lg = (Login) => ({\n  type: L_G,\n  Login,\n});\n\nexport const PostLogin = (dispatch) => {\n  loginApi.getUserLogin(Login).then((response) => {\n    if (response.data.resultCode === 0) {\n      dispatch(lg(Login));\n    }\n  });\n};\n\nexport default loginform;\n"]},"metadata":{},"sourceType":"module"}