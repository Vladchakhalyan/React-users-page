{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.doc = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */\n\n  function concat(parts) {\n    // access the internals of a document directly.\n    // if(parts.length === 1) {\n    //   // If it's a single document, no need to concat it.\n    //   return parts[0];\n    // }\n    return {\n      type: \"concat\",\n      parts\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function indent$1(contents) {\n    return {\n      type: \"indent\",\n      contents\n    };\n  }\n  /**\n   * @param {number | string} widthOrString\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function align(widthOrString, contents) {\n    return {\n      type: \"align\",\n      contents,\n      n: widthOrString\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function group(contents, opts = {}) {\n    return {\n      type: \"group\",\n      id: opts.id,\n      contents,\n      break: Boolean(opts.shouldBreak),\n      expandedStates: opts.expandedStates\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function dedentToRoot(contents) {\n    return align(Number.NEGATIVE_INFINITY, contents);\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function markAsRoot(contents) {\n    // @ts-ignore - TBD ???:\n    return align({\n      type: \"root\"\n    }, contents);\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function dedent(contents) {\n    return align(-1, contents);\n  }\n  /**\n   * @param {Doc[]} states\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function conditionalGroup(states, opts) {\n    return group(states[0], Object.assign({}, opts, {\n      expandedStates: states\n    }));\n  }\n  /**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */\n\n\n  function fill$1(parts) {\n    return {\n      type: \"fill\",\n      parts\n    };\n  }\n  /**\n   * @param {Doc} [breakContents]\n   * @param {Doc} [flatContents]\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function ifBreak(breakContents, flatContents, opts = {}) {\n    return {\n      type: \"if-break\",\n      breakContents,\n      flatContents,\n      groupId: opts.groupId\n    };\n  }\n  /**\n   * Optimized version of `ifBreak(indent(doc), doc, { groupId: ... })`\n   * @param {Doc} contents\n   * @param {{ groupId: symbol, negate?: boolean }} opts\n   * @returns Doc\n   */\n\n\n  function indentIfBreak(contents, opts) {\n    return {\n      type: \"indent-if-break\",\n      contents,\n      groupId: opts.groupId,\n      negate: opts.negate\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function lineSuffix(contents) {\n    return {\n      type: \"line-suffix\",\n      contents\n    };\n  }\n\n  const lineSuffixBoundary = {\n    type: \"line-suffix-boundary\"\n  };\n  const breakParent = {\n    type: \"break-parent\"\n  };\n  const trim$1 = {\n    type: \"trim\"\n  };\n  const hardlineWithoutBreakParent = {\n    type: \"line\",\n    hard: true\n  };\n  const literallineWithoutBreakParent = {\n    type: \"line\",\n    hard: true,\n    literal: true\n  };\n  const line = {\n    type: \"line\"\n  };\n  const softline = {\n    type: \"line\",\n    soft: true\n  }; // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n  const hardline = concat([hardlineWithoutBreakParent, breakParent]); // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n  const literalline$1 = concat([literallineWithoutBreakParent, breakParent]);\n  const cursor$1 = {\n    type: \"cursor\",\n    placeholder: Symbol(\"cursor\")\n  };\n  /**\n   * @param {Doc} sep\n   * @param {Doc[]} arr\n   * @returns Doc\n   */\n\n  function join(sep, arr) {\n    const res = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (i !== 0) {\n        res.push(sep);\n      }\n\n      res.push(arr[i]);\n    } // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n\n    return concat(res);\n  }\n  /**\n   * @param {Doc} doc\n   * @param {number} size\n   * @param {number} tabWidth\n   */\n\n\n  function addAlignmentToDoc(doc, size, tabWidth) {\n    let aligned = doc;\n\n    if (size > 0) {\n      // Use indent to add tabs for all the levels of tabs we need\n      for (let i = 0; i < Math.floor(size / tabWidth); ++i) {\n        aligned = indent$1(aligned);\n      } // Use align for all the spaces that are needed\n\n\n      aligned = align(size % tabWidth, aligned); // size is absolute from 0 and not relative to the current\n      // indentation, so we use -Infinity to reset the indentation to 0\n\n      aligned = align(Number.NEGATIVE_INFINITY, aligned);\n    }\n\n    return aligned;\n  }\n\n  function label(label, contents) {\n    return {\n      type: \"label\",\n      label,\n      contents\n    };\n  }\n\n  var docBuilders = {\n    concat,\n    join,\n    line,\n    softline,\n    hardline,\n    literalline: literalline$1,\n    group,\n    conditionalGroup,\n    fill: fill$1,\n    lineSuffix,\n    lineSuffixBoundary,\n    cursor: cursor$1,\n    breakParent,\n    ifBreak,\n    trim: trim$1,\n    indent: indent$1,\n    indentIfBreak,\n    align,\n    addAlignmentToDoc,\n    markAsRoot,\n    dedentToRoot,\n    dedent,\n    hardlineWithoutBreakParent,\n    literallineWithoutBreakParent,\n    label\n  };\n\n  var ansiRegex = ({\n    onlyFirst = false\n  } = {}) => {\n    const pattern = ['[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)', '(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'].join('|');\n    return new RegExp(pattern, onlyFirst ? undefined : 'g');\n  };\n\n  var stripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n  /* eslint-disable yoda */\n\n\n  const isFullwidthCodePoint = codePoint => {\n    if (Number.isNaN(codePoint)) {\n      return false;\n    } // Code points are derived from:\n    // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\n\n    if (codePoint >= 0x1100 && (codePoint <= 0x115F || // Hangul Jamo\n    codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n    codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n    // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n    0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n    0x3250 <= codePoint && codePoint <= 0x4DBF || // CJK Unified Ideographs .. Yi Radicals\n    0x4E00 <= codePoint && codePoint <= 0xA4C6 || // Hangul Jamo Extended-A\n    0xA960 <= codePoint && codePoint <= 0xA97C || // Hangul Syllables\n    0xAC00 <= codePoint && codePoint <= 0xD7A3 || // CJK Compatibility Ideographs\n    0xF900 <= codePoint && codePoint <= 0xFAFF || // Vertical Forms\n    0xFE10 <= codePoint && codePoint <= 0xFE19 || // CJK Compatibility Forms .. Small Form Variants\n    0xFE30 <= codePoint && codePoint <= 0xFE6B || // Halfwidth and Fullwidth Forms\n    0xFF01 <= codePoint && codePoint <= 0xFF60 || 0xFFE0 <= codePoint && codePoint <= 0xFFE6 || // Kana Supplement\n    0x1B000 <= codePoint && codePoint <= 0x1B001 || // Enclosed Ideographic Supplement\n    0x1F200 <= codePoint && codePoint <= 0x1F251 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n    0x20000 <= codePoint && codePoint <= 0x3FFFD)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var isFullwidthCodePoint_1 = isFullwidthCodePoint;\n  var _default$1 = isFullwidthCodePoint;\n  isFullwidthCodePoint_1.default = _default$1;\n\n  var emojiRegex = function () {\n    // https://mths.be/emoji\n    return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n  };\n\n  const stringWidth = string => {\n    if (typeof string !== 'string' || string.length === 0) {\n      return 0;\n    }\n\n    string = stripAnsi(string);\n\n    if (string.length === 0) {\n      return 0;\n    }\n\n    string = string.replace(emojiRegex(), '  ');\n    let width = 0;\n\n    for (let i = 0; i < string.length; i++) {\n      const code = string.codePointAt(i); // Ignore control characters\n\n      if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {\n        continue;\n      } // Ignore combining characters\n\n\n      if (code >= 0x300 && code <= 0x36F) {\n        continue;\n      } // Surrogates\n\n\n      if (code > 0xFFFF) {\n        i++;\n      }\n\n      width += isFullwidthCodePoint_1(code) ? 2 : 1;\n    }\n\n    return width;\n  };\n\n  var stringWidth_1 = stringWidth; // TODO: remove this in the next major version\n\n  var _default = stringWidth;\n  stringWidth_1.default = _default;\n\n  var escapeStringRegexp = string => {\n    if (typeof string !== 'string') {\n      throw new TypeError('Expected a string');\n    } // Escape characters with special meaning either inside or outside character sets.\n    // Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n    return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n  };\n\n  const getLast$1 = arr => arr[arr.length - 1];\n\n  var getLast_1 = getLast$1;\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) {\n      raw = strings.slice(0);\n    }\n\n    return Object.freeze(Object.defineProperties(strings, {\n      raw: {\n        value: Object.freeze(raw)\n      }\n    }));\n  }\n  /**\n   * The inverse of `_.toPairs`; this method returns an object composed\n   * from key-value `pairs`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} pairs The key-value pairs.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * _.fromPairs([['a', 1], ['b', 2]]);\n   * // => { 'a': 1, 'b': 2 }\n   */\n\n\n  function fromPairs(pairs) {\n    var index = -1,\n        length = pairs == null ? 0 : pairs.length,\n        result = {};\n\n    while (++index < length) {\n      var pair = pairs[index];\n      result[pair[0]] = pair[1];\n    }\n\n    return result;\n  }\n\n  var fromPairs_1 = fromPairs;\n  var global = typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {}; // shim for using process in browser\n  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n  function defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n  }\n\n  function defaultClearTimeout() {\n    throw new Error('clearTimeout has not been defined');\n  }\n\n  var cachedSetTimeout = defaultSetTimout;\n  var cachedClearTimeout = defaultClearTimeout;\n\n  if (typeof global.setTimeout === 'function') {\n    cachedSetTimeout = setTimeout;\n  }\n\n  if (typeof global.clearTimeout === 'function') {\n    cachedClearTimeout = clearTimeout;\n  }\n\n  function runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n      //normal enviroments in sane situations\n      return setTimeout(fun, 0);\n    } // if setTimeout wasn't available but was latter defined\n\n\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n      cachedSetTimeout = setTimeout;\n      return setTimeout(fun, 0);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedSetTimeout(fun, 0);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n        return cachedSetTimeout.call(null, fun, 0);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n        return cachedSetTimeout.call(this, fun, 0);\n      }\n    }\n  }\n\n  function runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n      //normal enviroments in sane situations\n      return clearTimeout(marker);\n    } // if clearTimeout wasn't available but was latter defined\n\n\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n      cachedClearTimeout = clearTimeout;\n      return clearTimeout(marker);\n    }\n\n    try {\n      // when when somebody has screwed with setTimeout but no I.E. maddness\n      return cachedClearTimeout(marker);\n    } catch (e) {\n      try {\n        // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n        return cachedClearTimeout.call(null, marker);\n      } catch (e) {\n        // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n        // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n        return cachedClearTimeout.call(this, marker);\n      }\n    }\n  }\n\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n      return;\n    }\n\n    draining = false;\n\n    if (currentQueue.length) {\n      queue = currentQueue.concat(queue);\n    } else {\n      queueIndex = -1;\n    }\n\n    if (queue.length) {\n      drainQueue();\n    }\n  }\n\n  function drainQueue() {\n    if (draining) {\n      return;\n    }\n\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n    var len = queue.length;\n\n    while (len) {\n      currentQueue = queue;\n      queue = [];\n\n      while (++queueIndex < len) {\n        if (currentQueue) {\n          currentQueue[queueIndex].run();\n        }\n      }\n\n      queueIndex = -1;\n      len = queue.length;\n    }\n\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n  }\n\n  function nextTick(fun) {\n    var args = new Array(arguments.length - 1);\n\n    if (arguments.length > 1) {\n      for (var i = 1; i < arguments.length; i++) {\n        args[i - 1] = arguments[i];\n      }\n    }\n\n    queue.push(new Item(fun, args));\n\n    if (queue.length === 1 && !draining) {\n      runTimeout(drainQueue);\n    }\n  } // v8 likes predictible objects\n\n\n  function Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n  }\n\n  Item.prototype.run = function () {\n    this.fun.apply(null, this.array);\n  };\n\n  var title = 'browser';\n  var platform = 'browser';\n  var browser$1 = true;\n  var env = {};\n  var argv = [];\n  var version$1 = ''; // empty string to avoid regexp issues\n\n  var versions = {};\n  var release = {};\n  var config = {};\n\n  function noop() {}\n\n  var on = noop;\n  var addListener = noop;\n  var once = noop;\n  var off = noop;\n  var removeListener = noop;\n  var removeAllListeners = noop;\n  var emit = noop;\n\n  function binding(name) {\n    throw new Error('process.binding is not supported');\n  }\n\n  function cwd() {\n    return '/';\n  }\n\n  function chdir(dir) {\n    throw new Error('process.chdir is not supported');\n  }\n\n  function umask() {\n    return 0;\n  } // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\n\n\n  var performance = global.performance || {};\n\n  var performanceNow = performance.now || performance.mozNow || performance.msNow || performance.oNow || performance.webkitNow || function () {\n    return new Date().getTime();\n  }; // generate timestamp or delta\n  // see http://nodejs.org/api/process.html#process_process_hrtime\n\n\n  function hrtime(previousTimestamp) {\n    var clocktime = performanceNow.call(performance) * 1e-3;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor(clocktime % 1 * 1e9);\n\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0];\n      nanoseconds = nanoseconds - previousTimestamp[1];\n\n      if (nanoseconds < 0) {\n        seconds--;\n        nanoseconds += 1e9;\n      }\n    }\n\n    return [seconds, nanoseconds];\n  }\n\n  var startTime = new Date();\n\n  function uptime() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime;\n    return dif / 1000;\n  }\n\n  var browser$1$1 = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser$1,\n    env: env,\n    argv: argv,\n    version: version$1,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime\n  };\n  const debug = typeof browser$1$1 === 'object' && browser$1$1.env && browser$1$1.env.NODE_DEBUG && /\\bsemver\\b/i.test(browser$1$1.env.NODE_DEBUG) ? (...args) => console.error('SEMVER', ...args) : () => {};\n  var debug_1 = debug; // Note: this is the semver.org version of the spec that it implements\n  // Not necessarily the package version of this code.\n\n  const SEMVER_SPEC_VERSION = '2.0.0';\n  const MAX_LENGTH$1 = 256;\n  const MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */\n  9007199254740991; // Max safe segment length for coercion.\n\n  const MAX_SAFE_COMPONENT_LENGTH = 16;\n  var constants = {\n    SEMVER_SPEC_VERSION,\n    MAX_LENGTH: MAX_LENGTH$1,\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER$1,\n    MAX_SAFE_COMPONENT_LENGTH\n  };\n\n  function createCommonjsModule(fn) {\n    var module = {\n      exports: {}\n    };\n    return fn(module, module.exports), module.exports;\n  }\n\n  var re_1 = createCommonjsModule(function (module, exports) {\n    const {\n      MAX_SAFE_COMPONENT_LENGTH\n    } = constants;\n    exports = module.exports = {}; // The actual regexps go on exports.re\n\n    const re = exports.re = [];\n    const src = exports.src = [];\n    const t = exports.t = {};\n    let R = 0;\n\n    const createToken = (name, value, isGlobal) => {\n      const index = R++;\n      debug_1(index, value);\n      t[name] = index;\n      src[index] = value;\n      re[index] = new RegExp(value, isGlobal ? 'g' : undefined);\n    }; // The following Regular Expressions can be used for tokenizing,\n    // validating, and parsing SemVer version strings.\n    // ## Numeric Identifier\n    // A single `0`, or a non-zero digit followed by zero or more digits.\n\n\n    createToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*');\n    createToken('NUMERICIDENTIFIERLOOSE', '[0-9]+'); // ## Non-numeric Identifier\n    // Zero or more digits, followed by a letter or hyphen, and then zero or\n    // more letters, digits, or hyphens.\n\n    createToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'); // ## Main Version\n    // Three dot-separated numeric identifiers.\n\n    createToken('MAINVERSION', \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\"));\n    createToken('MAINVERSIONLOOSE', \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\")); // ## Pre-release Version Identifier\n    // A numeric identifier, or a non-numeric identifier.\n\n    createToken('PRERELEASEIDENTIFIER', \"(?:\".concat(src[t.NUMERICIDENTIFIER], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\"));\n    createToken('PRERELEASEIDENTIFIERLOOSE', \"(?:\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\")); // ## Pre-release Version\n    // Hyphen, followed by one or more dot-separated pre-release version\n    // identifiers.\n\n    createToken('PRERELEASE', \"(?:-(\".concat(src[t.PRERELEASEIDENTIFIER], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIER], \")*))\"));\n    createToken('PRERELEASELOOSE', \"(?:-?(\".concat(src[t.PRERELEASEIDENTIFIERLOOSE], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIERLOOSE], \")*))\")); // ## Build Metadata Identifier\n    // Any combination of digits, letters, or hyphens.\n\n    createToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+'); // ## Build Metadata\n    // Plus sign, followed by one or more period-separated build metadata\n    // identifiers.\n\n    createToken('BUILD', \"(?:\\\\+(\".concat(src[t.BUILDIDENTIFIER], \"(?:\\\\.\").concat(src[t.BUILDIDENTIFIER], \")*))\")); // ## Full Version String\n    // A main version, followed optionally by a pre-release version and\n    // build metadata.\n    // Note that the only major, minor, patch, and pre-release sections of\n    // the version string are capturing groups.  The build metadata is not a\n    // capturing group, because it should not ever be used in version\n    // comparison.\n\n    createToken('FULLPLAIN', \"v?\".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE], \"?\").concat(src[t.BUILD], \"?\"));\n    createToken('FULL', \"^\".concat(src[t.FULLPLAIN], \"$\")); // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n    // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n    // common in the npm registry.\n\n    createToken('LOOSEPLAIN', \"[v=\\\\s]*\".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE], \"?\").concat(src[t.BUILD], \"?\"));\n    createToken('LOOSE', \"^\".concat(src[t.LOOSEPLAIN], \"$\"));\n    createToken('GTLT', '((?:<|>)?=?)'); // Something like \"2.*\" or \"1.2.x\".\n    // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n    // Only the first item is strictly required.\n\n    createToken('XRANGEIDENTIFIERLOOSE', \"\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|x|X|\\\\*\"));\n    createToken('XRANGEIDENTIFIER', \"\".concat(src[t.NUMERICIDENTIFIER], \"|x|X|\\\\*\"));\n    createToken('XRANGEPLAIN', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\".concat(src[t.PRERELEASE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\n    createToken('XRANGEPLAINLOOSE', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\".concat(src[t.PRERELEASELOOSE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\n    createToken('XRANGE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('XRANGELOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Coercion.\n    // Extract anything that could conceivably be a part of a valid semver\n\n    createToken('COERCE', \"\".concat('(^|[^\\\\d])' + '(\\\\d{1,').concat(MAX_SAFE_COMPONENT_LENGTH, \"})\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:$|[^\\\\d])\");\n    createToken('COERCERTL', src[t.COERCE], true); // Tilde ranges.\n    // Meaning is \"reasonably at or greater than\"\n\n    createToken('LONETILDE', '(?:~>?)');\n    createToken('TILDETRIM', \"(\\\\s*)\".concat(src[t.LONETILDE], \"\\\\s+\"), true);\n    exports.tildeTrimReplace = '$1~';\n    createToken('TILDE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('TILDELOOSE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Caret ranges.\n    // Meaning is \"at least and backwards compatible with\"\n\n    createToken('LONECARET', '(?:\\\\^)');\n    createToken('CARETTRIM', \"(\\\\s*)\".concat(src[t.LONECARET], \"\\\\s+\"), true);\n    exports.caretTrimReplace = '$1^';\n    createToken('CARET', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('CARETLOOSE', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\n    createToken('COMPARATORLOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \")$|^$\"));\n    createToken('COMPARATOR', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.FULLPLAIN], \")$|^$\")); // An expression to strip any whitespace between the gtlt and the thing\n    // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\n    createToken('COMPARATORTRIM', \"(\\\\s*)\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \"|\").concat(src[t.XRANGEPLAIN], \")\"), true);\n    exports.comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n    // Note that these all use the loose form, because they'll be\n    // checked against either the strict or loose comparator form\n    // later.\n\n    createToken('HYPHENRANGE', \"^\\\\s*(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s*$\");\n    createToken('HYPHENRANGELOOSE', \"^\\\\s*(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s*$\"); // Star ranges basically just allow anything at all.\n\n    createToken('STAR', '(<|>)?=?\\\\s*\\\\*'); // >=0.0.0 is like a star\n\n    createToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$');\n    createToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$');\n  }); // parse out just the options we care about so we always get a consistent\n  // obj with keys in a consistent order.\n\n  const opts = ['includePrerelease', 'loose', 'rtl'];\n\n  const parseOptions = options => !options ? {} : typeof options !== 'object' ? {\n    loose: true\n  } : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true;\n    return options;\n  }, {});\n\n  var parseOptions_1 = parseOptions;\n  const numeric = /^[0-9]+$/;\n\n  const compareIdentifiers$1 = (a, b) => {\n    const anum = numeric.test(a);\n    const bnum = numeric.test(b);\n\n    if (anum && bnum) {\n      a = +a;\n      b = +b;\n    }\n\n    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n  };\n\n  const rcompareIdentifiers = (a, b) => compareIdentifiers$1(b, a);\n\n  var identifiers = {\n    compareIdentifiers: compareIdentifiers$1,\n    rcompareIdentifiers\n  };\n  const {\n    MAX_LENGTH,\n    MAX_SAFE_INTEGER\n  } = constants;\n  const {\n    re,\n    t\n  } = re_1;\n  const {\n    compareIdentifiers\n  } = identifiers;\n\n  class SemVer {\n    constructor(version, options) {\n      options = parseOptions_1(options);\n\n      if (version instanceof SemVer) {\n        if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n          return version;\n        } else {\n          version = version.version;\n        }\n      } else if (typeof version !== 'string') {\n        throw new TypeError(\"Invalid Version: \".concat(version));\n      }\n\n      if (version.length > MAX_LENGTH) {\n        throw new TypeError(\"version is longer than \".concat(MAX_LENGTH, \" characters\"));\n      }\n\n      debug_1('SemVer', version, options);\n      this.options = options;\n      this.loose = !!options.loose; // this isn't actually relevant for versions, but keep it so that we\n      // don't run into trouble passing this.options around.\n\n      this.includePrerelease = !!options.includePrerelease;\n      const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n\n      if (!m) {\n        throw new TypeError(\"Invalid Version: \".concat(version));\n      }\n\n      this.raw = version; // these are actually numbers\n\n      this.major = +m[1];\n      this.minor = +m[2];\n      this.patch = +m[3];\n\n      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n        throw new TypeError('Invalid major version');\n      }\n\n      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n        throw new TypeError('Invalid minor version');\n      }\n\n      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n        throw new TypeError('Invalid patch version');\n      } // numberify any prerelease numeric ids\n\n\n      if (!m[4]) {\n        this.prerelease = [];\n      } else {\n        this.prerelease = m[4].split('.').map(id => {\n          if (/^[0-9]+$/.test(id)) {\n            const num = +id;\n\n            if (num >= 0 && num < MAX_SAFE_INTEGER) {\n              return num;\n            }\n          }\n\n          return id;\n        });\n      }\n\n      this.build = m[5] ? m[5].split('.') : [];\n      this.format();\n    }\n\n    format() {\n      this.version = \"\".concat(this.major, \".\").concat(this.minor, \".\").concat(this.patch);\n\n      if (this.prerelease.length) {\n        this.version += \"-\".concat(this.prerelease.join('.'));\n      }\n\n      return this.version;\n    }\n\n    toString() {\n      return this.version;\n    }\n\n    compare(other) {\n      debug_1('SemVer.compare', this.version, this.options, other);\n\n      if (!(other instanceof SemVer)) {\n        if (typeof other === 'string' && other === this.version) {\n          return 0;\n        }\n\n        other = new SemVer(other, this.options);\n      }\n\n      if (other.version === this.version) {\n        return 0;\n      }\n\n      return this.compareMain(other) || this.comparePre(other);\n    }\n\n    compareMain(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n\n    comparePre(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      } // NOT having a prerelease is > having one\n\n\n      if (this.prerelease.length && !other.prerelease.length) {\n        return -1;\n      } else if (!this.prerelease.length && other.prerelease.length) {\n        return 1;\n      } else if (!this.prerelease.length && !other.prerelease.length) {\n        return 0;\n      }\n\n      let i = 0;\n\n      do {\n        const a = this.prerelease[i];\n        const b = other.prerelease[i];\n        debug_1('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    }\n\n    compareBuild(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      let i = 0;\n\n      do {\n        const a = this.build[i];\n        const b = other.build[i];\n        debug_1('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    } // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n\n\n    inc(release, identifier) {\n      switch (release) {\n        case 'premajor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor = 0;\n          this.major++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'preminor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'prepatch':\n          // If this is already a prerelease, it will bump to the next version\n          // drop any prereleases that might already exist, since they are not\n          // relevant at this point.\n          this.prerelease.length = 0;\n          this.inc('patch', identifier);\n          this.inc('pre', identifier);\n          break;\n        // If the input is a non-prerelease version, this acts the same as\n        // prepatch.\n\n        case 'prerelease':\n          if (this.prerelease.length === 0) {\n            this.inc('patch', identifier);\n          }\n\n          this.inc('pre', identifier);\n          break;\n\n        case 'major':\n          // If this is a pre-major version, bump up to the same major version.\n          // Otherwise increment major.\n          // 1.0.0-5 bumps to 1.0.0\n          // 1.1.0 bumps to 2.0.0\n          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n            this.major++;\n          }\n\n          this.minor = 0;\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'minor':\n          // If this is a pre-minor version, bump up to the same minor version.\n          // Otherwise increment minor.\n          // 1.2.0-5 bumps to 1.2.0\n          // 1.2.1 bumps to 1.3.0\n          if (this.patch !== 0 || this.prerelease.length === 0) {\n            this.minor++;\n          }\n\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'patch':\n          // If this is not a pre-release version, it will increment the patch.\n          // If it is a pre-release it will bump up to the same patch version.\n          // 1.2.0-5 patches to 1.2.0\n          // 1.2.0 patches to 1.2.1\n          if (this.prerelease.length === 0) {\n            this.patch++;\n          }\n\n          this.prerelease = [];\n          break;\n        // This probably shouldn't be used publicly.\n        // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n\n        case 'pre':\n          if (this.prerelease.length === 0) {\n            this.prerelease = [0];\n          } else {\n            let i = this.prerelease.length;\n\n            while (--i >= 0) {\n              if (typeof this.prerelease[i] === 'number') {\n                this.prerelease[i]++;\n                i = -2;\n              }\n            }\n\n            if (i === -1) {\n              // didn't increment anything\n              this.prerelease.push(0);\n            }\n          }\n\n          if (identifier) {\n            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n            if (this.prerelease[0] === identifier) {\n              if (isNaN(this.prerelease[1])) {\n                this.prerelease = [identifier, 0];\n              }\n            } else {\n              this.prerelease = [identifier, 0];\n            }\n          }\n\n          break;\n\n        default:\n          throw new Error(\"invalid increment argument: \".concat(release));\n      }\n\n      this.format();\n      this.raw = this.version;\n      return this;\n    }\n\n  }\n\n  var semver$1 = SemVer;\n\n  const compare = (a, b, loose) => new semver$1(a, loose).compare(new semver$1(b, loose));\n\n  var compare_1 = compare;\n\n  const lt = (a, b, loose) => compare_1(a, b, loose) < 0;\n\n  var lt_1 = lt;\n\n  const gte = (a, b, loose) => compare_1(a, b, loose) >= 0;\n\n  var gte_1 = gte;\n\n  var arrayify = (object, keyName) => Object.entries(object).map(([key, value]) => Object.assign({\n    [keyName]: key\n  }, value));\n\n  var name = \"prettier\";\n  var version = \"2.3.0\";\n  var description = \"Prettier is an opinionated code formatter\";\n  var bin = \"./bin/prettier.js\";\n  var repository = \"prettier/prettier\";\n  var homepage = \"https://prettier.io\";\n  var author = \"James Long\";\n  var license = \"MIT\";\n  var main = \"./index.js\";\n  var browser = \"./standalone.js\";\n  var unpkg = \"./standalone.js\";\n  var engines = {\n    node: \">=10.13.0\"\n  };\n  var files = [\"index.js\", \"standalone.js\", \"src\", \"bin\"];\n  var dependencies = {\n    \"@angular/compiler\": \"11.2.13\",\n    \"@babel/code-frame\": \"7.12.13\",\n    \"@babel/parser\": \"7.14.1\",\n    \"@glimmer/syntax\": \"0.79.0\",\n    \"@iarna/toml\": \"2.2.5\",\n    \"@typescript-eslint/typescript-estree\": \"4.22.0\",\n    \"angular-estree-parser\": \"2.3.0\",\n    \"angular-html-parser\": \"1.8.0\",\n    camelcase: \"6.2.0\",\n    chalk: \"4.1.1\",\n    \"ci-info\": \"3.1.1\",\n    \"cjk-regex\": \"2.0.1\",\n    cosmiconfig: \"7.0.0\",\n    dashify: \"2.0.0\",\n    diff: \"5.0.0\",\n    editorconfig: \"0.15.3\",\n    \"editorconfig-to-prettier\": \"0.2.0\",\n    \"escape-string-regexp\": \"4.0.0\",\n    espree: \"7.3.1\",\n    esutils: \"2.0.3\",\n    \"fast-glob\": \"3.2.5\",\n    \"fast-json-stable-stringify\": \"2.1.0\",\n    \"find-parent-dir\": \"0.3.0\",\n    \"flow-parser\": \"0.150.1\",\n    \"get-stdin\": \"8.0.0\",\n    globby: \"11.0.3\",\n    graphql: \"15.5.0\",\n    \"html-element-attributes\": \"2.3.0\",\n    \"html-styles\": \"1.0.0\",\n    \"html-tag-names\": \"1.1.5\",\n    \"html-void-elements\": \"1.0.5\",\n    ignore: \"4.0.6\",\n    \"jest-docblock\": \"26.0.0\",\n    json5: \"2.2.0\",\n    leven: \"3.1.0\",\n    \"lines-and-columns\": \"1.1.6\",\n    \"linguist-languages\": \"7.14.0\",\n    lodash: \"4.17.21\",\n    mem: \"8.1.1\",\n    meriyah: \"4.1.5\",\n    minimatch: \"3.0.4\",\n    minimist: \"1.2.5\",\n    \"n-readlines\": \"1.0.1\",\n    outdent: \"0.8.0\",\n    \"parse-srcset\": \"ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee\",\n    \"please-upgrade-node\": \"3.2.0\",\n    \"postcss-less\": \"3.1.4\",\n    \"postcss-media-query-parser\": \"0.2.3\",\n    \"postcss-scss\": \"2.1.1\",\n    \"postcss-selector-parser\": \"2.2.3\",\n    \"postcss-values-parser\": \"2.0.1\",\n    \"regexp-util\": \"1.2.2\",\n    \"remark-footnotes\": \"2.0.0\",\n    \"remark-math\": \"3.0.1\",\n    \"remark-parse\": \"8.0.3\",\n    resolve: \"1.20.0\",\n    semver: \"7.3.5\",\n    \"string-width\": \"4.2.2\",\n    \"strip-ansi\": \"6.0.0\",\n    typescript: \"4.2.4\",\n    \"unicode-regex\": \"3.0.0\",\n    unified: \"9.2.1\",\n    vnopts: \"1.0.2\",\n    wcwidth: \"1.0.1\",\n    \"yaml-unist-parser\": \"1.3.1\"\n  };\n  var devDependencies = {\n    \"@babel/core\": \"7.14.0\",\n    \"@babel/preset-env\": \"7.14.1\",\n    \"@babel/types\": \"7.14.1\",\n    \"@glimmer/reference\": \"0.79.0\",\n    \"@rollup/plugin-alias\": \"3.1.2\",\n    \"@rollup/plugin-babel\": \"5.3.0\",\n    \"@rollup/plugin-commonjs\": \"18.1.0\",\n    \"@rollup/plugin-json\": \"4.1.0\",\n    \"@rollup/plugin-node-resolve\": \"13.0.0\",\n    \"@rollup/plugin-replace\": \"2.4.2\",\n    \"@types/estree\": \"0.0.47\",\n    \"@types/node\": \"15.0.1\",\n    \"babel-jest\": \"26.6.3\",\n    \"babel-loader\": \"8.2.2\",\n    benchmark: \"2.1.4\",\n    \"builtin-modules\": \"3.2.0\",\n    \"cross-env\": \"7.0.3\",\n    cspell: \"4.2.8\",\n    eslint: \"7.26.0\",\n    \"eslint-config-prettier\": \"8.3.0\",\n    \"eslint-formatter-friendly\": \"7.0.0\",\n    \"eslint-plugin-import\": \"2.22.1\",\n    \"eslint-plugin-jest\": \"24.3.6\",\n    \"eslint-plugin-prettier-internal-rules\": \"link:scripts/tools/eslint-plugin-prettier-internal-rules\",\n    \"eslint-plugin-react\": \"7.23.2\",\n    \"eslint-plugin-unicorn\": \"31.0.0\",\n    execa: \"5.0.0\",\n    jest: \"26.6.3\",\n    \"jest-snapshot-serializer-ansi\": \"1.0.0\",\n    \"jest-snapshot-serializer-raw\": \"1.2.0\",\n    \"jest-watch-typeahead\": \"0.6.3\",\n    \"npm-run-all\": \"4.1.5\",\n    \"path-browserify\": \"1.0.1\",\n    prettier: \"2.2.1\",\n    \"pretty-bytes\": \"5.6.0\",\n    rimraf: \"3.0.2\",\n    rollup: \"2.47.0\",\n    \"rollup-plugin-polyfill-node\": \"0.6.2\",\n    \"rollup-plugin-terser\": \"7.0.2\",\n    shelljs: \"0.8.4\",\n    \"snapshot-diff\": \"0.8.1\",\n    \"synchronous-promise\": \"2.0.15\",\n    tempy: \"1.0.1\",\n    \"terser-webpack-plugin\": \"5.1.1\",\n    webpack: \"5.36.2\"\n  };\n  var scripts = {\n    prepublishOnly: \"echo \\\"Error: must publish from dist/\\\" && exit 1\",\n    \"prepare-release\": \"yarn && yarn build && yarn test:dist\",\n    test: \"jest\",\n    \"test:dev-package\": \"cross-env INSTALL_PACKAGE=1 jest\",\n    \"test:dist\": \"cross-env NODE_ENV=production jest\",\n    \"test:dist-standalone\": \"cross-env NODE_ENV=production TEST_STANDALONE=1 jest\",\n    \"test:integration\": \"jest tests/integration\",\n    \"perf:repeat\": \"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n    \"perf:repeat-inspect\": \"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n    \"perf:benchmark\": \"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n    lint: \"run-p lint:*\",\n    \"lint:typecheck\": \"tsc\",\n    \"lint:eslint\": \"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly\",\n    \"lint:changelog\": \"node ./scripts/lint-changelog.js\",\n    \"lint:prettier\": \"prettier . \\\"!test*\\\" --check\",\n    \"lint:dist\": \"eslint --no-eslintrc --no-ignore --no-inline-config --env=es6,browser --parser-options=ecmaVersion:2018 \\\"dist/!(bin-prettier|index|third-party).js\\\"\",\n    \"lint:spellcheck\": \"cspell \\\"**/*\\\" \\\".github/**/*\\\"\",\n    \"lint:deps\": \"node ./scripts/check-deps.js\",\n    fix: \"run-s fix:eslint fix:prettier\",\n    \"fix:eslint\": \"yarn lint:eslint --fix\",\n    \"fix:prettier\": \"yarn lint:prettier --write\",\n    build: \"node --max-old-space-size=3072 ./scripts/build/build.js\",\n    \"build-docs\": \"node ./scripts/build-docs.js\"\n  };\n  var require$$3 = {\n    name: name,\n    version: version,\n    description: description,\n    bin: bin,\n    repository: repository,\n    homepage: homepage,\n    author: author,\n    license: license,\n    main: main,\n    browser: browser,\n    unpkg: unpkg,\n    engines: engines,\n    files: files,\n    dependencies: dependencies,\n    devDependencies: devDependencies,\n    scripts: scripts\n  };\n  var lib = createCommonjsModule(function (module, exports) {\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.outdent = void 0; // In the absence of a WeakSet or WeakMap implementation, don't break, but don't cache either.\n\n    function noop() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    }\n\n    function createWeakMap() {\n      if (typeof WeakMap !== \"undefined\") {\n        return new WeakMap();\n      } else {\n        return fakeSetOrMap();\n      }\n    }\n    /**\n     * Creates and returns a no-op implementation of a WeakMap / WeakSet that never stores anything.\n     */\n\n\n    function fakeSetOrMap() {\n      return {\n        add: noop,\n        delete: noop,\n        get: noop,\n        set: noop,\n        has: function (k) {\n          return false;\n        }\n      };\n    } // Safe hasOwnProperty\n\n\n    var hop = Object.prototype.hasOwnProperty;\n\n    var has = function (obj, prop) {\n      return hop.call(obj, prop);\n    }; // Copy all own enumerable properties from source to target\n\n\n    function extend(target, source) {\n      for (var prop in source) {\n        if (has(source, prop)) {\n          target[prop] = source[prop];\n        }\n      }\n\n      return target;\n    }\n\n    var reLeadingNewline = /^[ \\t]*(?:\\r\\n|\\r|\\n)/;\n    var reTrailingNewline = /(?:\\r\\n|\\r|\\n)[ \\t]*$/;\n    var reStartsWithNewlineOrIsEmpty = /^(?:[\\r\\n]|$)/;\n    var reDetectIndentation = /(?:\\r\\n|\\r|\\n)([ \\t]*)(?:[^ \\t\\r\\n]|$)/;\n    var reOnlyWhitespaceWithAtLeastOneNewline = /^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/;\n\n    function _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options) {\n      // If first interpolated value is a reference to outdent,\n      // determine indentation level from the indentation of the interpolated value.\n      var indentationLevel = 0;\n      var match = strings[0].match(reDetectIndentation);\n\n      if (match) {\n        indentationLevel = match[1].length;\n      }\n\n      var reSource = \"(\\\\r\\\\n|\\\\r|\\\\n).{0,\" + indentationLevel + \"}\";\n      var reMatchIndent = new RegExp(reSource, \"g\");\n\n      if (firstInterpolatedValueSetsIndentationLevel) {\n        strings = strings.slice(1);\n      }\n\n      var newline = options.newline,\n          trimLeadingNewline = options.trimLeadingNewline,\n          trimTrailingNewline = options.trimTrailingNewline;\n      var normalizeNewlines = typeof newline === \"string\";\n      var l = strings.length;\n      var outdentedStrings = strings.map(function (v, i) {\n        // Remove leading indentation from all lines\n        v = v.replace(reMatchIndent, \"$1\"); // Trim a leading newline from the first string\n\n        if (i === 0 && trimLeadingNewline) {\n          v = v.replace(reLeadingNewline, \"\");\n        } // Trim a trailing newline from the last string\n\n\n        if (i === l - 1 && trimTrailingNewline) {\n          v = v.replace(reTrailingNewline, \"\");\n        } // Normalize newlines\n\n\n        if (normalizeNewlines) {\n          v = v.replace(/\\r\\n|\\n|\\r/g, function (_) {\n            return newline;\n          });\n        }\n\n        return v;\n      });\n      return outdentedStrings;\n    }\n\n    function concatStringsAndValues(strings, values) {\n      var ret = \"\";\n\n      for (var i = 0, l = strings.length; i < l; i++) {\n        ret += strings[i];\n\n        if (i < l - 1) {\n          ret += values[i];\n        }\n      }\n\n      return ret;\n    }\n\n    function isTemplateStringsArray(v) {\n      return has(v, \"raw\") && has(v, \"length\");\n    }\n    /**\n     * It is assumed that opts will not change.  If this is a problem, clone your options object and pass the clone to\n     * makeInstance\n     * @param options\n     * @return {outdent}\n     */\n\n\n    function createInstance(options) {\n      /** Cache of pre-processed template literal arrays */\n      var arrayAutoIndentCache = createWeakMap();\n      /**\n         * Cache of pre-processed template literal arrays, where first interpolated value is a reference to outdent,\n         * before interpolated values are injected.\n         */\n\n      var arrayFirstInterpSetsIndentCache = createWeakMap();\n\n      function outdent(stringsOrOptions) {\n        var values = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          values[_i - 1] = arguments[_i];\n        }\n        /* tslint:enable:no-shadowed-variable */\n\n\n        if (isTemplateStringsArray(stringsOrOptions)) {\n          var strings = stringsOrOptions; // Is first interpolated value a reference to outdent, alone on its own line, without any preceding non-whitespace?\n\n          var firstInterpolatedValueSetsIndentationLevel = (values[0] === outdent || values[0] === defaultOutdent) && reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) && reStartsWithNewlineOrIsEmpty.test(strings[1]); // Perform outdentation\n\n          var cache = firstInterpolatedValueSetsIndentationLevel ? arrayFirstInterpSetsIndentCache : arrayAutoIndentCache;\n          var renderedArray = cache.get(strings);\n\n          if (!renderedArray) {\n            renderedArray = _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options);\n            cache.set(strings, renderedArray);\n          }\n          /** If no interpolated values, skip concatenation step */\n\n\n          if (values.length === 0) {\n            return renderedArray[0];\n          }\n          /** Concatenate string literals with interpolated values */\n\n\n          var rendered = concatStringsAndValues(renderedArray, firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values);\n          return rendered;\n        } else {\n          // Create and return a new instance of outdent with the given options\n          return createInstance(extend(extend({}, options), stringsOrOptions || {}));\n        }\n      }\n\n      var fullOutdent = extend(outdent, {\n        string: function (str) {\n          return _outdentArray([str], false, options)[0];\n        }\n      });\n      return fullOutdent;\n    }\n\n    var defaultOutdent = createInstance({\n      trimLeadingNewline: true,\n      trimTrailingNewline: true\n    });\n    exports.outdent = defaultOutdent; // Named exports.  Simple and preferred.\n    // import outdent from 'outdent';\n\n    exports.default = defaultOutdent;\n    {\n      // In webpack harmony-modules environments, module.exports is read-only,\n      // so we fail gracefully.\n      try {\n        module.exports = defaultOutdent;\n        Object.defineProperty(defaultOutdent, \"__esModule\", {\n          value: true\n        });\n        defaultOutdent.default = defaultOutdent;\n        defaultOutdent.outdent = defaultOutdent;\n      } catch (e) {}\n    }\n  });\n\n  var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\n  const {\n    outdent\n  } = lib;\n  const CATEGORY_CONFIG = \"Config\";\n  const CATEGORY_EDITOR = \"Editor\";\n  const CATEGORY_FORMAT = \"Format\";\n  const CATEGORY_OTHER = \"Other\";\n  const CATEGORY_OUTPUT = \"Output\";\n  const CATEGORY_GLOBAL = \"Global\";\n  const CATEGORY_SPECIAL = \"Special\";\n  /**\n   * @typedef {Object} OptionInfo\n   * @property {string} [since] - available since version\n   * @property {string} category\n   * @property {'int' | 'boolean' | 'choice' | 'path'} type\n   * @property {boolean} [array] - indicate it's an array of the specified type\n   * @property {OptionValueInfo} [default]\n   * @property {OptionRangeInfo} [range] - for type int\n   * @property {string} description\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionRedirectInfo} [redirect] - redirect deprecated option\n   * @property {(value: any) => boolean} [exception]\n   * @property {OptionChoiceInfo[]} [choices] - for type choice\n   * @property {string} [cliName]\n   * @property {string} [cliCategory]\n   * @property {string} [cliDescription]\n   *\n   * @typedef {number | boolean | string} OptionValue\n   * @typedef {OptionValue | [{ value: OptionValue[] }] | Array<{ since: string, value: OptionValue}>} OptionValueInfo\n   *\n   * @typedef {Object} OptionRedirectInfo\n   * @property {string} option\n   * @property {OptionValue} value\n   *\n   * @typedef {Object} OptionRangeInfo\n   * @property {number} start - recommended range start\n   * @property {number} end - recommended range end\n   * @property {number} step - recommended range step\n   *\n   * @typedef {Object} OptionChoiceInfo\n   * @property {boolean | string} value - boolean for the option that is originally boolean type\n   * @property {string} description\n   * @property {string} [since] - undefined if available since the first version of the option\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionValueInfo} [redirect] - redirect deprecated value\n   */\n\n  /** @type {{ [name: string]: OptionInfo }} */\n\n  const options = {\n    cursorOffset: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: -1,\n      range: {\n        start: -1,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      Print (to stderr) where a cursor at the given position would move to after formatting.\\n      This option cannot be used with --range-start and --range-end.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    endOfLine: {\n      since: \"1.15.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"1.15.0\",\n        value: \"auto\"\n      }, {\n        since: \"2.0.0\",\n        value: \"lf\"\n      }],\n      description: \"Which end of line characters to apply.\",\n      choices: [{\n        value: \"lf\",\n        description: \"Line Feed only (\\\\n), common on Linux and macOS as well as inside git repos\"\n      }, {\n        value: \"crlf\",\n        description: \"Carriage Return + Line Feed characters (\\\\r\\\\n), common on Windows\"\n      }, {\n        value: \"cr\",\n        description: \"Carriage Return character only (\\\\r), used very rarely\"\n      }, {\n        value: \"auto\",\n        description: outdent(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n          Maintain existing\\n          (mixed values within one file are normalised by looking at what's used after the first line)\\n        \"])))\n      }]\n    },\n    filepath: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"path\",\n      description: \"Specify the input filepath. This will be used to do parser inference.\",\n      cliName: \"stdin-filepath\",\n      cliCategory: CATEGORY_OTHER,\n      cliDescription: \"Path to the file to pretend that stdin comes from.\"\n    },\n    insertPragma: {\n      since: \"1.8.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"boolean\",\n      default: false,\n      description: \"Insert @format pragma into file's first docblock comment.\",\n      cliCategory: CATEGORY_OTHER\n    },\n    parser: {\n      since: \"0.0.10\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"0.0.10\",\n        value: \"babylon\"\n      }, {\n        since: \"1.13.0\",\n        value: undefined\n      }],\n      description: \"Which parser to use.\",\n      exception: value => typeof value === \"string\" || typeof value === \"function\",\n      choices: [{\n        value: \"flow\",\n        description: \"Flow\"\n      }, {\n        value: \"babel\",\n        since: \"1.16.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"babel-flow\",\n        since: \"1.16.0\",\n        description: \"Flow\"\n      }, {\n        value: \"babel-ts\",\n        since: \"2.0.0\",\n        description: \"TypeScript\"\n      }, {\n        value: \"typescript\",\n        since: \"1.4.0\",\n        description: \"TypeScript\"\n      }, {\n        value: \"espree\",\n        since: \"2.2.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"meriyah\",\n        since: \"2.2.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"css\",\n        since: \"1.7.1\",\n        description: \"CSS\"\n      }, {\n        value: \"less\",\n        since: \"1.7.1\",\n        description: \"Less\"\n      }, {\n        value: \"scss\",\n        since: \"1.7.1\",\n        description: \"SCSS\"\n      }, {\n        value: \"json\",\n        since: \"1.5.0\",\n        description: \"JSON\"\n      }, {\n        value: \"json5\",\n        since: \"1.13.0\",\n        description: \"JSON5\"\n      }, {\n        value: \"json-stringify\",\n        since: \"1.13.0\",\n        description: \"JSON.stringify\"\n      }, {\n        value: \"graphql\",\n        since: \"1.5.0\",\n        description: \"GraphQL\"\n      }, {\n        value: \"markdown\",\n        since: \"1.8.0\",\n        description: \"Markdown\"\n      }, {\n        value: \"mdx\",\n        since: \"1.15.0\",\n        description: \"MDX\"\n      }, {\n        value: \"vue\",\n        since: \"1.10.0\",\n        description: \"Vue\"\n      }, {\n        value: \"yaml\",\n        since: \"1.14.0\",\n        description: \"YAML\"\n      }, {\n        value: \"glimmer\",\n        since: \"2.3.0\",\n        description: \"Ember / Handlebars\"\n      }, {\n        value: \"html\",\n        since: \"1.15.0\",\n        description: \"HTML\"\n      }, {\n        value: \"angular\",\n        since: \"1.15.0\",\n        description: \"Angular\"\n      }, {\n        value: \"lwc\",\n        since: \"1.17.0\",\n        description: \"Lightning Web Components\"\n      }]\n    },\n    plugins: {\n      since: \"1.10.0\",\n      type: \"path\",\n      array: true,\n      default: [{\n        value: []\n      }],\n      category: CATEGORY_GLOBAL,\n      description: \"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.\",\n      exception: value => typeof value === \"string\" || typeof value === \"object\",\n      cliName: \"plugin\",\n      cliCategory: CATEGORY_CONFIG\n    },\n    pluginSearchDirs: {\n      since: \"1.13.0\",\n      type: \"path\",\n      array: true,\n      default: [{\n        value: []\n      }],\n      category: CATEGORY_GLOBAL,\n      description: outdent(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      Custom directory that contains prettier plugins in node_modules subdirectory.\\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\\n      Multiple values are accepted.\\n    \"]))),\n      exception: value => typeof value === \"string\" || typeof value === \"object\",\n      cliName: \"plugin-search-dir\",\n      cliCategory: CATEGORY_CONFIG\n    },\n    printWidth: {\n      since: \"0.0.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"int\",\n      default: 80,\n      description: \"The line length where Prettier will try wrap.\",\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      }\n    },\n    rangeEnd: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: Number.POSITIVE_INFINITY,\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      Format code ending at a given character offset (exclusive).\\n      The range will extend forwards to the end of the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    rangeStart: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: 0,\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      Format code starting at a given character offset.\\n      The range will extend backwards to the start of the first line containing the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    requirePragma: {\n      since: \"1.7.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"boolean\",\n      default: false,\n      description: outdent(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\\n      in order for it to be formatted.\\n    \"]))),\n      cliCategory: CATEGORY_OTHER\n    },\n    tabWidth: {\n      type: \"int\",\n      category: CATEGORY_GLOBAL,\n      default: 2,\n      description: \"Number of spaces per indentation level.\",\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      }\n    },\n    useTabs: {\n      since: \"1.0.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"boolean\",\n      default: false,\n      description: \"Indent with tabs instead of spaces.\"\n    },\n    embeddedLanguageFormatting: {\n      since: \"2.1.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"2.1.0\",\n        value: \"auto\"\n      }],\n      description: \"Control how Prettier formats quoted code embedded in the file.\",\n      choices: [{\n        value: \"auto\",\n        description: \"Format embedded code if Prettier can automatically identify it.\"\n      }, {\n        value: \"off\",\n        description: \"Never automatically format embedded code.\"\n      }]\n    }\n  };\n  var coreOptions$1 = {\n    CATEGORY_CONFIG,\n    CATEGORY_EDITOR,\n    CATEGORY_FORMAT,\n    CATEGORY_OTHER,\n    CATEGORY_OUTPUT,\n    CATEGORY_GLOBAL,\n    CATEGORY_SPECIAL,\n    options\n  };\n  const semver = {\n    compare: compare_1,\n    lt: lt_1,\n    gte: gte_1\n  };\n  const currentVersion = require$$3.version;\n  const coreOptions = coreOptions$1.options;\n  /**\n   * Strings in `plugins` and `pluginSearchDirs` are handled by a wrapped version\n   * of this function created by `withPlugins`. Don't pass them here directly.\n   * @param {object} param0\n   * @param {(string | object)[]=} param0.plugins Strings are resolved by `withPlugins`.\n   * @param {string[]=} param0.pluginSearchDirs Added by `withPlugins`.\n   * @param {boolean=} param0.showUnreleased\n   * @param {boolean=} param0.showDeprecated\n   * @param {boolean=} param0.showInternal\n   */\n\n  function getSupportInfo$1({\n    plugins = [],\n    showUnreleased = false,\n    showDeprecated = false,\n    showInternal = false\n  } = {}) {\n    // pre-release version is smaller than the normal version in semver,\n    // we need to treat it as the normal one so as to test new features.\n    const version = currentVersion.split(\"-\", 1)[0];\n    const languages = plugins.reduce((all, plugin) => [...all, ...(plugin.languages || [])], []).filter(filterSince);\n    const options = arrayify(Object.assign({}, ...plugins.map(({\n      options\n    }) => options), coreOptions), \"name\").filter(option => filterSince(option) && filterDeprecated(option)).sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1).map(mapInternal).map(option => {\n      option = Object.assign({}, option);\n\n      if (Array.isArray(option.default)) {\n        option.default = option.default.length === 1 ? option.default[0].value : option.default.filter(filterSince).sort((info1, info2) => semver.compare(info2.since, info1.since))[0].value;\n      }\n\n      if (Array.isArray(option.choices)) {\n        option.choices = option.choices.filter(option => filterSince(option) && filterDeprecated(option));\n\n        if (option.name === \"parser\") {\n          collectParsersFromLanguages(option, languages, plugins);\n        }\n      }\n\n      const pluginDefaults = fromPairs_1(plugins.filter(plugin => plugin.defaultOptions && plugin.defaultOptions[option.name] !== undefined).map(plugin => [plugin.name, plugin.defaultOptions[option.name]]));\n      return Object.assign({}, option, {\n        pluginDefaults\n      });\n    });\n    return {\n      languages,\n      options\n    };\n\n    function filterSince(object) {\n      return showUnreleased || !(\"since\" in object) || object.since && semver.gte(version, object.since);\n    }\n\n    function filterDeprecated(object) {\n      return showDeprecated || !(\"deprecated\" in object) || object.deprecated && semver.lt(version, object.deprecated);\n    }\n\n    function mapInternal(object) {\n      if (showInternal) {\n        return object;\n      }\n\n      const newObject = _objectWithoutPropertiesLoose(object, [\"cliName\", \"cliCategory\", \"cliDescription\"]);\n\n      return newObject;\n    }\n  }\n\n  function collectParsersFromLanguages(option, languages, plugins) {\n    const existingValues = new Set(option.choices.map(choice => choice.value));\n\n    for (const language of languages) {\n      if (language.parsers) {\n        for (const value of language.parsers) {\n          if (!existingValues.has(value)) {\n            existingValues.add(value);\n            const plugin = plugins.find(plugin => plugin.parsers && plugin.parsers[value]);\n            let description = language.name;\n\n            if (plugin && plugin.name) {\n              description += \" (plugin: \".concat(plugin.name, \")\");\n            }\n\n            option.choices.push({\n              value,\n              description\n            });\n          }\n        }\n      }\n    }\n  }\n\n  var support = {\n    getSupportInfo: getSupportInfo$1\n  };\n  const {\n    getSupportInfo\n  } = support;\n  const notAsciiRegex = /[^\\x20-\\x7F]/;\n\n  const getPenultimate = arr => arr[arr.length - 2];\n  /**\n   * @typedef {{backwards?: boolean}} SkipOptions\n   */\n\n  /**\n   * @param {string | RegExp} chars\n   * @returns {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n\n  function skip(chars) {\n    return (text, index, opts) => {\n      const backwards = opts && opts.backwards; // Allow `skip` functions to be threaded together without having\n      // to check for failures (did someone say monads?).\n\n      /* istanbul ignore next */\n\n      if (index === false) {\n        return false;\n      }\n\n      const {\n        length\n      } = text;\n      let cursor = index;\n\n      while (cursor >= 0 && cursor < length) {\n        const c = text.charAt(cursor);\n\n        if (chars instanceof RegExp) {\n          if (!chars.test(c)) {\n            return cursor;\n          }\n        } else if (!chars.includes(c)) {\n          return cursor;\n        }\n\n        backwards ? cursor-- : cursor++;\n      }\n\n      if (cursor === -1 || cursor === length) {\n        // If we reached the beginning or end of the file, return the\n        // out-of-bounds cursor. It's up to the caller to handle this\n        // correctly. We don't want to indicate `false` though if it\n        // actually skipped valid characters.\n        return cursor;\n      }\n\n      return false;\n    };\n  }\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n\n  const skipWhitespace = skip(/\\s/);\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipSpaces = skip(\" \\t\");\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipToLineEnd = skip(\",; \\t\");\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipEverythingButNewLine = skip(/[^\\n\\r]/);\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */\n\n  function skipInlineComment(text, index) {\n    /* istanbul ignore next */\n    if (index === false) {\n      return false;\n    }\n\n    if (text.charAt(index) === \"/\" && text.charAt(index + 1) === \"*\") {\n      for (let i = index + 2; i < text.length; ++i) {\n        if (text.charAt(i) === \"*\" && text.charAt(i + 1) === \"/\") {\n          return i + 2;\n        }\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */\n\n\n  function skipTrailingComment(text, index) {\n    /* istanbul ignore next */\n    if (index === false) {\n      return false;\n    }\n\n    if (text.charAt(index) === \"/\" && text.charAt(index + 1) === \"/\") {\n      return skipEverythingButNewLine(text, index);\n    }\n\n    return index;\n  } // This one doesn't use the above helper function because it wants to\n  // test \\r\\n in order and `skip` doesn't support ordering and we only\n  // want to skip one newline. It's simple to implement.\n\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @param {SkipOptions=} opts\n   * @returns {number | false}\n   */\n\n\n  function skipNewline(text, index, opts) {\n    const backwards = opts && opts.backwards;\n\n    if (index === false) {\n      return false;\n    }\n\n    const atIndex = text.charAt(index);\n\n    if (backwards) {\n      // We already replace `\\r\\n` with `\\n` before parsing\n\n      /* istanbul ignore next */\n      if (text.charAt(index - 1) === \"\\r\" && atIndex === \"\\n\") {\n        return index - 2;\n      }\n\n      if (atIndex === \"\\n\" || atIndex === \"\\r\" || atIndex === \"\\u2028\" || atIndex === \"\\u2029\") {\n        return index - 1;\n      }\n    } else {\n      // We already replace `\\r\\n` with `\\n` before parsing\n\n      /* istanbul ignore next */\n      if (atIndex === \"\\r\" && text.charAt(index + 1) === \"\\n\") {\n        return index + 2;\n      }\n\n      if (atIndex === \"\\n\" || atIndex === \"\\r\" || atIndex === \"\\u2028\" || atIndex === \"\\u2029\") {\n        return index + 1;\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */\n\n\n  function hasNewline(text, index, opts = {}) {\n    const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);\n    const idx2 = skipNewline(text, idx, opts);\n    return idx !== idx2;\n  }\n  /**\n   * @param {string} text\n   * @param {number} start\n   * @param {number} end\n   * @returns {boolean}\n   */\n\n\n  function hasNewlineInRange(text, start, end) {\n    for (let i = start; i < end; ++i) {\n      if (text.charAt(i) === \"\\n\") {\n        return true;\n      }\n    }\n\n    return false;\n  } // Note: this function doesn't ignore leading comments unlike isNextLineEmpty\n\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locStart\n   */\n\n\n  function isPreviousLineEmpty(text, node, locStart) {\n    /** @type {number | false} */\n    let idx = locStart(node) - 1;\n    idx = skipSpaces(text, idx, {\n      backwards: true\n    });\n    idx = skipNewline(text, idx, {\n      backwards: true\n    });\n    idx = skipSpaces(text, idx, {\n      backwards: true\n    });\n    const idx2 = skipNewline(text, idx, {\n      backwards: true\n    });\n    return idx !== idx2;\n  }\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @returns {boolean}\n   */\n\n\n  function isNextLineEmptyAfterIndex(text, index) {\n    /** @type {number | false} */\n    let oldIdx = null;\n    /** @type {number | false} */\n\n    let idx = index;\n\n    while (idx !== oldIdx) {\n      // We need to skip all the potential trailing inline comments\n      oldIdx = idx;\n      idx = skipToLineEnd(text, idx);\n      idx = skipInlineComment(text, idx);\n      idx = skipSpaces(text, idx);\n    }\n\n    idx = skipTrailingComment(text, idx);\n    idx = skipNewline(text, idx);\n    return idx !== false && hasNewline(text, idx);\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {boolean}\n   */\n\n\n  function isNextLineEmpty(text, node, locEnd) {\n    return isNextLineEmptyAfterIndex(text, locEnd(node));\n  }\n  /**\n   * @param {string} text\n   * @param {number} idx\n   * @returns {number | false}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, idx) {\n    /** @type {number | false} */\n    let oldIdx = null;\n    /** @type {number | false} */\n\n    let nextIdx = idx;\n\n    while (nextIdx !== oldIdx) {\n      oldIdx = nextIdx;\n      nextIdx = skipSpaces(text, nextIdx);\n      nextIdx = skipInlineComment(text, nextIdx);\n      nextIdx = skipTrailingComment(text, nextIdx);\n      nextIdx = skipNewline(text, nextIdx);\n    }\n\n    return nextIdx;\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {number | false}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd) {\n    return getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, locEnd(node));\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {string}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacter(text, node, locEnd) {\n    return text.charAt( // @ts-ignore => TBD: can return false, should we define a fallback?\n    getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd));\n  } // Not using, but it's public utils\n\n  /* istanbul ignore next */\n\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */\n\n\n  function hasSpaces(text, index, opts = {}) {\n    const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);\n    return idx !== index;\n  }\n  /**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @param {number=} startIndex\n   * @returns {number}\n   */\n\n\n  function getAlignmentSize(value, tabWidth, startIndex = 0) {\n    let size = 0;\n\n    for (let i = startIndex; i < value.length; ++i) {\n      if (value[i] === \"\\t\") {\n        // Tabs behave in a way that they are aligned to the nearest\n        // multiple of tabWidth:\n        // 0 -> 4, 1 -> 4, 2 -> 4, 3 -> 4\n        // 4 -> 8, 5 -> 8, 6 -> 8, 7 -> 8 ...\n        size = size + tabWidth - size % tabWidth;\n      } else {\n        size++;\n      }\n    }\n\n    return size;\n  }\n  /**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @returns {number}\n   */\n\n\n  function getIndentSize(value, tabWidth) {\n    const lastNewlineIndex = value.lastIndexOf(\"\\n\");\n\n    if (lastNewlineIndex === -1) {\n      return 0;\n    }\n\n    return getAlignmentSize( // All the leading whitespaces\n    value.slice(lastNewlineIndex + 1).match(/^[\\t ]*/)[0], tabWidth);\n  }\n  /**\n   * @typedef {'\"' | \"'\"} Quote\n   */\n\n  /**\n   *\n   * @param {string} raw\n   * @param {Quote} preferredQuote\n   * @returns {Quote}\n   */\n\n\n  function getPreferredQuote(raw, preferredQuote) {\n    // `rawContent` is the string exactly like it appeared in the input source\n    // code, without its enclosing quotes.\n    const rawContent = raw.slice(1, -1);\n    /** @type {{ quote: '\"', regex: RegExp }} */\n\n    const double = {\n      quote: '\"',\n      regex: /\"/g\n    };\n    /** @type {{ quote: \"'\", regex: RegExp }} */\n\n    const single = {\n      quote: \"'\",\n      regex: /'/g\n    };\n    const preferred = preferredQuote === \"'\" ? single : double;\n    const alternate = preferred === single ? double : single;\n    let result = preferred.quote; // If `rawContent` contains at least one of the quote preferred for enclosing\n    // the string, we might want to enclose with the alternate quote instead, to\n    // minimize the number of escaped quotes.\n\n    if (rawContent.includes(preferred.quote) || rawContent.includes(alternate.quote)) {\n      const numPreferredQuotes = (rawContent.match(preferred.regex) || []).length;\n      const numAlternateQuotes = (rawContent.match(alternate.regex) || []).length;\n      result = numPreferredQuotes > numAlternateQuotes ? alternate.quote : preferred.quote;\n    }\n\n    return result;\n  }\n\n  function printString(raw, options) {\n    // `rawContent` is the string exactly like it appeared in the input source\n    // code, without its enclosing quotes.\n    const rawContent = raw.slice(1, -1);\n    /** @type {Quote} */\n\n    const enclosingQuote = options.parser === \"json\" || options.parser === \"json5\" && options.quoteProps === \"preserve\" && !options.singleQuote ? '\"' : options.__isInHtmlAttribute ? \"'\" : getPreferredQuote(raw, options.singleQuote ? \"'\" : '\"'); // It might sound unnecessary to use `makeString` even if the string already\n    // is enclosed with `enclosingQuote`, but it isn't. The string could contain\n    // unnecessary escapes (such as in `\"\\'\"`). Always using `makeString` makes\n    // sure that we consistently output the minimum amount of escaped quotes.\n\n    return makeString(rawContent, enclosingQuote, !(options.parser === \"css\" || options.parser === \"less\" || options.parser === \"scss\" || options.__embeddedInHtml));\n  }\n  /**\n   * @param {string} rawContent\n   * @param {Quote} enclosingQuote\n   * @param {boolean=} unescapeUnnecessaryEscapes\n   * @returns {string}\n   */\n\n\n  function makeString(rawContent, enclosingQuote, unescapeUnnecessaryEscapes) {\n    const otherQuote = enclosingQuote === '\"' ? \"'\" : '\"'; // Matches _any_ escape and unescaped quotes (both single and double).\n\n    const regex = /\\\\([\\S\\s])|([\"'])/g; // Escape and unescape single and double quotes as needed to be able to\n    // enclose `rawContent` with `enclosingQuote`.\n\n    const newContent = rawContent.replace(regex, (match, escaped, quote) => {\n      // If we matched an escape, and the escaped character is a quote of the\n      // other type than we intend to enclose the string with, there's no need for\n      // it to be escaped, so return it _without_ the backslash.\n      if (escaped === otherQuote) {\n        return escaped;\n      } // If we matched an unescaped quote and it is of the _same_ type as we\n      // intend to enclose the string with, it must be escaped, so return it with\n      // a backslash.\n\n\n      if (quote === enclosingQuote) {\n        return \"\\\\\" + quote;\n      }\n\n      if (quote) {\n        return quote;\n      } // Unescape any unnecessarily escaped character.\n      // Adapted from https://github.com/eslint/eslint/blob/de0b4ad7bd820ade41b1f606008bea68683dc11a/lib/rules/no-useless-escape.js#L27\n\n\n      return unescapeUnnecessaryEscapes && /^[^\\n\\r\"'0-7\\\\bfnrt-vx\\u2028\\u2029]$/.test(escaped) ? escaped : \"\\\\\" + escaped;\n    });\n    return enclosingQuote + newContent + enclosingQuote;\n  }\n\n  function printNumber(rawNumber) {\n    return rawNumber.toLowerCase() // Remove unnecessary plus and zeroes from scientific notation.\n    .replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/, \"$1$2$3\") // Remove unnecessary scientific notation (1e0).\n    .replace(/^([+-]?[\\d.]+)e[+-]?0+$/, \"$1\") // Make sure numbers always start with a digit.\n    .replace(/^([+-])?\\./, \"$10.\") // Remove extraneous trailing decimal zeroes.\n    .replace(/(\\.\\d+?)0+(?=e|$)/, \"$1\") // Remove trailing dot.\n    .replace(/\\.(?=e|$)/, \"\");\n  }\n  /**\n   * @param {string} str\n   * @param {string} target\n   * @returns {number}\n   */\n\n\n  function getMaxContinuousCount(str, target) {\n    const results = str.match(new RegExp(\"(\".concat(escapeStringRegexp(target), \")+\"), \"g\"));\n\n    if (results === null) {\n      return 0;\n    }\n\n    return results.reduce((maxCount, result) => Math.max(maxCount, result.length / target.length), 0);\n  }\n\n  function getMinNotPresentContinuousCount(str, target) {\n    const matches = str.match(new RegExp(\"(\".concat(escapeStringRegexp(target), \")+\"), \"g\"));\n\n    if (matches === null) {\n      return 0;\n    }\n\n    const countPresent = new Map();\n    let max = 0;\n\n    for (const match of matches) {\n      const count = match.length / target.length;\n      countPresent.set(count, true);\n\n      if (count > max) {\n        max = count;\n      }\n    }\n\n    for (let i = 1; i < max; i++) {\n      if (!countPresent.get(i)) {\n        return i;\n      }\n    }\n\n    return max + 1;\n  }\n  /**\n   * @param {string} text\n   * @returns {number}\n   */\n\n\n  function getStringWidth$1(text) {\n    if (!text) {\n      return 0;\n    } // shortcut to avoid needless string `RegExp`s, replacements, and allocations within `string-width`\n\n\n    if (!notAsciiRegex.test(text)) {\n      return text.length;\n    }\n\n    return stringWidth_1(text);\n  }\n\n  function addCommentHelper(node, comment) {\n    const comments = node.comments || (node.comments = []);\n    comments.push(comment);\n    comment.printed = false;\n    comment.nodeDescription = describeNodeForDebugging(node);\n  }\n\n  function addLeadingComment(node, comment) {\n    comment.leading = true;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n  }\n\n  function addDanglingComment(node, comment, marker) {\n    comment.leading = false;\n    comment.trailing = false;\n\n    if (marker) {\n      comment.marker = marker;\n    }\n\n    addCommentHelper(node, comment);\n  }\n\n  function addTrailingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = true;\n    addCommentHelper(node, comment);\n  }\n\n  function replaceEndOfLineWith(text, replacement) {\n    const parts = [];\n\n    for (const part of text.split(\"\\n\")) {\n      if (parts.length > 0) {\n        parts.push(replacement);\n      }\n\n      parts.push(part);\n    }\n\n    return parts;\n  }\n\n  function inferParserByLanguage(language, options) {\n    const {\n      languages\n    } = getSupportInfo({\n      plugins: options.plugins\n    });\n    const matched = languages.find(({\n      name\n    }) => name.toLowerCase() === language) || languages.find(({\n      aliases\n    }) => Array.isArray(aliases) && aliases.includes(language)) || languages.find(({\n      extensions\n    }) => Array.isArray(extensions) && extensions.includes(\".\".concat(language)));\n    return matched && matched.parsers[0];\n  }\n\n  function isFrontMatterNode(node) {\n    return node && node.type === \"front-matter\";\n  }\n\n  function getShebang(text) {\n    if (!text.startsWith(\"#!\")) {\n      return \"\";\n    }\n\n    const index = text.indexOf(\"\\n\");\n\n    if (index === -1) {\n      return text;\n    }\n\n    return text.slice(0, index);\n  }\n\n  function isNonEmptyArray(object) {\n    return Array.isArray(object) && object.length > 0;\n  }\n  /**\n   * @param {string} description\n   * @returns {(node: any) => symbol}\n   */\n\n\n  function createGroupIdMapper(description) {\n    const groupIds = new WeakMap();\n    return function (node) {\n      if (!groupIds.has(node)) {\n        groupIds.set(node, Symbol(description));\n      }\n\n      return groupIds.get(node);\n    };\n  }\n\n  function describeNodeForDebugging(node) {\n    const nodeType = node.type || node.kind || \"(unknown type)\";\n    let nodeName = String(node.name || node.id && (typeof node.id === \"object\" ? node.id.name : node.id) || node.key && (typeof node.key === \"object\" ? node.key.name : node.key) || node.value && (typeof node.value === \"object\" ? \"\" : String(node.value)) || node.operator || \"\");\n\n    if (nodeName.length > 20) {\n      nodeName = nodeName.slice(0, 19) + \"…\";\n    }\n\n    return nodeType + (nodeName ? \" \" + nodeName : \"\");\n  }\n\n  var util = {\n    inferParserByLanguage,\n    replaceEndOfLineWith,\n    getStringWidth: getStringWidth$1,\n    getMaxContinuousCount,\n    getMinNotPresentContinuousCount,\n    getPenultimate,\n    getLast: getLast_1,\n    getNextNonSpaceNonCommentCharacterIndexWithStartIndex,\n    getNextNonSpaceNonCommentCharacterIndex,\n    getNextNonSpaceNonCommentCharacter,\n    skip,\n    skipWhitespace,\n    skipSpaces,\n    skipToLineEnd,\n    skipEverythingButNewLine,\n    skipInlineComment,\n    skipTrailingComment,\n    skipNewline,\n    isNextLineEmptyAfterIndex,\n    isNextLineEmpty,\n    isPreviousLineEmpty,\n    hasNewline,\n    hasNewlineInRange,\n    hasSpaces,\n    getAlignmentSize,\n    getIndentSize,\n    getPreferredQuote,\n    printString,\n    printNumber,\n    makeString,\n    addLeadingComment,\n    addDanglingComment,\n    addTrailingComment,\n    isFrontMatterNode,\n    getShebang,\n    isNonEmptyArray,\n    createGroupIdMapper\n  };\n\n  function guessEndOfLine(text) {\n    const index = text.indexOf(\"\\r\");\n\n    if (index >= 0) {\n      return text.charAt(index + 1) === \"\\n\" ? \"crlf\" : \"cr\";\n    }\n\n    return \"lf\";\n  }\n\n  function convertEndOfLineToChars$1(value) {\n    switch (value) {\n      case \"cr\":\n        return \"\\r\";\n\n      case \"crlf\":\n        return \"\\r\\n\";\n\n      default:\n        return \"\\n\";\n    }\n  }\n\n  function countEndOfLineChars(text, eol) {\n    let regex;\n    /* istanbul ignore else */\n\n    if (eol === \"\\n\") {\n      regex = /\\n/g;\n    } else if (eol === \"\\r\") {\n      regex = /\\r/g;\n    } else if (eol === \"\\r\\n\") {\n      regex = /\\r\\n/g;\n    } else {\n      throw new Error(\"Unexpected \\\"eol\\\" \".concat(JSON.stringify(eol), \".\"));\n    }\n\n    const endOfLines = text.match(regex);\n    return endOfLines ? endOfLines.length : 0;\n  }\n\n  function normalizeEndOfLine(text) {\n    return text.replace(/\\r\\n?/g, \"\\n\");\n  }\n\n  var endOfLine = {\n    guessEndOfLine,\n    convertEndOfLineToChars: convertEndOfLineToChars$1,\n    countEndOfLineChars,\n    normalizeEndOfLine\n  };\n  const {\n    literalline\n  } = docBuilders;\n\n  const isConcat$2 = doc => Array.isArray(doc) || doc && doc.type === \"concat\";\n\n  const getDocParts$2 = doc => {\n    if (Array.isArray(doc)) {\n      return doc;\n    }\n    /* istanbul ignore next */\n\n\n    if (doc.type !== \"concat\" && doc.type !== \"fill\") {\n      throw new Error(\"Expect doc type to be `concat` or `fill`.\");\n    }\n\n    return doc.parts;\n  }; // Using a unique object to compare by reference.\n\n\n  const traverseDocOnExitStackMarker = {};\n\n  function traverseDoc(doc, onEnter, onExit, shouldTraverseConditionalGroups) {\n    const docsStack = [doc];\n\n    while (docsStack.length > 0) {\n      const doc = docsStack.pop();\n\n      if (doc === traverseDocOnExitStackMarker) {\n        onExit(docsStack.pop());\n        continue;\n      }\n\n      if (onExit) {\n        docsStack.push(doc, traverseDocOnExitStackMarker);\n      }\n\n      if ( // Should Recurse\n      !onEnter || onEnter(doc) !== false) {\n        // When there are multiple parts to process,\n        // the parts need to be pushed onto the stack in reverse order,\n        // so that they are processed in the original order\n        // when the stack is popped.\n        if (isConcat$2(doc) || doc.type === \"fill\") {\n          const parts = getDocParts$2(doc);\n\n          for (let ic = parts.length, i = ic - 1; i >= 0; --i) {\n            docsStack.push(parts[i]);\n          }\n        } else if (doc.type === \"if-break\") {\n          if (doc.flatContents) {\n            docsStack.push(doc.flatContents);\n          }\n\n          if (doc.breakContents) {\n            docsStack.push(doc.breakContents);\n          }\n        } else if (doc.type === \"group\" && doc.expandedStates) {\n          if (shouldTraverseConditionalGroups) {\n            for (let ic = doc.expandedStates.length, i = ic - 1; i >= 0; --i) {\n              docsStack.push(doc.expandedStates[i]);\n            }\n          } else {\n            docsStack.push(doc.contents);\n          }\n        } else if (doc.contents) {\n          docsStack.push(doc.contents);\n        }\n      }\n    }\n  }\n\n  function mapDoc(doc, cb) {\n    // Within a doc tree, the same subtrees can be found multiple times.\n    // E.g., often this happens in conditional groups.\n    // As an optimization (those subtrees can be huge) and to maintain the\n    // reference structure of the tree, the mapping results are cached in\n    // a map and reused.\n    const mapped = new Map();\n    return rec(doc);\n\n    function rec(doc) {\n      if (mapped.has(doc)) {\n        return mapped.get(doc);\n      }\n\n      const result = process(doc);\n      mapped.set(doc, result);\n      return result;\n    }\n\n    function process(doc) {\n      if (Array.isArray(doc)) {\n        return cb(doc.map(rec));\n      }\n\n      if (doc.type === \"concat\" || doc.type === \"fill\") {\n        const parts = doc.parts.map(rec);\n        return cb(Object.assign({}, doc, {\n          parts\n        }));\n      }\n\n      if (doc.type === \"if-break\") {\n        const breakContents = doc.breakContents && rec(doc.breakContents);\n        const flatContents = doc.flatContents && rec(doc.flatContents);\n        return cb(Object.assign({}, doc, {\n          breakContents,\n          flatContents\n        }));\n      }\n\n      if (doc.type === \"group\" && doc.expandedStates) {\n        const expandedStates = doc.expandedStates.map(rec);\n        const contents = expandedStates[0];\n        return cb(Object.assign({}, doc, {\n          contents,\n          expandedStates\n        }));\n      }\n\n      if (doc.contents) {\n        const contents = rec(doc.contents);\n        return cb(Object.assign({}, doc, {\n          contents\n        }));\n      }\n\n      return cb(doc);\n    }\n  }\n\n  function findInDoc(doc, fn, defaultValue) {\n    let result = defaultValue;\n    let hasStopped = false;\n\n    function findInDocOnEnterFn(doc) {\n      const maybeResult = fn(doc);\n\n      if (maybeResult !== undefined) {\n        hasStopped = true;\n        result = maybeResult;\n      }\n\n      if (hasStopped) {\n        return false;\n      }\n    }\n\n    traverseDoc(doc, findInDocOnEnterFn);\n    return result;\n  }\n\n  function willBreakFn(doc) {\n    if (doc.type === \"group\" && doc.break) {\n      return true;\n    }\n\n    if (doc.type === \"line\" && doc.hard) {\n      return true;\n    }\n\n    if (doc.type === \"break-parent\") {\n      return true;\n    }\n  }\n\n  function willBreak(doc) {\n    return findInDoc(doc, willBreakFn, false);\n  }\n\n  function breakParentGroup(groupStack) {\n    if (groupStack.length > 0) {\n      const parentGroup = getLast_1(groupStack); // Breaks are not propagated through conditional groups because\n      // the user is expected to manually handle what breaks.\n\n      if (!parentGroup.expandedStates && !parentGroup.break) {\n        // An alternative truthy value allows to distinguish propagated group breaks\n        // and not to print them as `group(..., { break: true })` in `--debug-print-doc`.\n        parentGroup.break = \"propagated\";\n      }\n    }\n\n    return null;\n  }\n\n  function propagateBreaks(doc) {\n    const alreadyVisitedSet = new Set();\n    const groupStack = [];\n\n    function propagateBreaksOnEnterFn(doc) {\n      if (doc.type === \"break-parent\") {\n        breakParentGroup(groupStack);\n      }\n\n      if (doc.type === \"group\") {\n        groupStack.push(doc);\n\n        if (alreadyVisitedSet.has(doc)) {\n          return false;\n        }\n\n        alreadyVisitedSet.add(doc);\n      }\n    }\n\n    function propagateBreaksOnExitFn(doc) {\n      if (doc.type === \"group\") {\n        const group = groupStack.pop();\n\n        if (group.break) {\n          breakParentGroup(groupStack);\n        }\n      }\n    }\n\n    traverseDoc(doc, propagateBreaksOnEnterFn, propagateBreaksOnExitFn,\n    /* shouldTraverseConditionalGroups */\n    true);\n  }\n\n  function removeLinesFn(doc) {\n    // Force this doc into flat mode by statically converting all\n    // lines into spaces (or soft lines into nothing). Hard lines\n    // should still output because there's too great of a chance\n    // of breaking existing assumptions otherwise.\n    if (doc.type === \"line\" && !doc.hard) {\n      return doc.soft ? \"\" : \" \";\n    }\n\n    if (doc.type === \"if-break\") {\n      return doc.flatContents || \"\";\n    }\n\n    return doc;\n  }\n\n  function removeLines(doc) {\n    return mapDoc(doc, removeLinesFn);\n  }\n\n  const isHardline = (doc, nextDoc) => doc && doc.type === \"line\" && doc.hard && nextDoc && nextDoc.type === \"break-parent\";\n\n  function stripDocTrailingHardlineFromDoc(doc) {\n    if (!doc) {\n      return doc;\n    }\n\n    if (isConcat$2(doc) || doc.type === \"fill\") {\n      const parts = getDocParts$2(doc);\n\n      while (parts.length > 1 && isHardline(...parts.slice(-2))) {\n        parts.length -= 2;\n      }\n\n      if (parts.length > 0) {\n        const lastPart = stripDocTrailingHardlineFromDoc(getLast_1(parts));\n        parts[parts.length - 1] = lastPart;\n      }\n\n      return Array.isArray(doc) ? parts : Object.assign({}, doc, {\n        parts\n      });\n    }\n\n    switch (doc.type) {\n      case \"align\":\n      case \"indent\":\n      case \"indent-if-break\":\n      case \"group\":\n      case \"line-suffix\":\n      case \"label\":\n        {\n          const contents = stripDocTrailingHardlineFromDoc(doc.contents);\n          return Object.assign({}, doc, {\n            contents\n          });\n        }\n\n      case \"if-break\":\n        {\n          const breakContents = stripDocTrailingHardlineFromDoc(doc.breakContents);\n          const flatContents = stripDocTrailingHardlineFromDoc(doc.flatContents);\n          return Object.assign({}, doc, {\n            breakContents,\n            flatContents\n          });\n        }\n    }\n\n    return doc;\n  }\n\n  function stripTrailingHardline(doc) {\n    // HACK remove ending hardline, original PR: #1984\n    return stripDocTrailingHardlineFromDoc(cleanDoc(doc));\n  }\n\n  function cleanDocFn(doc) {\n    switch (doc.type) {\n      case \"fill\":\n        if (doc.parts.length === 0 || doc.parts.every(part => part === \"\")) {\n          return \"\";\n        }\n\n        break;\n\n      case \"group\":\n        if (!doc.contents && !doc.id && !doc.break && !doc.expandedStates) {\n          return \"\";\n        } // Remove nested only group\n\n\n        if (doc.contents.type === \"group\" && doc.contents.id === doc.id && doc.contents.break === doc.break && doc.contents.expandedStates === doc.expandedStates) {\n          return doc.contents;\n        }\n\n        break;\n\n      case \"align\":\n      case \"indent\":\n      case \"indent-if-break\":\n      case \"line-suffix\":\n        if (!doc.contents) {\n          return \"\";\n        }\n\n        break;\n\n      case \"if-break\":\n        if (!doc.flatContents && !doc.breakContents) {\n          return \"\";\n        }\n\n        break;\n    }\n\n    if (!isConcat$2(doc)) {\n      return doc;\n    }\n\n    const parts = [];\n\n    for (const part of getDocParts$2(doc)) {\n      if (!part) {\n        continue;\n      }\n\n      const [currentPart, ...restParts] = isConcat$2(part) ? getDocParts$2(part) : [part];\n\n      if (typeof currentPart === \"string\" && typeof getLast_1(parts) === \"string\") {\n        parts[parts.length - 1] += currentPart;\n      } else {\n        parts.push(currentPart);\n      }\n\n      parts.push(...restParts);\n    }\n\n    if (parts.length === 0) {\n      return \"\";\n    }\n\n    if (parts.length === 1) {\n      return parts[0];\n    }\n\n    return Array.isArray(doc) ? parts : Object.assign({}, doc, {\n      parts\n    });\n  } // A safer version of `normalizeDoc`\n  // - `normalizeDoc` concat strings and flat \"concat\" in `fill`, while `cleanDoc` don't\n  // - On `concat` object, `normalizeDoc` always return object with `parts`, `cleanDoc` may return strings\n  // - `cleanDoc` also remove nested `group`s and empty `fill`/`align`/`indent`/`line-suffix`/`if-break` if possible\n\n\n  function cleanDoc(doc) {\n    return mapDoc(doc, currentDoc => cleanDocFn(currentDoc));\n  }\n\n  function normalizeParts(parts) {\n    const newParts = [];\n    const restParts = parts.filter(Boolean);\n\n    while (restParts.length > 0) {\n      const part = restParts.shift();\n\n      if (!part) {\n        continue;\n      }\n\n      if (isConcat$2(part)) {\n        restParts.unshift(...getDocParts$2(part));\n        continue;\n      }\n\n      if (newParts.length > 0 && typeof getLast_1(newParts) === \"string\" && typeof part === \"string\") {\n        newParts[newParts.length - 1] += part;\n        continue;\n      }\n\n      newParts.push(part);\n    }\n\n    return newParts;\n  }\n\n  function normalizeDoc(doc) {\n    return mapDoc(doc, currentDoc => {\n      if (Array.isArray(currentDoc)) {\n        return normalizeParts(currentDoc);\n      }\n\n      if (!currentDoc.parts) {\n        return currentDoc;\n      }\n\n      return Object.assign({}, currentDoc, {\n        parts: normalizeParts(currentDoc.parts)\n      });\n    });\n  }\n\n  function replaceNewlinesWithLiterallines(doc) {\n    return mapDoc(doc, currentDoc => typeof currentDoc === \"string\" && currentDoc.includes(\"\\n\") ? currentDoc.split(/(\\n)/g).map((v, i) => i % 2 === 0 ? v : literalline) : currentDoc);\n  }\n\n  var docUtils = {\n    isConcat: isConcat$2,\n    getDocParts: getDocParts$2,\n    willBreak,\n    traverseDoc,\n    findInDoc,\n    mapDoc,\n    propagateBreaks,\n    removeLines,\n    stripTrailingHardline,\n    normalizeParts,\n    normalizeDoc,\n    cleanDoc,\n    replaceNewlinesWithLiterallines\n  };\n  const {\n    getStringWidth,\n    getLast\n  } = util;\n  const {\n    convertEndOfLineToChars\n  } = endOfLine;\n  const {\n    fill,\n    cursor,\n    indent\n  } = docBuilders;\n  const {\n    isConcat: isConcat$1,\n    getDocParts: getDocParts$1\n  } = docUtils;\n  /** @type {Record<symbol, typeof MODE_BREAK | typeof MODE_FLAT>} */\n\n  let groupModeMap;\n  const MODE_BREAK = 1;\n  const MODE_FLAT = 2;\n\n  function rootIndent() {\n    return {\n      value: \"\",\n      length: 0,\n      queue: []\n    };\n  }\n\n  function makeIndent(ind, options) {\n    return generateInd(ind, {\n      type: \"indent\"\n    }, options);\n  }\n\n  function makeAlign(indent, widthOrDoc, options) {\n    if (widthOrDoc === Number.NEGATIVE_INFINITY) {\n      return indent.root || rootIndent();\n    }\n\n    if (widthOrDoc < 0) {\n      return generateInd(indent, {\n        type: \"dedent\"\n      }, options);\n    }\n\n    if (!widthOrDoc) {\n      return indent;\n    }\n\n    if (widthOrDoc.type === \"root\") {\n      return Object.assign({}, indent, {\n        root: indent\n      });\n    }\n\n    const alignType = typeof widthOrDoc === \"string\" ? \"stringAlign\" : \"numberAlign\";\n    return generateInd(indent, {\n      type: alignType,\n      n: widthOrDoc\n    }, options);\n  }\n\n  function generateInd(ind, newPart, options) {\n    const queue = newPart.type === \"dedent\" ? ind.queue.slice(0, -1) : [...ind.queue, newPart];\n    let value = \"\";\n    let length = 0;\n    let lastTabs = 0;\n    let lastSpaces = 0;\n\n    for (const part of queue) {\n      switch (part.type) {\n        case \"indent\":\n          flush();\n\n          if (options.useTabs) {\n            addTabs(1);\n          } else {\n            addSpaces(options.tabWidth);\n          }\n\n          break;\n\n        case \"stringAlign\":\n          flush();\n          value += part.n;\n          length += part.n.length;\n          break;\n\n        case \"numberAlign\":\n          lastTabs += 1;\n          lastSpaces += part.n;\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error(\"Unexpected type '\".concat(part.type, \"'\"));\n      }\n    }\n\n    flushSpaces();\n    return Object.assign({}, ind, {\n      value,\n      length,\n      queue\n    });\n\n    function addTabs(count) {\n      value += \"\\t\".repeat(count);\n      length += options.tabWidth * count;\n    }\n\n    function addSpaces(count) {\n      value += \" \".repeat(count);\n      length += count;\n    }\n\n    function flush() {\n      if (options.useTabs) {\n        flushTabs();\n      } else {\n        flushSpaces();\n      }\n    }\n\n    function flushTabs() {\n      if (lastTabs > 0) {\n        addTabs(lastTabs);\n      }\n\n      resetLast();\n    }\n\n    function flushSpaces() {\n      if (lastSpaces > 0) {\n        addSpaces(lastSpaces);\n      }\n\n      resetLast();\n    }\n\n    function resetLast() {\n      lastTabs = 0;\n      lastSpaces = 0;\n    }\n  }\n\n  function trim(out) {\n    if (out.length === 0) {\n      return 0;\n    }\n\n    let trimCount = 0; // Trim whitespace at the end of line\n\n    while (out.length > 0 && typeof getLast(out) === \"string\" && /^[\\t ]*$/.test(getLast(out))) {\n      trimCount += out.pop().length;\n    }\n\n    if (out.length > 0 && typeof getLast(out) === \"string\") {\n      const trimmed = getLast(out).replace(/[\\t ]*$/, \"\");\n      trimCount += getLast(out).length - trimmed.length;\n      out[out.length - 1] = trimmed;\n    }\n\n    return trimCount;\n  }\n\n  function fits(next, restCommands, width, options, hasLineSuffix, mustBeFlat) {\n    let restIdx = restCommands.length;\n    const cmds = [next]; // `out` is only used for width counting because `trim` requires to look\n    // backwards for space characters.\n\n    const out = [];\n\n    while (width >= 0) {\n      if (cmds.length === 0) {\n        if (restIdx === 0) {\n          return true;\n        }\n\n        cmds.push(restCommands[restIdx - 1]);\n        restIdx--;\n        continue;\n      }\n\n      const [ind, mode, doc] = cmds.pop();\n\n      if (typeof doc === \"string\") {\n        out.push(doc);\n        width -= getStringWidth(doc);\n      } else if (isConcat$1(doc)) {\n        const parts = getDocParts$1(doc);\n\n        for (let i = parts.length - 1; i >= 0; i--) {\n          cmds.push([ind, mode, parts[i]]);\n        }\n      } else {\n        switch (doc.type) {\n          case \"indent\":\n            cmds.push([makeIndent(ind, options), mode, doc.contents]);\n            break;\n\n          case \"align\":\n            cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);\n            break;\n\n          case \"trim\":\n            width += trim(out);\n            break;\n\n          case \"group\":\n            {\n              if (mustBeFlat && doc.break) {\n                return false;\n              }\n\n              const groupMode = doc.break ? MODE_BREAK : mode;\n              cmds.push([ind, groupMode, // The most expanded state takes up the least space on the current line.\n              doc.expandedStates && groupMode === MODE_BREAK ? getLast(doc.expandedStates) : doc.contents]);\n\n              if (doc.id) {\n                groupModeMap[doc.id] = groupMode;\n              }\n\n              break;\n            }\n\n          case \"fill\":\n            for (let i = doc.parts.length - 1; i >= 0; i--) {\n              cmds.push([ind, mode, doc.parts[i]]);\n            }\n\n            break;\n\n          case \"if-break\":\n          case \"indent-if-break\":\n            {\n              const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;\n\n              if (groupMode === MODE_BREAK) {\n                const breakContents = doc.type === \"if-break\" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);\n\n                if (breakContents) {\n                  cmds.push([ind, mode, breakContents]);\n                }\n              }\n\n              if (groupMode === MODE_FLAT) {\n                const flatContents = doc.type === \"if-break\" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;\n\n                if (flatContents) {\n                  cmds.push([ind, mode, flatContents]);\n                }\n              }\n\n              break;\n            }\n\n          case \"line\":\n            switch (mode) {\n              // fallthrough\n              case MODE_FLAT:\n                if (!doc.hard) {\n                  if (!doc.soft) {\n                    out.push(\" \");\n                    width -= 1;\n                  }\n\n                  break;\n                }\n\n                return true;\n\n              case MODE_BREAK:\n                return true;\n            }\n\n            break;\n\n          case \"line-suffix\":\n            hasLineSuffix = true;\n            break;\n\n          case \"line-suffix-boundary\":\n            if (hasLineSuffix) {\n              return false;\n            }\n\n            break;\n\n          case \"label\":\n            cmds.push([ind, mode, doc.contents]);\n            break;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function printDocToString(doc, options) {\n    groupModeMap = {};\n    const width = options.printWidth;\n    const newLine = convertEndOfLineToChars(options.endOfLine);\n    let pos = 0; // cmds is basically a stack. We've turned a recursive call into a\n    // while loop which is much faster. The while loop below adds new\n    // cmds to the array instead of recursively calling `print`.\n\n    const cmds = [[rootIndent(), MODE_BREAK, doc]];\n    const out = [];\n    let shouldRemeasure = false;\n    let lineSuffix = [];\n\n    while (cmds.length > 0) {\n      const [ind, mode, doc] = cmds.pop();\n\n      if (typeof doc === \"string\") {\n        const formatted = newLine !== \"\\n\" ? doc.replace(/\\n/g, newLine) : doc;\n        out.push(formatted);\n        pos += getStringWidth(formatted);\n      } else if (isConcat$1(doc)) {\n        const parts = getDocParts$1(doc);\n\n        for (let i = parts.length - 1; i >= 0; i--) {\n          cmds.push([ind, mode, parts[i]]);\n        }\n      } else {\n        switch (doc.type) {\n          case \"cursor\":\n            out.push(cursor.placeholder);\n            break;\n\n          case \"indent\":\n            cmds.push([makeIndent(ind, options), mode, doc.contents]);\n            break;\n\n          case \"align\":\n            cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);\n            break;\n\n          case \"trim\":\n            pos -= trim(out);\n            break;\n\n          case \"group\":\n            switch (mode) {\n              case MODE_FLAT:\n                if (!shouldRemeasure) {\n                  cmds.push([ind, doc.break ? MODE_BREAK : MODE_FLAT, doc.contents]);\n                  break;\n                }\n\n              // fallthrough\n\n              case MODE_BREAK:\n                {\n                  shouldRemeasure = false;\n                  const next = [ind, MODE_FLAT, doc.contents];\n                  const rem = width - pos;\n                  const hasLineSuffix = lineSuffix.length > 0;\n\n                  if (!doc.break && fits(next, cmds, rem, options, hasLineSuffix)) {\n                    cmds.push(next);\n                  } else {\n                    // Expanded states are a rare case where a document\n                    // can manually provide multiple representations of\n                    // itself. It provides an array of documents\n                    // going from the least expanded (most flattened)\n                    // representation first to the most expanded. If a\n                    // group has these, we need to manually go through\n                    // these states and find the first one that fits.\n                    if (doc.expandedStates) {\n                      const mostExpanded = getLast(doc.expandedStates);\n\n                      if (doc.break) {\n                        cmds.push([ind, MODE_BREAK, mostExpanded]);\n                        break;\n                      } else {\n                        for (let i = 1; i < doc.expandedStates.length + 1; i++) {\n                          if (i >= doc.expandedStates.length) {\n                            cmds.push([ind, MODE_BREAK, mostExpanded]);\n                            break;\n                          } else {\n                            const state = doc.expandedStates[i];\n                            const cmd = [ind, MODE_FLAT, state];\n\n                            if (fits(cmd, cmds, rem, options, hasLineSuffix)) {\n                              cmds.push(cmd);\n                              break;\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      cmds.push([ind, MODE_BREAK, doc.contents]);\n                    }\n                  }\n\n                  break;\n                }\n            }\n\n            if (doc.id) {\n              groupModeMap[doc.id] = getLast(cmds)[1];\n            }\n\n            break;\n          // Fills each line with as much code as possible before moving to a new\n          // line with the same indentation.\n          //\n          // Expects doc.parts to be an array of alternating content and\n          // whitespace. The whitespace contains the linebreaks.\n          //\n          // For example:\n          //   [\"I\", line, \"love\", line, \"monkeys\"]\n          // or\n          //   [{ type: group, ... }, softline, { type: group, ... }]\n          //\n          // It uses this parts structure to handle three main layout cases:\n          // * The first two content items fit on the same line without\n          //   breaking\n          //   -> output the first content item and the whitespace \"flat\".\n          // * Only the first content item fits on the line without breaking\n          //   -> output the first content item \"flat\" and the whitespace with\n          //   \"break\".\n          // * Neither content item fits on the line without breaking\n          //   -> output the first content item and the whitespace with \"break\".\n\n          case \"fill\":\n            {\n              const rem = width - pos;\n              const {\n                parts\n              } = doc;\n\n              if (parts.length === 0) {\n                break;\n              }\n\n              const [content, whitespace] = parts;\n              const contentFlatCmd = [ind, MODE_FLAT, content];\n              const contentBreakCmd = [ind, MODE_BREAK, content];\n              const contentFits = fits(contentFlatCmd, [], rem, options, lineSuffix.length > 0, true);\n\n              if (parts.length === 1) {\n                if (contentFits) {\n                  cmds.push(contentFlatCmd);\n                } else {\n                  cmds.push(contentBreakCmd);\n                }\n\n                break;\n              }\n\n              const whitespaceFlatCmd = [ind, MODE_FLAT, whitespace];\n              const whitespaceBreakCmd = [ind, MODE_BREAK, whitespace];\n\n              if (parts.length === 2) {\n                if (contentFits) {\n                  cmds.push(whitespaceFlatCmd, contentFlatCmd);\n                } else {\n                  cmds.push(whitespaceBreakCmd, contentBreakCmd);\n                }\n\n                break;\n              } // At this point we've handled the first pair (context, separator)\n              // and will create a new fill doc for the rest of the content.\n              // Ideally we wouldn't mutate the array here but copying all the\n              // elements to a new array would make this algorithm quadratic,\n              // which is unusable for large arrays (e.g. large texts in JSX).\n\n\n              parts.splice(0, 2);\n              const remainingCmd = [ind, mode, fill(parts)];\n              const secondContent = parts[0];\n              const firstAndSecondContentFlatCmd = [ind, MODE_FLAT, [content, whitespace, secondContent]];\n              const firstAndSecondContentFits = fits(firstAndSecondContentFlatCmd, [], rem, options, lineSuffix.length > 0, true);\n\n              if (firstAndSecondContentFits) {\n                cmds.push(remainingCmd, whitespaceFlatCmd, contentFlatCmd);\n              } else if (contentFits) {\n                cmds.push(remainingCmd, whitespaceBreakCmd, contentFlatCmd);\n              } else {\n                cmds.push(remainingCmd, whitespaceBreakCmd, contentBreakCmd);\n              }\n\n              break;\n            }\n\n          case \"if-break\":\n          case \"indent-if-break\":\n            {\n              const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;\n\n              if (groupMode === MODE_BREAK) {\n                const breakContents = doc.type === \"if-break\" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);\n\n                if (breakContents) {\n                  cmds.push([ind, mode, breakContents]);\n                }\n              }\n\n              if (groupMode === MODE_FLAT) {\n                const flatContents = doc.type === \"if-break\" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;\n\n                if (flatContents) {\n                  cmds.push([ind, mode, flatContents]);\n                }\n              }\n\n              break;\n            }\n\n          case \"line-suffix\":\n            lineSuffix.push([ind, mode, doc.contents]);\n            break;\n\n          case \"line-suffix-boundary\":\n            if (lineSuffix.length > 0) {\n              cmds.push([ind, mode, {\n                type: \"line\",\n                hard: true\n              }]);\n            }\n\n            break;\n\n          case \"line\":\n            switch (mode) {\n              case MODE_FLAT:\n                if (!doc.hard) {\n                  if (!doc.soft) {\n                    out.push(\" \");\n                    pos += 1;\n                  }\n\n                  break;\n                } else {\n                  // This line was forced into the output even if we\n                  // were in flattened mode, so we need to tell the next\n                  // group that no matter what, it needs to remeasure\n                  // because the previous measurement didn't accurately\n                  // capture the entire expression (this is necessary\n                  // for nested groups)\n                  shouldRemeasure = true;\n                }\n\n              // fallthrough\n\n              case MODE_BREAK:\n                if (lineSuffix.length > 0) {\n                  cmds.push([ind, mode, doc], ...lineSuffix.reverse());\n                  lineSuffix = [];\n                  break;\n                }\n\n                if (doc.literal) {\n                  if (ind.root) {\n                    out.push(newLine, ind.root.value);\n                    pos = ind.root.length;\n                  } else {\n                    out.push(newLine);\n                    pos = 0;\n                  }\n                } else {\n                  pos -= trim(out);\n                  out.push(newLine + ind.value);\n                  pos = ind.length;\n                }\n\n                break;\n            }\n\n            break;\n\n          case \"label\":\n            cmds.push([ind, mode, doc.contents]);\n            break;\n        }\n      } // Flush remaining line-suffix contents at the end of the document, in case\n      // there is no new line after the line-suffix.\n\n\n      if (cmds.length === 0 && lineSuffix.length > 0) {\n        cmds.push(...lineSuffix.reverse());\n        lineSuffix = [];\n      }\n    }\n\n    const cursorPlaceholderIndex = out.indexOf(cursor.placeholder);\n\n    if (cursorPlaceholderIndex !== -1) {\n      const otherCursorPlaceholderIndex = out.indexOf(cursor.placeholder, cursorPlaceholderIndex + 1);\n      const beforeCursor = out.slice(0, cursorPlaceholderIndex).join(\"\");\n      const aroundCursor = out.slice(cursorPlaceholderIndex + 1, otherCursorPlaceholderIndex).join(\"\");\n      const afterCursor = out.slice(otherCursorPlaceholderIndex + 1).join(\"\");\n      return {\n        formatted: beforeCursor + aroundCursor + afterCursor,\n        cursorNodeStart: beforeCursor.length,\n        cursorNodeText: aroundCursor\n      };\n    }\n\n    return {\n      formatted: out.join(\"\")\n    };\n  }\n\n  var docPrinter = {\n    printDocToString\n  };\n  const {\n    isConcat,\n    getDocParts\n  } = docUtils;\n\n  function flattenDoc(doc) {\n    if (!doc) {\n      return \"\";\n    }\n\n    if (isConcat(doc)) {\n      const res = [];\n\n      for (const part of getDocParts(doc)) {\n        if (isConcat(part)) {\n          res.push(...flattenDoc(part).parts);\n        } else {\n          const flattened = flattenDoc(part);\n\n          if (flattened !== \"\") {\n            res.push(flattened);\n          }\n        }\n      }\n\n      return {\n        type: \"concat\",\n        parts: res\n      };\n    }\n\n    if (doc.type === \"if-break\") {\n      return Object.assign({}, doc, {\n        breakContents: flattenDoc(doc.breakContents),\n        flatContents: flattenDoc(doc.flatContents)\n      });\n    }\n\n    if (doc.type === \"group\") {\n      return Object.assign({}, doc, {\n        contents: flattenDoc(doc.contents),\n        expandedStates: doc.expandedStates && doc.expandedStates.map(flattenDoc)\n      });\n    }\n\n    if (doc.type === \"fill\") {\n      return {\n        type: \"fill\",\n        parts: doc.parts.map(flattenDoc)\n      };\n    }\n\n    if (doc.contents) {\n      return Object.assign({}, doc, {\n        contents: flattenDoc(doc.contents)\n      });\n    }\n\n    return doc;\n  }\n\n  function printDocToDebug(doc) {\n    /** @type Record<symbol, string> */\n    const printedSymbols = Object.create(null);\n    /** @type Set<string> */\n\n    const usedKeysForSymbols = new Set();\n    return printDoc(flattenDoc(doc));\n\n    function printDoc(doc, index, parentParts) {\n      if (typeof doc === \"string\") {\n        return JSON.stringify(doc);\n      }\n\n      if (isConcat(doc)) {\n        const printed = getDocParts(doc).map(printDoc).filter(Boolean);\n        return printed.length === 1 ? printed[0] : \"[\".concat(printed.join(\", \"), \"]\");\n      }\n\n      if (doc.type === \"line\") {\n        const withBreakParent = Array.isArray(parentParts) && parentParts[index + 1] && parentParts[index + 1].type === \"break-parent\";\n\n        if (doc.literal) {\n          return withBreakParent ? \"literalline\" : \"literallineWithoutBreakParent\";\n        }\n\n        if (doc.hard) {\n          return withBreakParent ? \"hardline\" : \"hardlineWithoutBreakParent\";\n        }\n\n        if (doc.soft) {\n          return \"softline\";\n        }\n\n        return \"line\";\n      }\n\n      if (doc.type === \"break-parent\") {\n        const afterHardline = Array.isArray(parentParts) && parentParts[index - 1] && parentParts[index - 1].type === \"line\" && parentParts[index - 1].hard;\n        return afterHardline ? undefined : \"breakParent\";\n      }\n\n      if (doc.type === \"trim\") {\n        return \"trim\";\n      }\n\n      if (doc.type === \"indent\") {\n        return \"indent(\" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"align\") {\n        return doc.n === Number.NEGATIVE_INFINITY ? \"dedentToRoot(\" + printDoc(doc.contents) + \")\" : doc.n < 0 ? \"dedent(\" + printDoc(doc.contents) + \")\" : doc.n.type === \"root\" ? \"markAsRoot(\" + printDoc(doc.contents) + \")\" : \"align(\" + JSON.stringify(doc.n) + \", \" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"if-break\") {\n        return \"ifBreak(\" + printDoc(doc.breakContents) + (doc.flatContents ? \", \" + printDoc(doc.flatContents) : \"\") + (doc.groupId ? (!doc.flatContents ? ', \"\"' : \"\") + \", { groupId: \".concat(printGroupId(doc.groupId), \" }\") : \"\") + \")\";\n      }\n\n      if (doc.type === \"indent-if-break\") {\n        const optionsParts = [];\n\n        if (doc.negate) {\n          optionsParts.push(\"negate: true\");\n        }\n\n        if (doc.groupId) {\n          optionsParts.push(\"groupId: \".concat(printGroupId(doc.groupId)));\n        }\n\n        const options = optionsParts.length > 0 ? \", { \".concat(optionsParts.join(\", \"), \" }\") : \"\";\n        return \"indentIfBreak(\".concat(printDoc(doc.contents)).concat(options, \")\");\n      }\n\n      if (doc.type === \"group\") {\n        const optionsParts = [];\n\n        if (doc.break && doc.break !== \"propagated\") {\n          optionsParts.push(\"shouldBreak: true\");\n        }\n\n        if (doc.id) {\n          optionsParts.push(\"id: \".concat(printGroupId(doc.id)));\n        }\n\n        const options = optionsParts.length > 0 ? \", { \".concat(optionsParts.join(\", \"), \" }\") : \"\";\n\n        if (doc.expandedStates) {\n          return \"conditionalGroup([\".concat(doc.expandedStates.map(part => printDoc(part)).join(\",\"), \"]\").concat(options, \")\");\n        }\n\n        return \"group(\".concat(printDoc(doc.contents)).concat(options, \")\");\n      }\n\n      if (doc.type === \"fill\") {\n        return \"fill([\".concat(doc.parts.map(part => printDoc(part)).join(\", \"), \"])\");\n      }\n\n      if (doc.type === \"line-suffix\") {\n        return \"lineSuffix(\" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"line-suffix-boundary\") {\n        return \"lineSuffixBoundary\";\n      }\n\n      if (doc.type === \"label\") {\n        return \"label(\".concat(JSON.stringify(doc.label), \", \").concat(printDoc(doc.contents), \")\");\n      }\n\n      throw new Error(\"Unknown doc type \" + doc.type);\n    }\n\n    function printGroupId(id) {\n      if (typeof id !== \"symbol\") {\n        return JSON.stringify(String(id));\n      }\n\n      if (id in printedSymbols) {\n        return printedSymbols[id];\n      } // TODO: use Symbol.prototype.description instead of slice once Node 10 is dropped\n\n\n      const prefix = String(id).slice(7, -1) || \"symbol\";\n\n      for (let counter = 0;; counter++) {\n        const key = prefix + (counter > 0 ? \" #\".concat(counter) : \"\");\n\n        if (!usedKeysForSymbols.has(key)) {\n          usedKeysForSymbols.add(key);\n          return printedSymbols[id] = \"Symbol.for(\".concat(JSON.stringify(key), \")\");\n        }\n      }\n    }\n  }\n\n  var docDebug = {\n    printDocToDebug\n  };\n  /**\n   * @typedef {import(\"./doc-builders\").Doc} Doc\n   */\n\n  var document = {\n    builders: docBuilders,\n    printer: docPrinter,\n    utils: docUtils,\n    debug: docDebug\n  };\n  return document;\n});","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/node_modules/prettier/doc.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","doc","concat","parts","type","indent$1","contents","align","widthOrString","n","group","opts","id","break","Boolean","shouldBreak","expandedStates","dedentToRoot","Number","NEGATIVE_INFINITY","markAsRoot","dedent","conditionalGroup","states","Object","assign","fill$1","ifBreak","breakContents","flatContents","groupId","indentIfBreak","negate","lineSuffix","lineSuffixBoundary","breakParent","trim$1","hardlineWithoutBreakParent","hard","literallineWithoutBreakParent","literal","line","softline","soft","hardline","literalline$1","cursor$1","placeholder","Symbol","join","sep","arr","res","i","length","push","addAlignmentToDoc","size","tabWidth","aligned","Math","floor","label","docBuilders","literalline","fill","cursor","trim","indent","ansiRegex","onlyFirst","pattern","RegExp","undefined","stripAnsi","string","replace","isFullwidthCodePoint","codePoint","isNaN","isFullwidthCodePoint_1","_default$1","default","emojiRegex","stringWidth","width","code","codePointAt","stringWidth_1","_default","escapeStringRegexp","TypeError","getLast$1","getLast_1","_objectWithoutPropertiesLoose","source","excluded","target","sourceKeys","keys","key","indexOf","_taggedTemplateLiteral","strings","raw","slice","freeze","defineProperties","value","fromPairs","pairs","index","result","pair","fromPairs_1","window","defaultSetTimout","Error","defaultClearTimeout","cachedSetTimeout","cachedClearTimeout","setTimeout","clearTimeout","runTimeout","fun","e","call","runClearTimeout","marker","queue","draining","currentQueue","queueIndex","cleanUpNextTick","drainQueue","timeout","len","run","nextTick","args","Array","arguments","Item","array","prototype","apply","title","platform","browser$1","env","argv","version$1","versions","release","config","noop","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","performance","performanceNow","now","mozNow","msNow","oNow","webkitNow","Date","getTime","hrtime","previousTimestamp","clocktime","seconds","nanoseconds","startTime","uptime","currentTime","dif","browser$1$1","browser","version","debug","NODE_DEBUG","test","console","error","debug_1","SEMVER_SPEC_VERSION","MAX_LENGTH$1","MAX_SAFE_INTEGER$1","MAX_SAFE_INTEGER","MAX_SAFE_COMPONENT_LENGTH","constants","MAX_LENGTH","createCommonjsModule","fn","re_1","re","src","t","R","createToken","isGlobal","NUMERICIDENTIFIER","NUMERICIDENTIFIERLOOSE","NONNUMERICIDENTIFIER","PRERELEASEIDENTIFIER","PRERELEASEIDENTIFIERLOOSE","BUILDIDENTIFIER","MAINVERSION","PRERELEASE","BUILD","FULLPLAIN","MAINVERSIONLOOSE","PRERELEASELOOSE","LOOSEPLAIN","XRANGEIDENTIFIER","XRANGEIDENTIFIERLOOSE","GTLT","XRANGEPLAIN","XRANGEPLAINLOOSE","COERCE","LONETILDE","tildeTrimReplace","LONECARET","caretTrimReplace","comparatorTrimReplace","parseOptions","options","loose","filter","k","reduce","parseOptions_1","numeric","compareIdentifiers$1","a","b","anum","bnum","rcompareIdentifiers","identifiers","compareIdentifiers","SemVer","constructor","includePrerelease","m","match","LOOSE","FULL","major","minor","patch","prerelease","split","map","num","build","format","toString","compare","other","compareMain","comparePre","compareBuild","inc","identifier","semver$1","compare_1","lt","lt_1","gte","gte_1","arrayify","object","keyName","entries","description","bin","repository","homepage","author","license","main","unpkg","engines","node","files","dependencies","camelcase","chalk","cosmiconfig","dashify","diff","editorconfig","espree","esutils","globby","graphql","ignore","json5","leven","lodash","mem","meriyah","minimatch","minimist","outdent","resolve","semver","typescript","unified","vnopts","wcwidth","devDependencies","benchmark","cspell","eslint","execa","jest","prettier","rimraf","rollup","shelljs","tempy","webpack","scripts","prepublishOnly","lint","fix","require$$3","lib","defineProperty","_i","createWeakMap","WeakMap","fakeSetOrMap","add","delete","get","set","has","hop","hasOwnProperty","obj","prop","extend","reLeadingNewline","reTrailingNewline","reStartsWithNewlineOrIsEmpty","reDetectIndentation","reOnlyWhitespaceWithAtLeastOneNewline","_outdentArray","firstInterpolatedValueSetsIndentationLevel","indentationLevel","reSource","reMatchIndent","newline","trimLeadingNewline","trimTrailingNewline","normalizeNewlines","l","outdentedStrings","v","_","concatStringsAndValues","values","ret","isTemplateStringsArray","createInstance","arrayAutoIndentCache","arrayFirstInterpSetsIndentCache","stringsOrOptions","defaultOutdent","cache","renderedArray","rendered","fullOutdent","str","_templateObject","_templateObject2","_templateObject3","_templateObject4","_templateObject5","_templateObject6","CATEGORY_CONFIG","CATEGORY_EDITOR","CATEGORY_FORMAT","CATEGORY_OTHER","CATEGORY_OUTPUT","CATEGORY_GLOBAL","CATEGORY_SPECIAL","cursorOffset","since","category","range","start","end","POSITIVE_INFINITY","step","cliCategory","endOfLine","choices","filepath","cliName","cliDescription","insertPragma","parser","exception","plugins","pluginSearchDirs","printWidth","rangeEnd","rangeStart","requirePragma","useTabs","embeddedLanguageFormatting","coreOptions$1","currentVersion","coreOptions","getSupportInfo$1","showUnreleased","showDeprecated","showInternal","languages","all","plugin","filterSince","option","filterDeprecated","sort","mapInternal","isArray","info1","info2","collectParsersFromLanguages","pluginDefaults","defaultOptions","deprecated","newObject","existingValues","Set","choice","language","parsers","find","support","getSupportInfo","notAsciiRegex","getPenultimate","skip","chars","text","backwards","c","charAt","includes","skipWhitespace","skipSpaces","skipToLineEnd","skipEverythingButNewLine","skipInlineComment","skipTrailingComment","skipNewline","atIndex","hasNewline","idx","idx2","hasNewlineInRange","isPreviousLineEmpty","locStart","isNextLineEmptyAfterIndex","oldIdx","isNextLineEmpty","locEnd","getNextNonSpaceNonCommentCharacterIndexWithStartIndex","nextIdx","getNextNonSpaceNonCommentCharacterIndex","getNextNonSpaceNonCommentCharacter","hasSpaces","getAlignmentSize","startIndex","getIndentSize","lastNewlineIndex","lastIndexOf","getPreferredQuote","preferredQuote","rawContent","double","quote","regex","single","preferred","alternate","numPreferredQuotes","numAlternateQuotes","printString","enclosingQuote","quoteProps","singleQuote","__isInHtmlAttribute","makeString","__embeddedInHtml","unescapeUnnecessaryEscapes","otherQuote","newContent","escaped","printNumber","rawNumber","toLowerCase","getMaxContinuousCount","results","maxCount","max","getMinNotPresentContinuousCount","matches","countPresent","Map","count","getStringWidth$1","addCommentHelper","comment","comments","printed","nodeDescription","describeNodeForDebugging","addLeadingComment","leading","trailing","addDanglingComment","addTrailingComment","replaceEndOfLineWith","replacement","part","inferParserByLanguage","matched","aliases","extensions","isFrontMatterNode","getShebang","startsWith","isNonEmptyArray","createGroupIdMapper","groupIds","nodeType","kind","nodeName","String","operator","util","getStringWidth","getLast","guessEndOfLine","convertEndOfLineToChars$1","countEndOfLineChars","eol","JSON","stringify","endOfLines","normalizeEndOfLine","convertEndOfLineToChars","isConcat$2","getDocParts$2","traverseDocOnExitStackMarker","traverseDoc","onEnter","onExit","shouldTraverseConditionalGroups","docsStack","pop","ic","mapDoc","cb","mapped","rec","process","findInDoc","defaultValue","hasStopped","findInDocOnEnterFn","maybeResult","willBreakFn","willBreak","breakParentGroup","groupStack","parentGroup","propagateBreaks","alreadyVisitedSet","propagateBreaksOnEnterFn","propagateBreaksOnExitFn","removeLinesFn","removeLines","isHardline","nextDoc","stripDocTrailingHardlineFromDoc","lastPart","stripTrailingHardline","cleanDoc","cleanDocFn","every","currentPart","restParts","currentDoc","normalizeParts","newParts","shift","unshift","normalizeDoc","replaceNewlinesWithLiterallines","docUtils","isConcat","getDocParts","isConcat$1","getDocParts$1","groupModeMap","MODE_BREAK","MODE_FLAT","rootIndent","makeIndent","ind","generateInd","makeAlign","widthOrDoc","root","alignType","newPart","lastTabs","lastSpaces","flush","addTabs","addSpaces","flushSpaces","repeat","flushTabs","resetLast","out","trimCount","trimmed","fits","next","restCommands","hasLineSuffix","mustBeFlat","restIdx","cmds","mode","groupMode","printDocToString","newLine","pos","shouldRemeasure","formatted","rem","mostExpanded","state","cmd","content","whitespace","contentFlatCmd","contentBreakCmd","contentFits","whitespaceFlatCmd","whitespaceBreakCmd","splice","remainingCmd","secondContent","firstAndSecondContentFlatCmd","firstAndSecondContentFits","reverse","cursorPlaceholderIndex","otherCursorPlaceholderIndex","beforeCursor","aroundCursor","afterCursor","cursorNodeStart","cursorNodeText","docPrinter","flattenDoc","flattened","printDocToDebug","printedSymbols","create","usedKeysForSymbols","printDoc","parentParts","withBreakParent","afterHardline","printGroupId","optionsParts","prefix","counter","docDebug","document","builders","printer","utils"],"mappings":"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","sourcesContent":["(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.doc = factory());\n}(this, (function () { 'use strict';\n\n  /**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */\n\n\n  function concat(parts) {\n    // access the internals of a document directly.\n    // if(parts.length === 1) {\n    //   // If it's a single document, no need to concat it.\n    //   return parts[0];\n    // }\n\n\n    return {\n      type: \"concat\",\n      parts\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function indent$1(contents) {\n\n    return {\n      type: \"indent\",\n      contents\n    };\n  }\n  /**\n   * @param {number | string} widthOrString\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function align(widthOrString, contents) {\n\n    return {\n      type: \"align\",\n      contents,\n      n: widthOrString\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function group(contents, opts = {}) {\n\n    return {\n      type: \"group\",\n      id: opts.id,\n      contents,\n      break: Boolean(opts.shouldBreak),\n      expandedStates: opts.expandedStates\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function dedentToRoot(contents) {\n    return align(Number.NEGATIVE_INFINITY, contents);\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function markAsRoot(contents) {\n    // @ts-ignore - TBD ???:\n    return align({\n      type: \"root\"\n    }, contents);\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function dedent(contents) {\n    return align(-1, contents);\n  }\n  /**\n   * @param {Doc[]} states\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function conditionalGroup(states, opts) {\n    return group(states[0], Object.assign({}, opts, {\n      expandedStates: states\n    }));\n  }\n  /**\n   * @param {Doc[]} parts\n   * @returns Doc\n   */\n\n\n  function fill$1(parts) {\n\n    return {\n      type: \"fill\",\n      parts\n    };\n  }\n  /**\n   * @param {Doc} [breakContents]\n   * @param {Doc} [flatContents]\n   * @param {object} [opts] - TBD ???\n   * @returns Doc\n   */\n\n\n  function ifBreak(breakContents, flatContents, opts = {}) {\n\n    return {\n      type: \"if-break\",\n      breakContents,\n      flatContents,\n      groupId: opts.groupId\n    };\n  }\n  /**\n   * Optimized version of `ifBreak(indent(doc), doc, { groupId: ... })`\n   * @param {Doc} contents\n   * @param {{ groupId: symbol, negate?: boolean }} opts\n   * @returns Doc\n   */\n\n\n  function indentIfBreak(contents, opts) {\n    return {\n      type: \"indent-if-break\",\n      contents,\n      groupId: opts.groupId,\n      negate: opts.negate\n    };\n  }\n  /**\n   * @param {Doc} contents\n   * @returns Doc\n   */\n\n\n  function lineSuffix(contents) {\n\n    return {\n      type: \"line-suffix\",\n      contents\n    };\n  }\n\n  const lineSuffixBoundary = {\n    type: \"line-suffix-boundary\"\n  };\n  const breakParent = {\n    type: \"break-parent\"\n  };\n  const trim$1 = {\n    type: \"trim\"\n  };\n  const hardlineWithoutBreakParent = {\n    type: \"line\",\n    hard: true\n  };\n  const literallineWithoutBreakParent = {\n    type: \"line\",\n    hard: true,\n    literal: true\n  };\n  const line = {\n    type: \"line\"\n  };\n  const softline = {\n    type: \"line\",\n    soft: true\n  }; // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n  const hardline = concat([hardlineWithoutBreakParent, breakParent]); // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n  const literalline$1 = concat([literallineWithoutBreakParent, breakParent]);\n  const cursor$1 = {\n    type: \"cursor\",\n    placeholder: Symbol(\"cursor\")\n  };\n  /**\n   * @param {Doc} sep\n   * @param {Doc[]} arr\n   * @returns Doc\n   */\n\n  function join(sep, arr) {\n    const res = [];\n\n    for (let i = 0; i < arr.length; i++) {\n      if (i !== 0) {\n        res.push(sep);\n      }\n\n      res.push(arr[i]);\n    } // eslint-disable-next-line prettier-internal-rules/no-doc-builder-concat\n\n\n    return concat(res);\n  }\n  /**\n   * @param {Doc} doc\n   * @param {number} size\n   * @param {number} tabWidth\n   */\n\n\n  function addAlignmentToDoc(doc, size, tabWidth) {\n    let aligned = doc;\n\n    if (size > 0) {\n      // Use indent to add tabs for all the levels of tabs we need\n      for (let i = 0; i < Math.floor(size / tabWidth); ++i) {\n        aligned = indent$1(aligned);\n      } // Use align for all the spaces that are needed\n\n\n      aligned = align(size % tabWidth, aligned); // size is absolute from 0 and not relative to the current\n      // indentation, so we use -Infinity to reset the indentation to 0\n\n      aligned = align(Number.NEGATIVE_INFINITY, aligned);\n    }\n\n    return aligned;\n  }\n\n  function label(label, contents) {\n    return {\n      type: \"label\",\n      label,\n      contents\n    };\n  }\n\n  var docBuilders = {\n    concat,\n    join,\n    line,\n    softline,\n    hardline,\n    literalline: literalline$1,\n    group,\n    conditionalGroup,\n    fill: fill$1,\n    lineSuffix,\n    lineSuffixBoundary,\n    cursor: cursor$1,\n    breakParent,\n    ifBreak,\n    trim: trim$1,\n    indent: indent$1,\n    indentIfBreak,\n    align,\n    addAlignmentToDoc,\n    markAsRoot,\n    dedentToRoot,\n    dedent,\n    hardlineWithoutBreakParent,\n    literallineWithoutBreakParent,\n    label\n  };\n\n  var ansiRegex = ({\n    onlyFirst = false\n  } = {}) => {\n    const pattern = ['[\\\\u001B\\\\u009B][[\\\\]()#;?]*(?:(?:(?:[a-zA-Z\\\\d]*(?:;[-a-zA-Z\\\\d\\\\/#&.:=?%@~_]*)*)?\\\\u0007)', '(?:(?:\\\\d{1,4}(?:;\\\\d{0,4})*)?[\\\\dA-PR-TZcf-ntqry=><~]))'].join('|');\n    return new RegExp(pattern, onlyFirst ? undefined : 'g');\n  };\n\n  var stripAnsi = string => typeof string === 'string' ? string.replace(ansiRegex(), '') : string;\n\n  /* eslint-disable yoda */\n\n  const isFullwidthCodePoint = codePoint => {\n    if (Number.isNaN(codePoint)) {\n      return false;\n    } // Code points are derived from:\n    // http://www.unix.org/Public/UNIDATA/EastAsianWidth.txt\n\n\n    if (codePoint >= 0x1100 && (codePoint <= 0x115F || // Hangul Jamo\n    codePoint === 0x2329 || // LEFT-POINTING ANGLE BRACKET\n    codePoint === 0x232A || // RIGHT-POINTING ANGLE BRACKET\n    // CJK Radicals Supplement .. Enclosed CJK Letters and Months\n    0x2E80 <= codePoint && codePoint <= 0x3247 && codePoint !== 0x303F || // Enclosed CJK Letters and Months .. CJK Unified Ideographs Extension A\n    0x3250 <= codePoint && codePoint <= 0x4DBF || // CJK Unified Ideographs .. Yi Radicals\n    0x4E00 <= codePoint && codePoint <= 0xA4C6 || // Hangul Jamo Extended-A\n    0xA960 <= codePoint && codePoint <= 0xA97C || // Hangul Syllables\n    0xAC00 <= codePoint && codePoint <= 0xD7A3 || // CJK Compatibility Ideographs\n    0xF900 <= codePoint && codePoint <= 0xFAFF || // Vertical Forms\n    0xFE10 <= codePoint && codePoint <= 0xFE19 || // CJK Compatibility Forms .. Small Form Variants\n    0xFE30 <= codePoint && codePoint <= 0xFE6B || // Halfwidth and Fullwidth Forms\n    0xFF01 <= codePoint && codePoint <= 0xFF60 || 0xFFE0 <= codePoint && codePoint <= 0xFFE6 || // Kana Supplement\n    0x1B000 <= codePoint && codePoint <= 0x1B001 || // Enclosed Ideographic Supplement\n    0x1F200 <= codePoint && codePoint <= 0x1F251 || // CJK Unified Ideographs Extension B .. Tertiary Ideographic Plane\n    0x20000 <= codePoint && codePoint <= 0x3FFFD)) {\n      return true;\n    }\n\n    return false;\n  };\n\n  var isFullwidthCodePoint_1 = isFullwidthCodePoint;\n  var _default$1 = isFullwidthCodePoint;\n  isFullwidthCodePoint_1.default = _default$1;\n\n  var emojiRegex = function () {\n    // https://mths.be/emoji\n    return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73)\\uDB40\\uDC7F|\\uD83D\\uDC68(?:\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68\\uD83C\\uDFFB|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C[\\uDFFB-\\uDFFF])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)\\uD83C\\uDFFB|\\uD83E\\uDDD1(?:\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1)|(?:\\uD83E\\uDDD1\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69]))(?:\\uD83C[\\uDFFB-\\uDFFE])|(?:\\uD83E\\uDDD1\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB\\uDFFC])|\\uD83D\\uDC69(?:\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|(?:\\uD83E\\uDDD1\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D\\uD83D\\uDC69)(?:\\uD83C[\\uDFFB-\\uDFFD])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|(?:(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)\\uFE0F|\\uD83D\\uDC6F|\\uD83E[\\uDD3C\\uDDDE\\uDDDF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620)\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83C\\uDDF6\\uD83C\\uDDE6|[#\\*0-9]\\uFE0F\\u20E3|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC70\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD36\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5\\uDEEB\\uDEEC\\uDEF4-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFA\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0D-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD71\\uDD73-\\uDD76\\uDD7A-\\uDDA2\\uDDA5-\\uDDAA\\uDDAE-\\uDDCA\\uDDCD-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE7A\\uDE80-\\uDE82\\uDE90-\\uDE95])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n  };\n\n  const stringWidth = string => {\n    if (typeof string !== 'string' || string.length === 0) {\n      return 0;\n    }\n\n    string = stripAnsi(string);\n\n    if (string.length === 0) {\n      return 0;\n    }\n\n    string = string.replace(emojiRegex(), '  ');\n    let width = 0;\n\n    for (let i = 0; i < string.length; i++) {\n      const code = string.codePointAt(i); // Ignore control characters\n\n      if (code <= 0x1F || code >= 0x7F && code <= 0x9F) {\n        continue;\n      } // Ignore combining characters\n\n\n      if (code >= 0x300 && code <= 0x36F) {\n        continue;\n      } // Surrogates\n\n\n      if (code > 0xFFFF) {\n        i++;\n      }\n\n      width += isFullwidthCodePoint_1(code) ? 2 : 1;\n    }\n\n    return width;\n  };\n\n  var stringWidth_1 = stringWidth; // TODO: remove this in the next major version\n\n  var _default = stringWidth;\n  stringWidth_1.default = _default;\n\n  var escapeStringRegexp = string => {\n    if (typeof string !== 'string') {\n      throw new TypeError('Expected a string');\n    } // Escape characters with special meaning either inside or outside character sets.\n    // Use a simple backslash escape when it’s always valid, and a \\unnnn escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\n\n    return string.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&').replace(/-/g, '\\\\x2d');\n  };\n\n  const getLast$1 = arr => arr[arr.length - 1];\n\n  var getLast_1 = getLast$1;\n\n  function _objectWithoutPropertiesLoose(source, excluded) {\n    if (source == null) return {};\n    var target = {};\n    var sourceKeys = Object.keys(source);\n    var key, i;\n\n    for (i = 0; i < sourceKeys.length; i++) {\n      key = sourceKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      target[key] = source[key];\n    }\n\n    return target;\n  }\n\n  function _taggedTemplateLiteral(strings, raw) {\n    if (!raw) {\n      raw = strings.slice(0);\n    }\n\n    return Object.freeze(Object.defineProperties(strings, {\n      raw: {\n        value: Object.freeze(raw)\n      }\n    }));\n  }\n\n  /**\n   * The inverse of `_.toPairs`; this method returns an object composed\n   * from key-value `pairs`.\n   *\n   * @static\n   * @memberOf _\n   * @since 4.0.0\n   * @category Array\n   * @param {Array} pairs The key-value pairs.\n   * @returns {Object} Returns the new object.\n   * @example\n   *\n   * _.fromPairs([['a', 1], ['b', 2]]);\n   * // => { 'a': 1, 'b': 2 }\n   */\n  function fromPairs(pairs) {\n    var index = -1,\n        length = pairs == null ? 0 : pairs.length,\n        result = {};\n\n    while (++index < length) {\n      var pair = pairs[index];\n      result[pair[0]] = pair[1];\n    }\n\n    return result;\n  }\n\n  var fromPairs_1 = fromPairs;\n\n  var global = (typeof global !== \"undefined\" ? global :\n    typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window : {});\n\n  // shim for using process in browser\n  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js\n\n  function defaultSetTimout() {\n      throw new Error('setTimeout has not been defined');\n  }\n  function defaultClearTimeout () {\n      throw new Error('clearTimeout has not been defined');\n  }\n  var cachedSetTimeout = defaultSetTimout;\n  var cachedClearTimeout = defaultClearTimeout;\n  if (typeof global.setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n  }\n  if (typeof global.clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n  }\n\n  function runTimeout(fun) {\n      if (cachedSetTimeout === setTimeout) {\n          //normal enviroments in sane situations\n          return setTimeout(fun, 0);\n      }\n      // if setTimeout wasn't available but was latter defined\n      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n          cachedSetTimeout = setTimeout;\n          return setTimeout(fun, 0);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedSetTimeout(fun, 0);\n      } catch(e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n              return cachedSetTimeout.call(null, fun, 0);\n          } catch(e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n              return cachedSetTimeout.call(this, fun, 0);\n          }\n      }\n\n\n  }\n  function runClearTimeout(marker) {\n      if (cachedClearTimeout === clearTimeout) {\n          //normal enviroments in sane situations\n          return clearTimeout(marker);\n      }\n      // if clearTimeout wasn't available but was latter defined\n      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n          cachedClearTimeout = clearTimeout;\n          return clearTimeout(marker);\n      }\n      try {\n          // when when somebody has screwed with setTimeout but no I.E. maddness\n          return cachedClearTimeout(marker);\n      } catch (e){\n          try {\n              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n              return cachedClearTimeout.call(null, marker);\n          } catch (e){\n              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n              // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n              return cachedClearTimeout.call(this, marker);\n          }\n      }\n\n\n\n  }\n  var queue = [];\n  var draining = false;\n  var currentQueue;\n  var queueIndex = -1;\n\n  function cleanUpNextTick() {\n      if (!draining || !currentQueue) {\n          return;\n      }\n      draining = false;\n      if (currentQueue.length) {\n          queue = currentQueue.concat(queue);\n      } else {\n          queueIndex = -1;\n      }\n      if (queue.length) {\n          drainQueue();\n      }\n  }\n\n  function drainQueue() {\n      if (draining) {\n          return;\n      }\n      var timeout = runTimeout(cleanUpNextTick);\n      draining = true;\n\n      var len = queue.length;\n      while(len) {\n          currentQueue = queue;\n          queue = [];\n          while (++queueIndex < len) {\n              if (currentQueue) {\n                  currentQueue[queueIndex].run();\n              }\n          }\n          queueIndex = -1;\n          len = queue.length;\n      }\n      currentQueue = null;\n      draining = false;\n      runClearTimeout(timeout);\n  }\n  function nextTick(fun) {\n      var args = new Array(arguments.length - 1);\n      if (arguments.length > 1) {\n          for (var i = 1; i < arguments.length; i++) {\n              args[i - 1] = arguments[i];\n          }\n      }\n      queue.push(new Item(fun, args));\n      if (queue.length === 1 && !draining) {\n          runTimeout(drainQueue);\n      }\n  }\n  // v8 likes predictible objects\n  function Item(fun, array) {\n      this.fun = fun;\n      this.array = array;\n  }\n  Item.prototype.run = function () {\n      this.fun.apply(null, this.array);\n  };\n  var title = 'browser';\n  var platform = 'browser';\n  var browser$1 = true;\n  var env = {};\n  var argv = [];\n  var version$1 = ''; // empty string to avoid regexp issues\n  var versions = {};\n  var release = {};\n  var config = {};\n\n  function noop() {}\n\n  var on = noop;\n  var addListener = noop;\n  var once = noop;\n  var off = noop;\n  var removeListener = noop;\n  var removeAllListeners = noop;\n  var emit = noop;\n\n  function binding(name) {\n      throw new Error('process.binding is not supported');\n  }\n\n  function cwd () { return '/' }\n  function chdir (dir) {\n      throw new Error('process.chdir is not supported');\n  }function umask() { return 0; }\n\n  // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js\n  var performance = global.performance || {};\n  var performanceNow =\n    performance.now        ||\n    performance.mozNow     ||\n    performance.msNow      ||\n    performance.oNow       ||\n    performance.webkitNow  ||\n    function(){ return (new Date()).getTime() };\n\n  // generate timestamp or delta\n  // see http://nodejs.org/api/process.html#process_process_hrtime\n  function hrtime(previousTimestamp){\n    var clocktime = performanceNow.call(performance)*1e-3;\n    var seconds = Math.floor(clocktime);\n    var nanoseconds = Math.floor((clocktime%1)*1e9);\n    if (previousTimestamp) {\n      seconds = seconds - previousTimestamp[0];\n      nanoseconds = nanoseconds - previousTimestamp[1];\n      if (nanoseconds<0) {\n        seconds--;\n        nanoseconds += 1e9;\n      }\n    }\n    return [seconds,nanoseconds]\n  }\n\n  var startTime = new Date();\n  function uptime() {\n    var currentTime = new Date();\n    var dif = currentTime - startTime;\n    return dif / 1000;\n  }\n\n  var browser$1$1 = {\n    nextTick: nextTick,\n    title: title,\n    browser: browser$1,\n    env: env,\n    argv: argv,\n    version: version$1,\n    versions: versions,\n    on: on,\n    addListener: addListener,\n    once: once,\n    off: off,\n    removeListener: removeListener,\n    removeAllListeners: removeAllListeners,\n    emit: emit,\n    binding: binding,\n    cwd: cwd,\n    chdir: chdir,\n    umask: umask,\n    hrtime: hrtime,\n    platform: platform,\n    release: release,\n    config: config,\n    uptime: uptime\n  };\n\n  const debug = typeof browser$1$1 === 'object' && browser$1$1.env && browser$1$1.env.NODE_DEBUG && /\\bsemver\\b/i.test(browser$1$1.env.NODE_DEBUG) ? (...args) => console.error('SEMVER', ...args) : () => {};\n  var debug_1 = debug;\n\n  // Note: this is the semver.org version of the spec that it implements\n  // Not necessarily the package version of this code.\n  const SEMVER_SPEC_VERSION = '2.0.0';\n  const MAX_LENGTH$1 = 256;\n  const MAX_SAFE_INTEGER$1 = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */\n  9007199254740991; // Max safe segment length for coercion.\n\n  const MAX_SAFE_COMPONENT_LENGTH = 16;\n  var constants = {\n    SEMVER_SPEC_VERSION,\n    MAX_LENGTH: MAX_LENGTH$1,\n    MAX_SAFE_INTEGER: MAX_SAFE_INTEGER$1,\n    MAX_SAFE_COMPONENT_LENGTH\n  };\n\n  function createCommonjsModule(fn) {\n    var module = { exports: {} };\n  \treturn fn(module, module.exports), module.exports;\n  }\n\n  var re_1 = createCommonjsModule(function (module, exports) {\n    const {\n      MAX_SAFE_COMPONENT_LENGTH\n    } = constants;\n    exports = module.exports = {}; // The actual regexps go on exports.re\n\n    const re = exports.re = [];\n    const src = exports.src = [];\n    const t = exports.t = {};\n    let R = 0;\n\n    const createToken = (name, value, isGlobal) => {\n      const index = R++;\n      debug_1(index, value);\n      t[name] = index;\n      src[index] = value;\n      re[index] = new RegExp(value, isGlobal ? 'g' : undefined);\n    }; // The following Regular Expressions can be used for tokenizing,\n    // validating, and parsing SemVer version strings.\n    // ## Numeric Identifier\n    // A single `0`, or a non-zero digit followed by zero or more digits.\n\n\n    createToken('NUMERICIDENTIFIER', '0|[1-9]\\\\d*');\n    createToken('NUMERICIDENTIFIERLOOSE', '[0-9]+'); // ## Non-numeric Identifier\n    // Zero or more digits, followed by a letter or hyphen, and then zero or\n    // more letters, digits, or hyphens.\n\n    createToken('NONNUMERICIDENTIFIER', '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'); // ## Main Version\n    // Three dot-separated numeric identifiers.\n\n    createToken('MAINVERSION', \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIER], \")\"));\n    createToken('MAINVERSIONLOOSE', \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\\\\.\") + \"(\".concat(src[t.NUMERICIDENTIFIERLOOSE], \")\")); // ## Pre-release Version Identifier\n    // A numeric identifier, or a non-numeric identifier.\n\n    createToken('PRERELEASEIDENTIFIER', \"(?:\".concat(src[t.NUMERICIDENTIFIER], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\"));\n    createToken('PRERELEASEIDENTIFIERLOOSE', \"(?:\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|\").concat(src[t.NONNUMERICIDENTIFIER], \")\")); // ## Pre-release Version\n    // Hyphen, followed by one or more dot-separated pre-release version\n    // identifiers.\n\n    createToken('PRERELEASE', \"(?:-(\".concat(src[t.PRERELEASEIDENTIFIER], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIER], \")*))\"));\n    createToken('PRERELEASELOOSE', \"(?:-?(\".concat(src[t.PRERELEASEIDENTIFIERLOOSE], \"(?:\\\\.\").concat(src[t.PRERELEASEIDENTIFIERLOOSE], \")*))\")); // ## Build Metadata Identifier\n    // Any combination of digits, letters, or hyphens.\n\n    createToken('BUILDIDENTIFIER', '[0-9A-Za-z-]+'); // ## Build Metadata\n    // Plus sign, followed by one or more period-separated build metadata\n    // identifiers.\n\n    createToken('BUILD', \"(?:\\\\+(\".concat(src[t.BUILDIDENTIFIER], \"(?:\\\\.\").concat(src[t.BUILDIDENTIFIER], \")*))\")); // ## Full Version String\n    // A main version, followed optionally by a pre-release version and\n    // build metadata.\n    // Note that the only major, minor, patch, and pre-release sections of\n    // the version string are capturing groups.  The build metadata is not a\n    // capturing group, because it should not ever be used in version\n    // comparison.\n\n    createToken('FULLPLAIN', \"v?\".concat(src[t.MAINVERSION]).concat(src[t.PRERELEASE], \"?\").concat(src[t.BUILD], \"?\"));\n    createToken('FULL', \"^\".concat(src[t.FULLPLAIN], \"$\")); // like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n    // also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n    // common in the npm registry.\n\n    createToken('LOOSEPLAIN', \"[v=\\\\s]*\".concat(src[t.MAINVERSIONLOOSE]).concat(src[t.PRERELEASELOOSE], \"?\").concat(src[t.BUILD], \"?\"));\n    createToken('LOOSE', \"^\".concat(src[t.LOOSEPLAIN], \"$\"));\n    createToken('GTLT', '((?:<|>)?=?)'); // Something like \"2.*\" or \"1.2.x\".\n    // Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n    // Only the first item is strictly required.\n\n    createToken('XRANGEIDENTIFIERLOOSE', \"\".concat(src[t.NUMERICIDENTIFIERLOOSE], \"|x|X|\\\\*\"));\n    createToken('XRANGEIDENTIFIER', \"\".concat(src[t.NUMERICIDENTIFIER], \"|x|X|\\\\*\"));\n    createToken('XRANGEPLAIN', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIER], \")\") + \"(?:\".concat(src[t.PRERELEASE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\n    createToken('XRANGEPLAINLOOSE', \"[v=\\\\s]*(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\\\\.(\".concat(src[t.XRANGEIDENTIFIERLOOSE], \")\") + \"(?:\".concat(src[t.PRERELEASELOOSE], \")?\").concat(src[t.BUILD], \"?\") + \")?)?\");\n    createToken('XRANGE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('XRANGELOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*\").concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Coercion.\n    // Extract anything that could conceivably be a part of a valid semver\n\n    createToken('COERCE', \"\".concat('(^|[^\\\\d])' + '(\\\\d{1,').concat(MAX_SAFE_COMPONENT_LENGTH, \"})\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:\\\\.(\\\\d{1,\".concat(MAX_SAFE_COMPONENT_LENGTH, \"}))?\") + \"(?:$|[^\\\\d])\");\n    createToken('COERCERTL', src[t.COERCE], true); // Tilde ranges.\n    // Meaning is \"reasonably at or greater than\"\n\n    createToken('LONETILDE', '(?:~>?)');\n    createToken('TILDETRIM', \"(\\\\s*)\".concat(src[t.LONETILDE], \"\\\\s+\"), true);\n    exports.tildeTrimReplace = '$1~';\n    createToken('TILDE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('TILDELOOSE', \"^\".concat(src[t.LONETILDE]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // Caret ranges.\n    // Meaning is \"at least and backwards compatible with\"\n\n    createToken('LONECARET', '(?:\\\\^)');\n    createToken('CARETTRIM', \"(\\\\s*)\".concat(src[t.LONECARET], \"\\\\s+\"), true);\n    exports.caretTrimReplace = '$1^';\n    createToken('CARET', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAIN], \"$\"));\n    createToken('CARETLOOSE', \"^\".concat(src[t.LONECARET]).concat(src[t.XRANGEPLAINLOOSE], \"$\")); // A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\n\n    createToken('COMPARATORLOOSE', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \")$|^$\"));\n    createToken('COMPARATOR', \"^\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.FULLPLAIN], \")$|^$\")); // An expression to strip any whitespace between the gtlt and the thing\n    // it modifies, so that `> 1.2.3` ==> `>1.2.3`\n\n    createToken('COMPARATORTRIM', \"(\\\\s*)\".concat(src[t.GTLT], \"\\\\s*(\").concat(src[t.LOOSEPLAIN], \"|\").concat(src[t.XRANGEPLAIN], \")\"), true);\n    exports.comparatorTrimReplace = '$1$2$3'; // Something like `1.2.3 - 1.2.4`\n    // Note that these all use the loose form, because they'll be\n    // checked against either the strict or loose comparator form\n    // later.\n\n    createToken('HYPHENRANGE', \"^\\\\s*(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAIN], \")\") + \"\\\\s*$\");\n    createToken('HYPHENRANGELOOSE', \"^\\\\s*(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s+-\\\\s+\" + \"(\".concat(src[t.XRANGEPLAINLOOSE], \")\") + \"\\\\s*$\"); // Star ranges basically just allow anything at all.\n\n    createToken('STAR', '(<|>)?=?\\\\s*\\\\*'); // >=0.0.0 is like a star\n\n    createToken('GTE0', '^\\\\s*>=\\\\s*0\\.0\\.0\\\\s*$');\n    createToken('GTE0PRE', '^\\\\s*>=\\\\s*0\\.0\\.0-0\\\\s*$');\n  });\n\n  // parse out just the options we care about so we always get a consistent\n  // obj with keys in a consistent order.\n  const opts = ['includePrerelease', 'loose', 'rtl'];\n\n  const parseOptions = options => !options ? {} : typeof options !== 'object' ? {\n    loose: true\n  } : opts.filter(k => options[k]).reduce((options, k) => {\n    options[k] = true;\n    return options;\n  }, {});\n\n  var parseOptions_1 = parseOptions;\n\n  const numeric = /^[0-9]+$/;\n\n  const compareIdentifiers$1 = (a, b) => {\n    const anum = numeric.test(a);\n    const bnum = numeric.test(b);\n\n    if (anum && bnum) {\n      a = +a;\n      b = +b;\n    }\n\n    return a === b ? 0 : anum && !bnum ? -1 : bnum && !anum ? 1 : a < b ? -1 : 1;\n  };\n\n  const rcompareIdentifiers = (a, b) => compareIdentifiers$1(b, a);\n\n  var identifiers = {\n    compareIdentifiers: compareIdentifiers$1,\n    rcompareIdentifiers\n  };\n\n  const {\n    MAX_LENGTH,\n    MAX_SAFE_INTEGER\n  } = constants;\n  const {\n    re,\n    t\n  } = re_1;\n  const {\n    compareIdentifiers\n  } = identifiers;\n\n  class SemVer {\n    constructor(version, options) {\n      options = parseOptions_1(options);\n\n      if (version instanceof SemVer) {\n        if (version.loose === !!options.loose && version.includePrerelease === !!options.includePrerelease) {\n          return version;\n        } else {\n          version = version.version;\n        }\n      } else if (typeof version !== 'string') {\n        throw new TypeError(\"Invalid Version: \".concat(version));\n      }\n\n      if (version.length > MAX_LENGTH) {\n        throw new TypeError(\"version is longer than \".concat(MAX_LENGTH, \" characters\"));\n      }\n\n      debug_1('SemVer', version, options);\n      this.options = options;\n      this.loose = !!options.loose; // this isn't actually relevant for versions, but keep it so that we\n      // don't run into trouble passing this.options around.\n\n      this.includePrerelease = !!options.includePrerelease;\n      const m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL]);\n\n      if (!m) {\n        throw new TypeError(\"Invalid Version: \".concat(version));\n      }\n\n      this.raw = version; // these are actually numbers\n\n      this.major = +m[1];\n      this.minor = +m[2];\n      this.patch = +m[3];\n\n      if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n        throw new TypeError('Invalid major version');\n      }\n\n      if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n        throw new TypeError('Invalid minor version');\n      }\n\n      if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n        throw new TypeError('Invalid patch version');\n      } // numberify any prerelease numeric ids\n\n\n      if (!m[4]) {\n        this.prerelease = [];\n      } else {\n        this.prerelease = m[4].split('.').map(id => {\n          if (/^[0-9]+$/.test(id)) {\n            const num = +id;\n\n            if (num >= 0 && num < MAX_SAFE_INTEGER) {\n              return num;\n            }\n          }\n\n          return id;\n        });\n      }\n\n      this.build = m[5] ? m[5].split('.') : [];\n      this.format();\n    }\n\n    format() {\n      this.version = \"\".concat(this.major, \".\").concat(this.minor, \".\").concat(this.patch);\n\n      if (this.prerelease.length) {\n        this.version += \"-\".concat(this.prerelease.join('.'));\n      }\n\n      return this.version;\n    }\n\n    toString() {\n      return this.version;\n    }\n\n    compare(other) {\n      debug_1('SemVer.compare', this.version, this.options, other);\n\n      if (!(other instanceof SemVer)) {\n        if (typeof other === 'string' && other === this.version) {\n          return 0;\n        }\n\n        other = new SemVer(other, this.options);\n      }\n\n      if (other.version === this.version) {\n        return 0;\n      }\n\n      return this.compareMain(other) || this.comparePre(other);\n    }\n\n    compareMain(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      return compareIdentifiers(this.major, other.major) || compareIdentifiers(this.minor, other.minor) || compareIdentifiers(this.patch, other.patch);\n    }\n\n    comparePre(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      } // NOT having a prerelease is > having one\n\n\n      if (this.prerelease.length && !other.prerelease.length) {\n        return -1;\n      } else if (!this.prerelease.length && other.prerelease.length) {\n        return 1;\n      } else if (!this.prerelease.length && !other.prerelease.length) {\n        return 0;\n      }\n\n      let i = 0;\n\n      do {\n        const a = this.prerelease[i];\n        const b = other.prerelease[i];\n        debug_1('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    }\n\n    compareBuild(other) {\n      if (!(other instanceof SemVer)) {\n        other = new SemVer(other, this.options);\n      }\n\n      let i = 0;\n\n      do {\n        const a = this.build[i];\n        const b = other.build[i];\n        debug_1('prerelease compare', i, a, b);\n\n        if (a === undefined && b === undefined) {\n          return 0;\n        } else if (b === undefined) {\n          return 1;\n        } else if (a === undefined) {\n          return -1;\n        } else if (a === b) {\n          continue;\n        } else {\n          return compareIdentifiers(a, b);\n        }\n      } while (++i);\n    } // preminor will bump the version up to the next minor release, and immediately\n    // down to pre-release. premajor and prepatch work the same way.\n\n\n    inc(release, identifier) {\n      switch (release) {\n        case 'premajor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor = 0;\n          this.major++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'preminor':\n          this.prerelease.length = 0;\n          this.patch = 0;\n          this.minor++;\n          this.inc('pre', identifier);\n          break;\n\n        case 'prepatch':\n          // If this is already a prerelease, it will bump to the next version\n          // drop any prereleases that might already exist, since they are not\n          // relevant at this point.\n          this.prerelease.length = 0;\n          this.inc('patch', identifier);\n          this.inc('pre', identifier);\n          break;\n        // If the input is a non-prerelease version, this acts the same as\n        // prepatch.\n\n        case 'prerelease':\n          if (this.prerelease.length === 0) {\n            this.inc('patch', identifier);\n          }\n\n          this.inc('pre', identifier);\n          break;\n\n        case 'major':\n          // If this is a pre-major version, bump up to the same major version.\n          // Otherwise increment major.\n          // 1.0.0-5 bumps to 1.0.0\n          // 1.1.0 bumps to 2.0.0\n          if (this.minor !== 0 || this.patch !== 0 || this.prerelease.length === 0) {\n            this.major++;\n          }\n\n          this.minor = 0;\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'minor':\n          // If this is a pre-minor version, bump up to the same minor version.\n          // Otherwise increment minor.\n          // 1.2.0-5 bumps to 1.2.0\n          // 1.2.1 bumps to 1.3.0\n          if (this.patch !== 0 || this.prerelease.length === 0) {\n            this.minor++;\n          }\n\n          this.patch = 0;\n          this.prerelease = [];\n          break;\n\n        case 'patch':\n          // If this is not a pre-release version, it will increment the patch.\n          // If it is a pre-release it will bump up to the same patch version.\n          // 1.2.0-5 patches to 1.2.0\n          // 1.2.0 patches to 1.2.1\n          if (this.prerelease.length === 0) {\n            this.patch++;\n          }\n\n          this.prerelease = [];\n          break;\n        // This probably shouldn't be used publicly.\n        // 1.0.0 'pre' would become 1.0.0-0 which is the wrong direction.\n\n        case 'pre':\n          if (this.prerelease.length === 0) {\n            this.prerelease = [0];\n          } else {\n            let i = this.prerelease.length;\n\n            while (--i >= 0) {\n              if (typeof this.prerelease[i] === 'number') {\n                this.prerelease[i]++;\n                i = -2;\n              }\n            }\n\n            if (i === -1) {\n              // didn't increment anything\n              this.prerelease.push(0);\n            }\n          }\n\n          if (identifier) {\n            // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n            // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n            if (this.prerelease[0] === identifier) {\n              if (isNaN(this.prerelease[1])) {\n                this.prerelease = [identifier, 0];\n              }\n            } else {\n              this.prerelease = [identifier, 0];\n            }\n          }\n\n          break;\n\n        default:\n          throw new Error(\"invalid increment argument: \".concat(release));\n      }\n\n      this.format();\n      this.raw = this.version;\n      return this;\n    }\n\n  }\n\n  var semver$1 = SemVer;\n\n  const compare = (a, b, loose) => new semver$1(a, loose).compare(new semver$1(b, loose));\n\n  var compare_1 = compare;\n\n  const lt = (a, b, loose) => compare_1(a, b, loose) < 0;\n\n  var lt_1 = lt;\n\n  const gte = (a, b, loose) => compare_1(a, b, loose) >= 0;\n\n  var gte_1 = gte;\n\n  var arrayify = (object, keyName) => Object.entries(object).map(([key, value]) => Object.assign({\n    [keyName]: key\n  }, value));\n\n  var name = \"prettier\";\n  var version = \"2.3.0\";\n  var description = \"Prettier is an opinionated code formatter\";\n  var bin = \"./bin/prettier.js\";\n  var repository = \"prettier/prettier\";\n  var homepage = \"https://prettier.io\";\n  var author = \"James Long\";\n  var license = \"MIT\";\n  var main = \"./index.js\";\n  var browser = \"./standalone.js\";\n  var unpkg = \"./standalone.js\";\n  var engines = {\n  \tnode: \">=10.13.0\"\n  };\n  var files = [\n  \t\"index.js\",\n  \t\"standalone.js\",\n  \t\"src\",\n  \t\"bin\"\n  ];\n  var dependencies = {\n  \t\"@angular/compiler\": \"11.2.13\",\n  \t\"@babel/code-frame\": \"7.12.13\",\n  \t\"@babel/parser\": \"7.14.1\",\n  \t\"@glimmer/syntax\": \"0.79.0\",\n  \t\"@iarna/toml\": \"2.2.5\",\n  \t\"@typescript-eslint/typescript-estree\": \"4.22.0\",\n  \t\"angular-estree-parser\": \"2.3.0\",\n  \t\"angular-html-parser\": \"1.8.0\",\n  \tcamelcase: \"6.2.0\",\n  \tchalk: \"4.1.1\",\n  \t\"ci-info\": \"3.1.1\",\n  \t\"cjk-regex\": \"2.0.1\",\n  \tcosmiconfig: \"7.0.0\",\n  \tdashify: \"2.0.0\",\n  \tdiff: \"5.0.0\",\n  \teditorconfig: \"0.15.3\",\n  \t\"editorconfig-to-prettier\": \"0.2.0\",\n  \t\"escape-string-regexp\": \"4.0.0\",\n  \tespree: \"7.3.1\",\n  \tesutils: \"2.0.3\",\n  \t\"fast-glob\": \"3.2.5\",\n  \t\"fast-json-stable-stringify\": \"2.1.0\",\n  \t\"find-parent-dir\": \"0.3.0\",\n  \t\"flow-parser\": \"0.150.1\",\n  \t\"get-stdin\": \"8.0.0\",\n  \tglobby: \"11.0.3\",\n  \tgraphql: \"15.5.0\",\n  \t\"html-element-attributes\": \"2.3.0\",\n  \t\"html-styles\": \"1.0.0\",\n  \t\"html-tag-names\": \"1.1.5\",\n  \t\"html-void-elements\": \"1.0.5\",\n  \tignore: \"4.0.6\",\n  \t\"jest-docblock\": \"26.0.0\",\n  \tjson5: \"2.2.0\",\n  \tleven: \"3.1.0\",\n  \t\"lines-and-columns\": \"1.1.6\",\n  \t\"linguist-languages\": \"7.14.0\",\n  \tlodash: \"4.17.21\",\n  \tmem: \"8.1.1\",\n  \tmeriyah: \"4.1.5\",\n  \tminimatch: \"3.0.4\",\n  \tminimist: \"1.2.5\",\n  \t\"n-readlines\": \"1.0.1\",\n  \toutdent: \"0.8.0\",\n  \t\"parse-srcset\": \"ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee\",\n  \t\"please-upgrade-node\": \"3.2.0\",\n  \t\"postcss-less\": \"3.1.4\",\n  \t\"postcss-media-query-parser\": \"0.2.3\",\n  \t\"postcss-scss\": \"2.1.1\",\n  \t\"postcss-selector-parser\": \"2.2.3\",\n  \t\"postcss-values-parser\": \"2.0.1\",\n  \t\"regexp-util\": \"1.2.2\",\n  \t\"remark-footnotes\": \"2.0.0\",\n  \t\"remark-math\": \"3.0.1\",\n  \t\"remark-parse\": \"8.0.3\",\n  \tresolve: \"1.20.0\",\n  \tsemver: \"7.3.5\",\n  \t\"string-width\": \"4.2.2\",\n  \t\"strip-ansi\": \"6.0.0\",\n  \ttypescript: \"4.2.4\",\n  \t\"unicode-regex\": \"3.0.0\",\n  \tunified: \"9.2.1\",\n  \tvnopts: \"1.0.2\",\n  \twcwidth: \"1.0.1\",\n  \t\"yaml-unist-parser\": \"1.3.1\"\n  };\n  var devDependencies = {\n  \t\"@babel/core\": \"7.14.0\",\n  \t\"@babel/preset-env\": \"7.14.1\",\n  \t\"@babel/types\": \"7.14.1\",\n  \t\"@glimmer/reference\": \"0.79.0\",\n  \t\"@rollup/plugin-alias\": \"3.1.2\",\n  \t\"@rollup/plugin-babel\": \"5.3.0\",\n  \t\"@rollup/plugin-commonjs\": \"18.1.0\",\n  \t\"@rollup/plugin-json\": \"4.1.0\",\n  \t\"@rollup/plugin-node-resolve\": \"13.0.0\",\n  \t\"@rollup/plugin-replace\": \"2.4.2\",\n  \t\"@types/estree\": \"0.0.47\",\n  \t\"@types/node\": \"15.0.1\",\n  \t\"babel-jest\": \"26.6.3\",\n  \t\"babel-loader\": \"8.2.2\",\n  \tbenchmark: \"2.1.4\",\n  \t\"builtin-modules\": \"3.2.0\",\n  \t\"cross-env\": \"7.0.3\",\n  \tcspell: \"4.2.8\",\n  \teslint: \"7.26.0\",\n  \t\"eslint-config-prettier\": \"8.3.0\",\n  \t\"eslint-formatter-friendly\": \"7.0.0\",\n  \t\"eslint-plugin-import\": \"2.22.1\",\n  \t\"eslint-plugin-jest\": \"24.3.6\",\n  \t\"eslint-plugin-prettier-internal-rules\": \"link:scripts/tools/eslint-plugin-prettier-internal-rules\",\n  \t\"eslint-plugin-react\": \"7.23.2\",\n  \t\"eslint-plugin-unicorn\": \"31.0.0\",\n  \texeca: \"5.0.0\",\n  \tjest: \"26.6.3\",\n  \t\"jest-snapshot-serializer-ansi\": \"1.0.0\",\n  \t\"jest-snapshot-serializer-raw\": \"1.2.0\",\n  \t\"jest-watch-typeahead\": \"0.6.3\",\n  \t\"npm-run-all\": \"4.1.5\",\n  \t\"path-browserify\": \"1.0.1\",\n  \tprettier: \"2.2.1\",\n  \t\"pretty-bytes\": \"5.6.0\",\n  \trimraf: \"3.0.2\",\n  \trollup: \"2.47.0\",\n  \t\"rollup-plugin-polyfill-node\": \"0.6.2\",\n  \t\"rollup-plugin-terser\": \"7.0.2\",\n  \tshelljs: \"0.8.4\",\n  \t\"snapshot-diff\": \"0.8.1\",\n  \t\"synchronous-promise\": \"2.0.15\",\n  \ttempy: \"1.0.1\",\n  \t\"terser-webpack-plugin\": \"5.1.1\",\n  \twebpack: \"5.36.2\"\n  };\n  var scripts = {\n  \tprepublishOnly: \"echo \\\"Error: must publish from dist/\\\" && exit 1\",\n  \t\"prepare-release\": \"yarn && yarn build && yarn test:dist\",\n  \ttest: \"jest\",\n  \t\"test:dev-package\": \"cross-env INSTALL_PACKAGE=1 jest\",\n  \t\"test:dist\": \"cross-env NODE_ENV=production jest\",\n  \t\"test:dist-standalone\": \"cross-env NODE_ENV=production TEST_STANDALONE=1 jest\",\n  \t\"test:integration\": \"jest tests/integration\",\n  \t\"perf:repeat\": \"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n  \t\"perf:repeat-inspect\": \"yarn && yarn build && cross-env NODE_ENV=production node --inspect-brk ./dist/bin-prettier.js --debug-repeat ${PERF_REPEAT:-1000} --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n  \t\"perf:benchmark\": \"yarn && yarn build && cross-env NODE_ENV=production node ./dist/bin-prettier.js --debug-benchmark --loglevel debug ${PERF_FILE:-./index.js} > /dev/null\",\n  \tlint: \"run-p lint:*\",\n  \t\"lint:typecheck\": \"tsc\",\n  \t\"lint:eslint\": \"cross-env EFF_NO_LINK_RULES=true eslint . --format friendly\",\n  \t\"lint:changelog\": \"node ./scripts/lint-changelog.js\",\n  \t\"lint:prettier\": \"prettier . \\\"!test*\\\" --check\",\n  \t\"lint:dist\": \"eslint --no-eslintrc --no-ignore --no-inline-config --env=es6,browser --parser-options=ecmaVersion:2018 \\\"dist/!(bin-prettier|index|third-party).js\\\"\",\n  \t\"lint:spellcheck\": \"cspell \\\"**/*\\\" \\\".github/**/*\\\"\",\n  \t\"lint:deps\": \"node ./scripts/check-deps.js\",\n  \tfix: \"run-s fix:eslint fix:prettier\",\n  \t\"fix:eslint\": \"yarn lint:eslint --fix\",\n  \t\"fix:prettier\": \"yarn lint:prettier --write\",\n  \tbuild: \"node --max-old-space-size=3072 ./scripts/build/build.js\",\n  \t\"build-docs\": \"node ./scripts/build-docs.js\"\n  };\n  var require$$3 = {\n  \tname: name,\n  \tversion: version,\n  \tdescription: description,\n  \tbin: bin,\n  \trepository: repository,\n  \thomepage: homepage,\n  \tauthor: author,\n  \tlicense: license,\n  \tmain: main,\n  \tbrowser: browser,\n  \tunpkg: unpkg,\n  \tengines: engines,\n  \tfiles: files,\n  \tdependencies: dependencies,\n  \tdevDependencies: devDependencies,\n  \tscripts: scripts\n  };\n\n  var lib = createCommonjsModule(function (module, exports) {\n\n    Object.defineProperty(exports, \"__esModule\", {\n      value: true\n    });\n    exports.outdent = void 0; // In the absence of a WeakSet or WeakMap implementation, don't break, but don't cache either.\n\n    function noop() {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n    }\n\n    function createWeakMap() {\n      if (typeof WeakMap !== \"undefined\") {\n        return new WeakMap();\n      } else {\n        return fakeSetOrMap();\n      }\n    }\n    /**\n     * Creates and returns a no-op implementation of a WeakMap / WeakSet that never stores anything.\n     */\n\n\n    function fakeSetOrMap() {\n      return {\n        add: noop,\n        delete: noop,\n        get: noop,\n        set: noop,\n        has: function (k) {\n          return false;\n        }\n      };\n    } // Safe hasOwnProperty\n\n\n    var hop = Object.prototype.hasOwnProperty;\n\n    var has = function (obj, prop) {\n      return hop.call(obj, prop);\n    }; // Copy all own enumerable properties from source to target\n\n\n    function extend(target, source) {\n      for (var prop in source) {\n        if (has(source, prop)) {\n          target[prop] = source[prop];\n        }\n      }\n\n      return target;\n    }\n\n    var reLeadingNewline = /^[ \\t]*(?:\\r\\n|\\r|\\n)/;\n    var reTrailingNewline = /(?:\\r\\n|\\r|\\n)[ \\t]*$/;\n    var reStartsWithNewlineOrIsEmpty = /^(?:[\\r\\n]|$)/;\n    var reDetectIndentation = /(?:\\r\\n|\\r|\\n)([ \\t]*)(?:[^ \\t\\r\\n]|$)/;\n    var reOnlyWhitespaceWithAtLeastOneNewline = /^[ \\t]*[\\r\\n][ \\t\\r\\n]*$/;\n\n    function _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options) {\n      // If first interpolated value is a reference to outdent,\n      // determine indentation level from the indentation of the interpolated value.\n      var indentationLevel = 0;\n      var match = strings[0].match(reDetectIndentation);\n\n      if (match) {\n        indentationLevel = match[1].length;\n      }\n\n      var reSource = \"(\\\\r\\\\n|\\\\r|\\\\n).{0,\" + indentationLevel + \"}\";\n      var reMatchIndent = new RegExp(reSource, \"g\");\n\n      if (firstInterpolatedValueSetsIndentationLevel) {\n        strings = strings.slice(1);\n      }\n\n      var newline = options.newline,\n          trimLeadingNewline = options.trimLeadingNewline,\n          trimTrailingNewline = options.trimTrailingNewline;\n      var normalizeNewlines = typeof newline === \"string\";\n      var l = strings.length;\n      var outdentedStrings = strings.map(function (v, i) {\n        // Remove leading indentation from all lines\n        v = v.replace(reMatchIndent, \"$1\"); // Trim a leading newline from the first string\n\n        if (i === 0 && trimLeadingNewline) {\n          v = v.replace(reLeadingNewline, \"\");\n        } // Trim a trailing newline from the last string\n\n\n        if (i === l - 1 && trimTrailingNewline) {\n          v = v.replace(reTrailingNewline, \"\");\n        } // Normalize newlines\n\n\n        if (normalizeNewlines) {\n          v = v.replace(/\\r\\n|\\n|\\r/g, function (_) {\n            return newline;\n          });\n        }\n\n        return v;\n      });\n      return outdentedStrings;\n    }\n\n    function concatStringsAndValues(strings, values) {\n      var ret = \"\";\n\n      for (var i = 0, l = strings.length; i < l; i++) {\n        ret += strings[i];\n\n        if (i < l - 1) {\n          ret += values[i];\n        }\n      }\n\n      return ret;\n    }\n\n    function isTemplateStringsArray(v) {\n      return has(v, \"raw\") && has(v, \"length\");\n    }\n    /**\n     * It is assumed that opts will not change.  If this is a problem, clone your options object and pass the clone to\n     * makeInstance\n     * @param options\n     * @return {outdent}\n     */\n\n\n    function createInstance(options) {\n      /** Cache of pre-processed template literal arrays */\n      var arrayAutoIndentCache = createWeakMap();\n      /**\n         * Cache of pre-processed template literal arrays, where first interpolated value is a reference to outdent,\n         * before interpolated values are injected.\n         */\n\n      var arrayFirstInterpSetsIndentCache = createWeakMap();\n\n      function outdent(stringsOrOptions) {\n        var values = [];\n\n        for (var _i = 1; _i < arguments.length; _i++) {\n          values[_i - 1] = arguments[_i];\n        }\n        /* tslint:enable:no-shadowed-variable */\n\n\n        if (isTemplateStringsArray(stringsOrOptions)) {\n          var strings = stringsOrOptions; // Is first interpolated value a reference to outdent, alone on its own line, without any preceding non-whitespace?\n\n          var firstInterpolatedValueSetsIndentationLevel = (values[0] === outdent || values[0] === defaultOutdent) && reOnlyWhitespaceWithAtLeastOneNewline.test(strings[0]) && reStartsWithNewlineOrIsEmpty.test(strings[1]); // Perform outdentation\n\n          var cache = firstInterpolatedValueSetsIndentationLevel ? arrayFirstInterpSetsIndentCache : arrayAutoIndentCache;\n          var renderedArray = cache.get(strings);\n\n          if (!renderedArray) {\n            renderedArray = _outdentArray(strings, firstInterpolatedValueSetsIndentationLevel, options);\n            cache.set(strings, renderedArray);\n          }\n          /** If no interpolated values, skip concatenation step */\n\n\n          if (values.length === 0) {\n            return renderedArray[0];\n          }\n          /** Concatenate string literals with interpolated values */\n\n\n          var rendered = concatStringsAndValues(renderedArray, firstInterpolatedValueSetsIndentationLevel ? values.slice(1) : values);\n          return rendered;\n        } else {\n          // Create and return a new instance of outdent with the given options\n          return createInstance(extend(extend({}, options), stringsOrOptions || {}));\n        }\n      }\n\n      var fullOutdent = extend(outdent, {\n        string: function (str) {\n          return _outdentArray([str], false, options)[0];\n        }\n      });\n      return fullOutdent;\n    }\n\n    var defaultOutdent = createInstance({\n      trimLeadingNewline: true,\n      trimTrailingNewline: true\n    });\n    exports.outdent = defaultOutdent; // Named exports.  Simple and preferred.\n    // import outdent from 'outdent';\n\n    exports.default = defaultOutdent;\n\n    {\n      // In webpack harmony-modules environments, module.exports is read-only,\n      // so we fail gracefully.\n      try {\n        module.exports = defaultOutdent;\n        Object.defineProperty(defaultOutdent, \"__esModule\", {\n          value: true\n        });\n        defaultOutdent.default = defaultOutdent;\n        defaultOutdent.outdent = defaultOutdent;\n      } catch (e) {}\n    }\n  });\n\n  var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6;\n\n  const {\n    outdent\n  } = lib;\n  const CATEGORY_CONFIG = \"Config\";\n  const CATEGORY_EDITOR = \"Editor\";\n  const CATEGORY_FORMAT = \"Format\";\n  const CATEGORY_OTHER = \"Other\";\n  const CATEGORY_OUTPUT = \"Output\";\n  const CATEGORY_GLOBAL = \"Global\";\n  const CATEGORY_SPECIAL = \"Special\";\n  /**\n   * @typedef {Object} OptionInfo\n   * @property {string} [since] - available since version\n   * @property {string} category\n   * @property {'int' | 'boolean' | 'choice' | 'path'} type\n   * @property {boolean} [array] - indicate it's an array of the specified type\n   * @property {OptionValueInfo} [default]\n   * @property {OptionRangeInfo} [range] - for type int\n   * @property {string} description\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionRedirectInfo} [redirect] - redirect deprecated option\n   * @property {(value: any) => boolean} [exception]\n   * @property {OptionChoiceInfo[]} [choices] - for type choice\n   * @property {string} [cliName]\n   * @property {string} [cliCategory]\n   * @property {string} [cliDescription]\n   *\n   * @typedef {number | boolean | string} OptionValue\n   * @typedef {OptionValue | [{ value: OptionValue[] }] | Array<{ since: string, value: OptionValue}>} OptionValueInfo\n   *\n   * @typedef {Object} OptionRedirectInfo\n   * @property {string} option\n   * @property {OptionValue} value\n   *\n   * @typedef {Object} OptionRangeInfo\n   * @property {number} start - recommended range start\n   * @property {number} end - recommended range end\n   * @property {number} step - recommended range step\n   *\n   * @typedef {Object} OptionChoiceInfo\n   * @property {boolean | string} value - boolean for the option that is originally boolean type\n   * @property {string} description\n   * @property {string} [since] - undefined if available since the first version of the option\n   * @property {string} [deprecated] - deprecated since version\n   * @property {OptionValueInfo} [redirect] - redirect deprecated value\n   */\n\n  /** @type {{ [name: string]: OptionInfo }} */\n\n  const options = {\n    cursorOffset: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: -1,\n      range: {\n        start: -1,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n      Print (to stderr) where a cursor at the given position would move to after formatting.\\n      This option cannot be used with --range-start and --range-end.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    endOfLine: {\n      since: \"1.15.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"1.15.0\",\n        value: \"auto\"\n      }, {\n        since: \"2.0.0\",\n        value: \"lf\"\n      }],\n      description: \"Which end of line characters to apply.\",\n      choices: [{\n        value: \"lf\",\n        description: \"Line Feed only (\\\\n), common on Linux and macOS as well as inside git repos\"\n      }, {\n        value: \"crlf\",\n        description: \"Carriage Return + Line Feed characters (\\\\r\\\\n), common on Windows\"\n      }, {\n        value: \"cr\",\n        description: \"Carriage Return character only (\\\\r), used very rarely\"\n      }, {\n        value: \"auto\",\n        description: outdent(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n          Maintain existing\\n          (mixed values within one file are normalised by looking at what's used after the first line)\\n        \"])))\n      }]\n    },\n    filepath: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"path\",\n      description: \"Specify the input filepath. This will be used to do parser inference.\",\n      cliName: \"stdin-filepath\",\n      cliCategory: CATEGORY_OTHER,\n      cliDescription: \"Path to the file to pretend that stdin comes from.\"\n    },\n    insertPragma: {\n      since: \"1.8.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"boolean\",\n      default: false,\n      description: \"Insert @format pragma into file's first docblock comment.\",\n      cliCategory: CATEGORY_OTHER\n    },\n    parser: {\n      since: \"0.0.10\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"0.0.10\",\n        value: \"babylon\"\n      }, {\n        since: \"1.13.0\",\n        value: undefined\n      }],\n      description: \"Which parser to use.\",\n      exception: value => typeof value === \"string\" || typeof value === \"function\",\n      choices: [{\n        value: \"flow\",\n        description: \"Flow\"\n      }, {\n        value: \"babel\",\n        since: \"1.16.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"babel-flow\",\n        since: \"1.16.0\",\n        description: \"Flow\"\n      }, {\n        value: \"babel-ts\",\n        since: \"2.0.0\",\n        description: \"TypeScript\"\n      }, {\n        value: \"typescript\",\n        since: \"1.4.0\",\n        description: \"TypeScript\"\n      }, {\n        value: \"espree\",\n        since: \"2.2.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"meriyah\",\n        since: \"2.2.0\",\n        description: \"JavaScript\"\n      }, {\n        value: \"css\",\n        since: \"1.7.1\",\n        description: \"CSS\"\n      }, {\n        value: \"less\",\n        since: \"1.7.1\",\n        description: \"Less\"\n      }, {\n        value: \"scss\",\n        since: \"1.7.1\",\n        description: \"SCSS\"\n      }, {\n        value: \"json\",\n        since: \"1.5.0\",\n        description: \"JSON\"\n      }, {\n        value: \"json5\",\n        since: \"1.13.0\",\n        description: \"JSON5\"\n      }, {\n        value: \"json-stringify\",\n        since: \"1.13.0\",\n        description: \"JSON.stringify\"\n      }, {\n        value: \"graphql\",\n        since: \"1.5.0\",\n        description: \"GraphQL\"\n      }, {\n        value: \"markdown\",\n        since: \"1.8.0\",\n        description: \"Markdown\"\n      }, {\n        value: \"mdx\",\n        since: \"1.15.0\",\n        description: \"MDX\"\n      }, {\n        value: \"vue\",\n        since: \"1.10.0\",\n        description: \"Vue\"\n      }, {\n        value: \"yaml\",\n        since: \"1.14.0\",\n        description: \"YAML\"\n      }, {\n        value: \"glimmer\",\n        since: \"2.3.0\",\n        description: \"Ember / Handlebars\"\n      }, {\n        value: \"html\",\n        since: \"1.15.0\",\n        description: \"HTML\"\n      }, {\n        value: \"angular\",\n        since: \"1.15.0\",\n        description: \"Angular\"\n      }, {\n        value: \"lwc\",\n        since: \"1.17.0\",\n        description: \"Lightning Web Components\"\n      }]\n    },\n    plugins: {\n      since: \"1.10.0\",\n      type: \"path\",\n      array: true,\n      default: [{\n        value: []\n      }],\n      category: CATEGORY_GLOBAL,\n      description: \"Add a plugin. Multiple plugins can be passed as separate `--plugin`s.\",\n      exception: value => typeof value === \"string\" || typeof value === \"object\",\n      cliName: \"plugin\",\n      cliCategory: CATEGORY_CONFIG\n    },\n    pluginSearchDirs: {\n      since: \"1.13.0\",\n      type: \"path\",\n      array: true,\n      default: [{\n        value: []\n      }],\n      category: CATEGORY_GLOBAL,\n      description: outdent(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral([\"\\n      Custom directory that contains prettier plugins in node_modules subdirectory.\\n      Overrides default behavior when plugins are searched relatively to the location of Prettier.\\n      Multiple values are accepted.\\n    \"]))),\n      exception: value => typeof value === \"string\" || typeof value === \"object\",\n      cliName: \"plugin-search-dir\",\n      cliCategory: CATEGORY_CONFIG\n    },\n    printWidth: {\n      since: \"0.0.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"int\",\n      default: 80,\n      description: \"The line length where Prettier will try wrap.\",\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      }\n    },\n    rangeEnd: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: Number.POSITIVE_INFINITY,\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral([\"\\n      Format code ending at a given character offset (exclusive).\\n      The range will extend forwards to the end of the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    rangeStart: {\n      since: \"1.4.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"int\",\n      default: 0,\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      },\n      description: outdent(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral([\"\\n      Format code starting at a given character offset.\\n      The range will extend backwards to the start of the first line containing the selected statement.\\n      This option cannot be used with --cursor-offset.\\n    \"]))),\n      cliCategory: CATEGORY_EDITOR\n    },\n    requirePragma: {\n      since: \"1.7.0\",\n      category: CATEGORY_SPECIAL,\n      type: \"boolean\",\n      default: false,\n      description: outdent(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral([\"\\n      Require either '@prettier' or '@format' to be present in the file's first docblock comment\\n      in order for it to be formatted.\\n    \"]))),\n      cliCategory: CATEGORY_OTHER\n    },\n    tabWidth: {\n      type: \"int\",\n      category: CATEGORY_GLOBAL,\n      default: 2,\n      description: \"Number of spaces per indentation level.\",\n      range: {\n        start: 0,\n        end: Number.POSITIVE_INFINITY,\n        step: 1\n      }\n    },\n    useTabs: {\n      since: \"1.0.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"boolean\",\n      default: false,\n      description: \"Indent with tabs instead of spaces.\"\n    },\n    embeddedLanguageFormatting: {\n      since: \"2.1.0\",\n      category: CATEGORY_GLOBAL,\n      type: \"choice\",\n      default: [{\n        since: \"2.1.0\",\n        value: \"auto\"\n      }],\n      description: \"Control how Prettier formats quoted code embedded in the file.\",\n      choices: [{\n        value: \"auto\",\n        description: \"Format embedded code if Prettier can automatically identify it.\"\n      }, {\n        value: \"off\",\n        description: \"Never automatically format embedded code.\"\n      }]\n    }\n  };\n  var coreOptions$1 = {\n    CATEGORY_CONFIG,\n    CATEGORY_EDITOR,\n    CATEGORY_FORMAT,\n    CATEGORY_OTHER,\n    CATEGORY_OUTPUT,\n    CATEGORY_GLOBAL,\n    CATEGORY_SPECIAL,\n    options\n  };\n\n  const semver = {\n    compare: compare_1,\n    lt: lt_1,\n    gte: gte_1\n  };\n  const currentVersion = require$$3.version;\n  const coreOptions = coreOptions$1.options;\n  /**\n   * Strings in `plugins` and `pluginSearchDirs` are handled by a wrapped version\n   * of this function created by `withPlugins`. Don't pass them here directly.\n   * @param {object} param0\n   * @param {(string | object)[]=} param0.plugins Strings are resolved by `withPlugins`.\n   * @param {string[]=} param0.pluginSearchDirs Added by `withPlugins`.\n   * @param {boolean=} param0.showUnreleased\n   * @param {boolean=} param0.showDeprecated\n   * @param {boolean=} param0.showInternal\n   */\n\n  function getSupportInfo$1({\n    plugins = [],\n    showUnreleased = false,\n    showDeprecated = false,\n    showInternal = false\n  } = {}) {\n    // pre-release version is smaller than the normal version in semver,\n    // we need to treat it as the normal one so as to test new features.\n    const version = currentVersion.split(\"-\", 1)[0];\n    const languages = plugins.reduce((all, plugin) => [...all, ...(plugin.languages || [])], []).filter(filterSince);\n    const options = arrayify(Object.assign({}, ...plugins.map(({\n      options\n    }) => options), coreOptions), \"name\").filter(option => filterSince(option) && filterDeprecated(option)).sort((a, b) => a.name === b.name ? 0 : a.name < b.name ? -1 : 1).map(mapInternal).map(option => {\n      option = Object.assign({}, option);\n\n      if (Array.isArray(option.default)) {\n        option.default = option.default.length === 1 ? option.default[0].value : option.default.filter(filterSince).sort((info1, info2) => semver.compare(info2.since, info1.since))[0].value;\n      }\n\n      if (Array.isArray(option.choices)) {\n        option.choices = option.choices.filter(option => filterSince(option) && filterDeprecated(option));\n\n        if (option.name === \"parser\") {\n          collectParsersFromLanguages(option, languages, plugins);\n        }\n      }\n\n      const pluginDefaults = fromPairs_1(plugins.filter(plugin => plugin.defaultOptions && plugin.defaultOptions[option.name] !== undefined).map(plugin => [plugin.name, plugin.defaultOptions[option.name]]));\n      return Object.assign({}, option, {\n        pluginDefaults\n      });\n    });\n    return {\n      languages,\n      options\n    };\n\n    function filterSince(object) {\n      return showUnreleased || !(\"since\" in object) || object.since && semver.gte(version, object.since);\n    }\n\n    function filterDeprecated(object) {\n      return showDeprecated || !(\"deprecated\" in object) || object.deprecated && semver.lt(version, object.deprecated);\n    }\n\n    function mapInternal(object) {\n      if (showInternal) {\n        return object;\n      }\n\n      const newObject = _objectWithoutPropertiesLoose(object, [\"cliName\", \"cliCategory\", \"cliDescription\"]);\n\n      return newObject;\n    }\n  }\n\n  function collectParsersFromLanguages(option, languages, plugins) {\n    const existingValues = new Set(option.choices.map(choice => choice.value));\n\n    for (const language of languages) {\n      if (language.parsers) {\n        for (const value of language.parsers) {\n          if (!existingValues.has(value)) {\n            existingValues.add(value);\n            const plugin = plugins.find(plugin => plugin.parsers && plugin.parsers[value]);\n            let description = language.name;\n\n            if (plugin && plugin.name) {\n              description += \" (plugin: \".concat(plugin.name, \")\");\n            }\n\n            option.choices.push({\n              value,\n              description\n            });\n          }\n        }\n      }\n    }\n  }\n\n  var support = {\n    getSupportInfo: getSupportInfo$1\n  };\n\n  const {\n    getSupportInfo\n  } = support;\n  const notAsciiRegex = /[^\\x20-\\x7F]/;\n\n  const getPenultimate = arr => arr[arr.length - 2];\n  /**\n   * @typedef {{backwards?: boolean}} SkipOptions\n   */\n\n  /**\n   * @param {string | RegExp} chars\n   * @returns {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n\n  function skip(chars) {\n    return (text, index, opts) => {\n      const backwards = opts && opts.backwards; // Allow `skip` functions to be threaded together without having\n      // to check for failures (did someone say monads?).\n\n      /* istanbul ignore next */\n\n      if (index === false) {\n        return false;\n      }\n\n      const {\n        length\n      } = text;\n      let cursor = index;\n\n      while (cursor >= 0 && cursor < length) {\n        const c = text.charAt(cursor);\n\n        if (chars instanceof RegExp) {\n          if (!chars.test(c)) {\n            return cursor;\n          }\n        } else if (!chars.includes(c)) {\n          return cursor;\n        }\n\n        backwards ? cursor-- : cursor++;\n      }\n\n      if (cursor === -1 || cursor === length) {\n        // If we reached the beginning or end of the file, return the\n        // out-of-bounds cursor. It's up to the caller to handle this\n        // correctly. We don't want to indicate `false` though if it\n        // actually skipped valid characters.\n        return cursor;\n      }\n\n      return false;\n    };\n  }\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n\n  const skipWhitespace = skip(/\\s/);\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipSpaces = skip(\" \\t\");\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipToLineEnd = skip(\",; \\t\");\n  /**\n   * @type {(text: string, index: number | false, opts?: SkipOptions) => number | false}\n   */\n\n  const skipEverythingButNewLine = skip(/[^\\n\\r]/);\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */\n\n  function skipInlineComment(text, index) {\n    /* istanbul ignore next */\n    if (index === false) {\n      return false;\n    }\n\n    if (text.charAt(index) === \"/\" && text.charAt(index + 1) === \"*\") {\n      for (let i = index + 2; i < text.length; ++i) {\n        if (text.charAt(i) === \"*\" && text.charAt(i + 1) === \"/\") {\n          return i + 2;\n        }\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @returns {number | false}\n   */\n\n\n  function skipTrailingComment(text, index) {\n    /* istanbul ignore next */\n    if (index === false) {\n      return false;\n    }\n\n    if (text.charAt(index) === \"/\" && text.charAt(index + 1) === \"/\") {\n      return skipEverythingButNewLine(text, index);\n    }\n\n    return index;\n  } // This one doesn't use the above helper function because it wants to\n  // test \\r\\n in order and `skip` doesn't support ordering and we only\n  // want to skip one newline. It's simple to implement.\n\n  /**\n   * @param {string} text\n   * @param {number | false} index\n   * @param {SkipOptions=} opts\n   * @returns {number | false}\n   */\n\n\n  function skipNewline(text, index, opts) {\n    const backwards = opts && opts.backwards;\n\n    if (index === false) {\n      return false;\n    }\n\n    const atIndex = text.charAt(index);\n\n    if (backwards) {\n      // We already replace `\\r\\n` with `\\n` before parsing\n\n      /* istanbul ignore next */\n      if (text.charAt(index - 1) === \"\\r\" && atIndex === \"\\n\") {\n        return index - 2;\n      }\n\n      if (atIndex === \"\\n\" || atIndex === \"\\r\" || atIndex === \"\\u2028\" || atIndex === \"\\u2029\") {\n        return index - 1;\n      }\n    } else {\n      // We already replace `\\r\\n` with `\\n` before parsing\n\n      /* istanbul ignore next */\n      if (atIndex === \"\\r\" && text.charAt(index + 1) === \"\\n\") {\n        return index + 2;\n      }\n\n      if (atIndex === \"\\n\" || atIndex === \"\\r\" || atIndex === \"\\u2028\" || atIndex === \"\\u2029\") {\n        return index + 1;\n      }\n    }\n\n    return index;\n  }\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */\n\n\n  function hasNewline(text, index, opts = {}) {\n    const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);\n    const idx2 = skipNewline(text, idx, opts);\n    return idx !== idx2;\n  }\n  /**\n   * @param {string} text\n   * @param {number} start\n   * @param {number} end\n   * @returns {boolean}\n   */\n\n\n  function hasNewlineInRange(text, start, end) {\n    for (let i = start; i < end; ++i) {\n      if (text.charAt(i) === \"\\n\") {\n        return true;\n      }\n    }\n\n    return false;\n  } // Note: this function doesn't ignore leading comments unlike isNextLineEmpty\n\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locStart\n   */\n\n\n  function isPreviousLineEmpty(text, node, locStart) {\n    /** @type {number | false} */\n    let idx = locStart(node) - 1;\n    idx = skipSpaces(text, idx, {\n      backwards: true\n    });\n    idx = skipNewline(text, idx, {\n      backwards: true\n    });\n    idx = skipSpaces(text, idx, {\n      backwards: true\n    });\n    const idx2 = skipNewline(text, idx, {\n      backwards: true\n    });\n    return idx !== idx2;\n  }\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @returns {boolean}\n   */\n\n\n  function isNextLineEmptyAfterIndex(text, index) {\n    /** @type {number | false} */\n    let oldIdx = null;\n    /** @type {number | false} */\n\n    let idx = index;\n\n    while (idx !== oldIdx) {\n      // We need to skip all the potential trailing inline comments\n      oldIdx = idx;\n      idx = skipToLineEnd(text, idx);\n      idx = skipInlineComment(text, idx);\n      idx = skipSpaces(text, idx);\n    }\n\n    idx = skipTrailingComment(text, idx);\n    idx = skipNewline(text, idx);\n    return idx !== false && hasNewline(text, idx);\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {boolean}\n   */\n\n\n  function isNextLineEmpty(text, node, locEnd) {\n    return isNextLineEmptyAfterIndex(text, locEnd(node));\n  }\n  /**\n   * @param {string} text\n   * @param {number} idx\n   * @returns {number | false}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, idx) {\n    /** @type {number | false} */\n    let oldIdx = null;\n    /** @type {number | false} */\n\n    let nextIdx = idx;\n\n    while (nextIdx !== oldIdx) {\n      oldIdx = nextIdx;\n      nextIdx = skipSpaces(text, nextIdx);\n      nextIdx = skipInlineComment(text, nextIdx);\n      nextIdx = skipTrailingComment(text, nextIdx);\n      nextIdx = skipNewline(text, nextIdx);\n    }\n\n    return nextIdx;\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {number | false}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd) {\n    return getNextNonSpaceNonCommentCharacterIndexWithStartIndex(text, locEnd(node));\n  }\n  /**\n   * @template N\n   * @param {string} text\n   * @param {N} node\n   * @param {(node: N) => number} locEnd\n   * @returns {string}\n   */\n\n\n  function getNextNonSpaceNonCommentCharacter(text, node, locEnd) {\n    return text.charAt( // @ts-ignore => TBD: can return false, should we define a fallback?\n    getNextNonSpaceNonCommentCharacterIndex(text, node, locEnd));\n  } // Not using, but it's public utils\n\n  /* istanbul ignore next */\n\n  /**\n   * @param {string} text\n   * @param {number} index\n   * @param {SkipOptions=} opts\n   * @returns {boolean}\n   */\n\n\n  function hasSpaces(text, index, opts = {}) {\n    const idx = skipSpaces(text, opts.backwards ? index - 1 : index, opts);\n    return idx !== index;\n  }\n  /**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @param {number=} startIndex\n   * @returns {number}\n   */\n\n\n  function getAlignmentSize(value, tabWidth, startIndex = 0) {\n    let size = 0;\n\n    for (let i = startIndex; i < value.length; ++i) {\n      if (value[i] === \"\\t\") {\n        // Tabs behave in a way that they are aligned to the nearest\n        // multiple of tabWidth:\n        // 0 -> 4, 1 -> 4, 2 -> 4, 3 -> 4\n        // 4 -> 8, 5 -> 8, 6 -> 8, 7 -> 8 ...\n        size = size + tabWidth - size % tabWidth;\n      } else {\n        size++;\n      }\n    }\n\n    return size;\n  }\n  /**\n   * @param {string} value\n   * @param {number} tabWidth\n   * @returns {number}\n   */\n\n\n  function getIndentSize(value, tabWidth) {\n    const lastNewlineIndex = value.lastIndexOf(\"\\n\");\n\n    if (lastNewlineIndex === -1) {\n      return 0;\n    }\n\n    return getAlignmentSize( // All the leading whitespaces\n    value.slice(lastNewlineIndex + 1).match(/^[\\t ]*/)[0], tabWidth);\n  }\n  /**\n   * @typedef {'\"' | \"'\"} Quote\n   */\n\n  /**\n   *\n   * @param {string} raw\n   * @param {Quote} preferredQuote\n   * @returns {Quote}\n   */\n\n\n  function getPreferredQuote(raw, preferredQuote) {\n    // `rawContent` is the string exactly like it appeared in the input source\n    // code, without its enclosing quotes.\n    const rawContent = raw.slice(1, -1);\n    /** @type {{ quote: '\"', regex: RegExp }} */\n\n    const double = {\n      quote: '\"',\n      regex: /\"/g\n    };\n    /** @type {{ quote: \"'\", regex: RegExp }} */\n\n    const single = {\n      quote: \"'\",\n      regex: /'/g\n    };\n    const preferred = preferredQuote === \"'\" ? single : double;\n    const alternate = preferred === single ? double : single;\n    let result = preferred.quote; // If `rawContent` contains at least one of the quote preferred for enclosing\n    // the string, we might want to enclose with the alternate quote instead, to\n    // minimize the number of escaped quotes.\n\n    if (rawContent.includes(preferred.quote) || rawContent.includes(alternate.quote)) {\n      const numPreferredQuotes = (rawContent.match(preferred.regex) || []).length;\n      const numAlternateQuotes = (rawContent.match(alternate.regex) || []).length;\n      result = numPreferredQuotes > numAlternateQuotes ? alternate.quote : preferred.quote;\n    }\n\n    return result;\n  }\n\n  function printString(raw, options) {\n    // `rawContent` is the string exactly like it appeared in the input source\n    // code, without its enclosing quotes.\n    const rawContent = raw.slice(1, -1);\n    /** @type {Quote} */\n\n    const enclosingQuote = options.parser === \"json\" || options.parser === \"json5\" && options.quoteProps === \"preserve\" && !options.singleQuote ? '\"' : options.__isInHtmlAttribute ? \"'\" : getPreferredQuote(raw, options.singleQuote ? \"'\" : '\"'); // It might sound unnecessary to use `makeString` even if the string already\n    // is enclosed with `enclosingQuote`, but it isn't. The string could contain\n    // unnecessary escapes (such as in `\"\\'\"`). Always using `makeString` makes\n    // sure that we consistently output the minimum amount of escaped quotes.\n\n    return makeString(rawContent, enclosingQuote, !(options.parser === \"css\" || options.parser === \"less\" || options.parser === \"scss\" || options.__embeddedInHtml));\n  }\n  /**\n   * @param {string} rawContent\n   * @param {Quote} enclosingQuote\n   * @param {boolean=} unescapeUnnecessaryEscapes\n   * @returns {string}\n   */\n\n\n  function makeString(rawContent, enclosingQuote, unescapeUnnecessaryEscapes) {\n    const otherQuote = enclosingQuote === '\"' ? \"'\" : '\"'; // Matches _any_ escape and unescaped quotes (both single and double).\n\n    const regex = /\\\\([\\S\\s])|([\"'])/g; // Escape and unescape single and double quotes as needed to be able to\n    // enclose `rawContent` with `enclosingQuote`.\n\n    const newContent = rawContent.replace(regex, (match, escaped, quote) => {\n      // If we matched an escape, and the escaped character is a quote of the\n      // other type than we intend to enclose the string with, there's no need for\n      // it to be escaped, so return it _without_ the backslash.\n      if (escaped === otherQuote) {\n        return escaped;\n      } // If we matched an unescaped quote and it is of the _same_ type as we\n      // intend to enclose the string with, it must be escaped, so return it with\n      // a backslash.\n\n\n      if (quote === enclosingQuote) {\n        return \"\\\\\" + quote;\n      }\n\n      if (quote) {\n        return quote;\n      } // Unescape any unnecessarily escaped character.\n      // Adapted from https://github.com/eslint/eslint/blob/de0b4ad7bd820ade41b1f606008bea68683dc11a/lib/rules/no-useless-escape.js#L27\n\n\n      return unescapeUnnecessaryEscapes && /^[^\\n\\r\"'0-7\\\\bfnrt-vx\\u2028\\u2029]$/.test(escaped) ? escaped : \"\\\\\" + escaped;\n    });\n    return enclosingQuote + newContent + enclosingQuote;\n  }\n\n  function printNumber(rawNumber) {\n    return rawNumber.toLowerCase() // Remove unnecessary plus and zeroes from scientific notation.\n    .replace(/^([+-]?[\\d.]+e)(?:\\+|(-))?0*(\\d)/, \"$1$2$3\") // Remove unnecessary scientific notation (1e0).\n    .replace(/^([+-]?[\\d.]+)e[+-]?0+$/, \"$1\") // Make sure numbers always start with a digit.\n    .replace(/^([+-])?\\./, \"$10.\") // Remove extraneous trailing decimal zeroes.\n    .replace(/(\\.\\d+?)0+(?=e|$)/, \"$1\") // Remove trailing dot.\n    .replace(/\\.(?=e|$)/, \"\");\n  }\n  /**\n   * @param {string} str\n   * @param {string} target\n   * @returns {number}\n   */\n\n\n  function getMaxContinuousCount(str, target) {\n    const results = str.match(new RegExp(\"(\".concat(escapeStringRegexp(target), \")+\"), \"g\"));\n\n    if (results === null) {\n      return 0;\n    }\n\n    return results.reduce((maxCount, result) => Math.max(maxCount, result.length / target.length), 0);\n  }\n\n  function getMinNotPresentContinuousCount(str, target) {\n    const matches = str.match(new RegExp(\"(\".concat(escapeStringRegexp(target), \")+\"), \"g\"));\n\n    if (matches === null) {\n      return 0;\n    }\n\n    const countPresent = new Map();\n    let max = 0;\n\n    for (const match of matches) {\n      const count = match.length / target.length;\n      countPresent.set(count, true);\n\n      if (count > max) {\n        max = count;\n      }\n    }\n\n    for (let i = 1; i < max; i++) {\n      if (!countPresent.get(i)) {\n        return i;\n      }\n    }\n\n    return max + 1;\n  }\n  /**\n   * @param {string} text\n   * @returns {number}\n   */\n\n\n  function getStringWidth$1(text) {\n    if (!text) {\n      return 0;\n    } // shortcut to avoid needless string `RegExp`s, replacements, and allocations within `string-width`\n\n\n    if (!notAsciiRegex.test(text)) {\n      return text.length;\n    }\n\n    return stringWidth_1(text);\n  }\n\n  function addCommentHelper(node, comment) {\n    const comments = node.comments || (node.comments = []);\n    comments.push(comment);\n    comment.printed = false;\n    comment.nodeDescription = describeNodeForDebugging(node);\n  }\n\n  function addLeadingComment(node, comment) {\n    comment.leading = true;\n    comment.trailing = false;\n    addCommentHelper(node, comment);\n  }\n\n  function addDanglingComment(node, comment, marker) {\n    comment.leading = false;\n    comment.trailing = false;\n\n    if (marker) {\n      comment.marker = marker;\n    }\n\n    addCommentHelper(node, comment);\n  }\n\n  function addTrailingComment(node, comment) {\n    comment.leading = false;\n    comment.trailing = true;\n    addCommentHelper(node, comment);\n  }\n\n  function replaceEndOfLineWith(text, replacement) {\n    const parts = [];\n\n    for (const part of text.split(\"\\n\")) {\n      if (parts.length > 0) {\n        parts.push(replacement);\n      }\n\n      parts.push(part);\n    }\n\n    return parts;\n  }\n\n  function inferParserByLanguage(language, options) {\n    const {\n      languages\n    } = getSupportInfo({\n      plugins: options.plugins\n    });\n    const matched = languages.find(({\n      name\n    }) => name.toLowerCase() === language) || languages.find(({\n      aliases\n    }) => Array.isArray(aliases) && aliases.includes(language)) || languages.find(({\n      extensions\n    }) => Array.isArray(extensions) && extensions.includes(\".\".concat(language)));\n    return matched && matched.parsers[0];\n  }\n\n  function isFrontMatterNode(node) {\n    return node && node.type === \"front-matter\";\n  }\n\n  function getShebang(text) {\n    if (!text.startsWith(\"#!\")) {\n      return \"\";\n    }\n\n    const index = text.indexOf(\"\\n\");\n\n    if (index === -1) {\n      return text;\n    }\n\n    return text.slice(0, index);\n  }\n\n  function isNonEmptyArray(object) {\n    return Array.isArray(object) && object.length > 0;\n  }\n  /**\n   * @param {string} description\n   * @returns {(node: any) => symbol}\n   */\n\n\n  function createGroupIdMapper(description) {\n    const groupIds = new WeakMap();\n    return function (node) {\n      if (!groupIds.has(node)) {\n        groupIds.set(node, Symbol(description));\n      }\n\n      return groupIds.get(node);\n    };\n  }\n\n  function describeNodeForDebugging(node) {\n    const nodeType = node.type || node.kind || \"(unknown type)\";\n    let nodeName = String(node.name || node.id && (typeof node.id === \"object\" ? node.id.name : node.id) || node.key && (typeof node.key === \"object\" ? node.key.name : node.key) || node.value && (typeof node.value === \"object\" ? \"\" : String(node.value)) || node.operator || \"\");\n\n    if (nodeName.length > 20) {\n      nodeName = nodeName.slice(0, 19) + \"…\";\n    }\n\n    return nodeType + (nodeName ? \" \" + nodeName : \"\");\n  }\n\n  var util = {\n    inferParserByLanguage,\n    replaceEndOfLineWith,\n    getStringWidth: getStringWidth$1,\n    getMaxContinuousCount,\n    getMinNotPresentContinuousCount,\n    getPenultimate,\n    getLast: getLast_1,\n    getNextNonSpaceNonCommentCharacterIndexWithStartIndex,\n    getNextNonSpaceNonCommentCharacterIndex,\n    getNextNonSpaceNonCommentCharacter,\n    skip,\n    skipWhitespace,\n    skipSpaces,\n    skipToLineEnd,\n    skipEverythingButNewLine,\n    skipInlineComment,\n    skipTrailingComment,\n    skipNewline,\n    isNextLineEmptyAfterIndex,\n    isNextLineEmpty,\n    isPreviousLineEmpty,\n    hasNewline,\n    hasNewlineInRange,\n    hasSpaces,\n    getAlignmentSize,\n    getIndentSize,\n    getPreferredQuote,\n    printString,\n    printNumber,\n    makeString,\n    addLeadingComment,\n    addDanglingComment,\n    addTrailingComment,\n    isFrontMatterNode,\n    getShebang,\n    isNonEmptyArray,\n    createGroupIdMapper\n  };\n\n  function guessEndOfLine(text) {\n    const index = text.indexOf(\"\\r\");\n\n    if (index >= 0) {\n      return text.charAt(index + 1) === \"\\n\" ? \"crlf\" : \"cr\";\n    }\n\n    return \"lf\";\n  }\n\n  function convertEndOfLineToChars$1(value) {\n    switch (value) {\n      case \"cr\":\n        return \"\\r\";\n\n      case \"crlf\":\n        return \"\\r\\n\";\n\n      default:\n        return \"\\n\";\n    }\n  }\n\n  function countEndOfLineChars(text, eol) {\n    let regex;\n    /* istanbul ignore else */\n\n    if (eol === \"\\n\") {\n      regex = /\\n/g;\n    } else if (eol === \"\\r\") {\n      regex = /\\r/g;\n    } else if (eol === \"\\r\\n\") {\n      regex = /\\r\\n/g;\n    } else {\n      throw new Error(\"Unexpected \\\"eol\\\" \".concat(JSON.stringify(eol), \".\"));\n    }\n\n    const endOfLines = text.match(regex);\n    return endOfLines ? endOfLines.length : 0;\n  }\n\n  function normalizeEndOfLine(text) {\n    return text.replace(/\\r\\n?/g, \"\\n\");\n  }\n\n  var endOfLine = {\n    guessEndOfLine,\n    convertEndOfLineToChars: convertEndOfLineToChars$1,\n    countEndOfLineChars,\n    normalizeEndOfLine\n  };\n\n  const {\n    literalline\n  } = docBuilders;\n\n  const isConcat$2 = doc => Array.isArray(doc) || doc && doc.type === \"concat\";\n\n  const getDocParts$2 = doc => {\n    if (Array.isArray(doc)) {\n      return doc;\n    }\n    /* istanbul ignore next */\n\n\n    if (doc.type !== \"concat\" && doc.type !== \"fill\") {\n      throw new Error(\"Expect doc type to be `concat` or `fill`.\");\n    }\n\n    return doc.parts;\n  }; // Using a unique object to compare by reference.\n\n\n  const traverseDocOnExitStackMarker = {};\n\n  function traverseDoc(doc, onEnter, onExit, shouldTraverseConditionalGroups) {\n    const docsStack = [doc];\n\n    while (docsStack.length > 0) {\n      const doc = docsStack.pop();\n\n      if (doc === traverseDocOnExitStackMarker) {\n        onExit(docsStack.pop());\n        continue;\n      }\n\n      if (onExit) {\n        docsStack.push(doc, traverseDocOnExitStackMarker);\n      }\n\n      if ( // Should Recurse\n      !onEnter || onEnter(doc) !== false) {\n        // When there are multiple parts to process,\n        // the parts need to be pushed onto the stack in reverse order,\n        // so that they are processed in the original order\n        // when the stack is popped.\n        if (isConcat$2(doc) || doc.type === \"fill\") {\n          const parts = getDocParts$2(doc);\n\n          for (let ic = parts.length, i = ic - 1; i >= 0; --i) {\n            docsStack.push(parts[i]);\n          }\n        } else if (doc.type === \"if-break\") {\n          if (doc.flatContents) {\n            docsStack.push(doc.flatContents);\n          }\n\n          if (doc.breakContents) {\n            docsStack.push(doc.breakContents);\n          }\n        } else if (doc.type === \"group\" && doc.expandedStates) {\n          if (shouldTraverseConditionalGroups) {\n            for (let ic = doc.expandedStates.length, i = ic - 1; i >= 0; --i) {\n              docsStack.push(doc.expandedStates[i]);\n            }\n          } else {\n            docsStack.push(doc.contents);\n          }\n        } else if (doc.contents) {\n          docsStack.push(doc.contents);\n        }\n      }\n    }\n  }\n\n  function mapDoc(doc, cb) {\n    // Within a doc tree, the same subtrees can be found multiple times.\n    // E.g., often this happens in conditional groups.\n    // As an optimization (those subtrees can be huge) and to maintain the\n    // reference structure of the tree, the mapping results are cached in\n    // a map and reused.\n    const mapped = new Map();\n    return rec(doc);\n\n    function rec(doc) {\n      if (mapped.has(doc)) {\n        return mapped.get(doc);\n      }\n\n      const result = process(doc);\n      mapped.set(doc, result);\n      return result;\n    }\n\n    function process(doc) {\n      if (Array.isArray(doc)) {\n        return cb(doc.map(rec));\n      }\n\n      if (doc.type === \"concat\" || doc.type === \"fill\") {\n        const parts = doc.parts.map(rec);\n        return cb(Object.assign({}, doc, {\n          parts\n        }));\n      }\n\n      if (doc.type === \"if-break\") {\n        const breakContents = doc.breakContents && rec(doc.breakContents);\n        const flatContents = doc.flatContents && rec(doc.flatContents);\n        return cb(Object.assign({}, doc, {\n          breakContents,\n          flatContents\n        }));\n      }\n\n      if (doc.type === \"group\" && doc.expandedStates) {\n        const expandedStates = doc.expandedStates.map(rec);\n        const contents = expandedStates[0];\n        return cb(Object.assign({}, doc, {\n          contents,\n          expandedStates\n        }));\n      }\n\n      if (doc.contents) {\n        const contents = rec(doc.contents);\n        return cb(Object.assign({}, doc, {\n          contents\n        }));\n      }\n\n      return cb(doc);\n    }\n  }\n\n  function findInDoc(doc, fn, defaultValue) {\n    let result = defaultValue;\n    let hasStopped = false;\n\n    function findInDocOnEnterFn(doc) {\n      const maybeResult = fn(doc);\n\n      if (maybeResult !== undefined) {\n        hasStopped = true;\n        result = maybeResult;\n      }\n\n      if (hasStopped) {\n        return false;\n      }\n    }\n\n    traverseDoc(doc, findInDocOnEnterFn);\n    return result;\n  }\n\n  function willBreakFn(doc) {\n    if (doc.type === \"group\" && doc.break) {\n      return true;\n    }\n\n    if (doc.type === \"line\" && doc.hard) {\n      return true;\n    }\n\n    if (doc.type === \"break-parent\") {\n      return true;\n    }\n  }\n\n  function willBreak(doc) {\n    return findInDoc(doc, willBreakFn, false);\n  }\n\n  function breakParentGroup(groupStack) {\n    if (groupStack.length > 0) {\n      const parentGroup = getLast_1(groupStack); // Breaks are not propagated through conditional groups because\n      // the user is expected to manually handle what breaks.\n\n      if (!parentGroup.expandedStates && !parentGroup.break) {\n        // An alternative truthy value allows to distinguish propagated group breaks\n        // and not to print them as `group(..., { break: true })` in `--debug-print-doc`.\n        parentGroup.break = \"propagated\";\n      }\n    }\n\n    return null;\n  }\n\n  function propagateBreaks(doc) {\n    const alreadyVisitedSet = new Set();\n    const groupStack = [];\n\n    function propagateBreaksOnEnterFn(doc) {\n      if (doc.type === \"break-parent\") {\n        breakParentGroup(groupStack);\n      }\n\n      if (doc.type === \"group\") {\n        groupStack.push(doc);\n\n        if (alreadyVisitedSet.has(doc)) {\n          return false;\n        }\n\n        alreadyVisitedSet.add(doc);\n      }\n    }\n\n    function propagateBreaksOnExitFn(doc) {\n      if (doc.type === \"group\") {\n        const group = groupStack.pop();\n\n        if (group.break) {\n          breakParentGroup(groupStack);\n        }\n      }\n    }\n\n    traverseDoc(doc, propagateBreaksOnEnterFn, propagateBreaksOnExitFn,\n    /* shouldTraverseConditionalGroups */\n    true);\n  }\n\n  function removeLinesFn(doc) {\n    // Force this doc into flat mode by statically converting all\n    // lines into spaces (or soft lines into nothing). Hard lines\n    // should still output because there's too great of a chance\n    // of breaking existing assumptions otherwise.\n    if (doc.type === \"line\" && !doc.hard) {\n      return doc.soft ? \"\" : \" \";\n    }\n\n    if (doc.type === \"if-break\") {\n      return doc.flatContents || \"\";\n    }\n\n    return doc;\n  }\n\n  function removeLines(doc) {\n    return mapDoc(doc, removeLinesFn);\n  }\n\n  const isHardline = (doc, nextDoc) => doc && doc.type === \"line\" && doc.hard && nextDoc && nextDoc.type === \"break-parent\";\n\n  function stripDocTrailingHardlineFromDoc(doc) {\n    if (!doc) {\n      return doc;\n    }\n\n    if (isConcat$2(doc) || doc.type === \"fill\") {\n      const parts = getDocParts$2(doc);\n\n      while (parts.length > 1 && isHardline(...parts.slice(-2))) {\n        parts.length -= 2;\n      }\n\n      if (parts.length > 0) {\n        const lastPart = stripDocTrailingHardlineFromDoc(getLast_1(parts));\n        parts[parts.length - 1] = lastPart;\n      }\n\n      return Array.isArray(doc) ? parts : Object.assign({}, doc, {\n        parts\n      });\n    }\n\n    switch (doc.type) {\n      case \"align\":\n      case \"indent\":\n      case \"indent-if-break\":\n      case \"group\":\n      case \"line-suffix\":\n      case \"label\":\n        {\n          const contents = stripDocTrailingHardlineFromDoc(doc.contents);\n          return Object.assign({}, doc, {\n            contents\n          });\n        }\n\n      case \"if-break\":\n        {\n          const breakContents = stripDocTrailingHardlineFromDoc(doc.breakContents);\n          const flatContents = stripDocTrailingHardlineFromDoc(doc.flatContents);\n          return Object.assign({}, doc, {\n            breakContents,\n            flatContents\n          });\n        }\n    }\n\n    return doc;\n  }\n\n  function stripTrailingHardline(doc) {\n    // HACK remove ending hardline, original PR: #1984\n    return stripDocTrailingHardlineFromDoc(cleanDoc(doc));\n  }\n\n  function cleanDocFn(doc) {\n    switch (doc.type) {\n      case \"fill\":\n        if (doc.parts.length === 0 || doc.parts.every(part => part === \"\")) {\n          return \"\";\n        }\n\n        break;\n\n      case \"group\":\n        if (!doc.contents && !doc.id && !doc.break && !doc.expandedStates) {\n          return \"\";\n        } // Remove nested only group\n\n\n        if (doc.contents.type === \"group\" && doc.contents.id === doc.id && doc.contents.break === doc.break && doc.contents.expandedStates === doc.expandedStates) {\n          return doc.contents;\n        }\n\n        break;\n\n      case \"align\":\n      case \"indent\":\n      case \"indent-if-break\":\n      case \"line-suffix\":\n        if (!doc.contents) {\n          return \"\";\n        }\n\n        break;\n\n      case \"if-break\":\n        if (!doc.flatContents && !doc.breakContents) {\n          return \"\";\n        }\n\n        break;\n    }\n\n    if (!isConcat$2(doc)) {\n      return doc;\n    }\n\n    const parts = [];\n\n    for (const part of getDocParts$2(doc)) {\n      if (!part) {\n        continue;\n      }\n\n      const [currentPart, ...restParts] = isConcat$2(part) ? getDocParts$2(part) : [part];\n\n      if (typeof currentPart === \"string\" && typeof getLast_1(parts) === \"string\") {\n        parts[parts.length - 1] += currentPart;\n      } else {\n        parts.push(currentPart);\n      }\n\n      parts.push(...restParts);\n    }\n\n    if (parts.length === 0) {\n      return \"\";\n    }\n\n    if (parts.length === 1) {\n      return parts[0];\n    }\n\n    return Array.isArray(doc) ? parts : Object.assign({}, doc, {\n      parts\n    });\n  } // A safer version of `normalizeDoc`\n  // - `normalizeDoc` concat strings and flat \"concat\" in `fill`, while `cleanDoc` don't\n  // - On `concat` object, `normalizeDoc` always return object with `parts`, `cleanDoc` may return strings\n  // - `cleanDoc` also remove nested `group`s and empty `fill`/`align`/`indent`/`line-suffix`/`if-break` if possible\n\n\n  function cleanDoc(doc) {\n    return mapDoc(doc, currentDoc => cleanDocFn(currentDoc));\n  }\n\n  function normalizeParts(parts) {\n    const newParts = [];\n    const restParts = parts.filter(Boolean);\n\n    while (restParts.length > 0) {\n      const part = restParts.shift();\n\n      if (!part) {\n        continue;\n      }\n\n      if (isConcat$2(part)) {\n        restParts.unshift(...getDocParts$2(part));\n        continue;\n      }\n\n      if (newParts.length > 0 && typeof getLast_1(newParts) === \"string\" && typeof part === \"string\") {\n        newParts[newParts.length - 1] += part;\n        continue;\n      }\n\n      newParts.push(part);\n    }\n\n    return newParts;\n  }\n\n  function normalizeDoc(doc) {\n    return mapDoc(doc, currentDoc => {\n      if (Array.isArray(currentDoc)) {\n        return normalizeParts(currentDoc);\n      }\n\n      if (!currentDoc.parts) {\n        return currentDoc;\n      }\n\n      return Object.assign({}, currentDoc, {\n        parts: normalizeParts(currentDoc.parts)\n      });\n    });\n  }\n\n  function replaceNewlinesWithLiterallines(doc) {\n    return mapDoc(doc, currentDoc => typeof currentDoc === \"string\" && currentDoc.includes(\"\\n\") ? currentDoc.split(/(\\n)/g).map((v, i) => i % 2 === 0 ? v : literalline) : currentDoc);\n  }\n\n  var docUtils = {\n    isConcat: isConcat$2,\n    getDocParts: getDocParts$2,\n    willBreak,\n    traverseDoc,\n    findInDoc,\n    mapDoc,\n    propagateBreaks,\n    removeLines,\n    stripTrailingHardline,\n    normalizeParts,\n    normalizeDoc,\n    cleanDoc,\n    replaceNewlinesWithLiterallines\n  };\n\n  const {\n    getStringWidth,\n    getLast\n  } = util;\n  const {\n    convertEndOfLineToChars\n  } = endOfLine;\n  const {\n    fill,\n    cursor,\n    indent\n  } = docBuilders;\n  const {\n    isConcat: isConcat$1,\n    getDocParts: getDocParts$1\n  } = docUtils;\n  /** @type {Record<symbol, typeof MODE_BREAK | typeof MODE_FLAT>} */\n\n  let groupModeMap;\n  const MODE_BREAK = 1;\n  const MODE_FLAT = 2;\n\n  function rootIndent() {\n    return {\n      value: \"\",\n      length: 0,\n      queue: []\n    };\n  }\n\n  function makeIndent(ind, options) {\n    return generateInd(ind, {\n      type: \"indent\"\n    }, options);\n  }\n\n  function makeAlign(indent, widthOrDoc, options) {\n    if (widthOrDoc === Number.NEGATIVE_INFINITY) {\n      return indent.root || rootIndent();\n    }\n\n    if (widthOrDoc < 0) {\n      return generateInd(indent, {\n        type: \"dedent\"\n      }, options);\n    }\n\n    if (!widthOrDoc) {\n      return indent;\n    }\n\n    if (widthOrDoc.type === \"root\") {\n      return Object.assign({}, indent, {\n        root: indent\n      });\n    }\n\n    const alignType = typeof widthOrDoc === \"string\" ? \"stringAlign\" : \"numberAlign\";\n    return generateInd(indent, {\n      type: alignType,\n      n: widthOrDoc\n    }, options);\n  }\n\n  function generateInd(ind, newPart, options) {\n    const queue = newPart.type === \"dedent\" ? ind.queue.slice(0, -1) : [...ind.queue, newPart];\n    let value = \"\";\n    let length = 0;\n    let lastTabs = 0;\n    let lastSpaces = 0;\n\n    for (const part of queue) {\n      switch (part.type) {\n        case \"indent\":\n          flush();\n\n          if (options.useTabs) {\n            addTabs(1);\n          } else {\n            addSpaces(options.tabWidth);\n          }\n\n          break;\n\n        case \"stringAlign\":\n          flush();\n          value += part.n;\n          length += part.n.length;\n          break;\n\n        case \"numberAlign\":\n          lastTabs += 1;\n          lastSpaces += part.n;\n          break;\n\n        /* istanbul ignore next */\n\n        default:\n          throw new Error(\"Unexpected type '\".concat(part.type, \"'\"));\n      }\n    }\n\n    flushSpaces();\n    return Object.assign({}, ind, {\n      value,\n      length,\n      queue\n    });\n\n    function addTabs(count) {\n      value += \"\\t\".repeat(count);\n      length += options.tabWidth * count;\n    }\n\n    function addSpaces(count) {\n      value += \" \".repeat(count);\n      length += count;\n    }\n\n    function flush() {\n      if (options.useTabs) {\n        flushTabs();\n      } else {\n        flushSpaces();\n      }\n    }\n\n    function flushTabs() {\n      if (lastTabs > 0) {\n        addTabs(lastTabs);\n      }\n\n      resetLast();\n    }\n\n    function flushSpaces() {\n      if (lastSpaces > 0) {\n        addSpaces(lastSpaces);\n      }\n\n      resetLast();\n    }\n\n    function resetLast() {\n      lastTabs = 0;\n      lastSpaces = 0;\n    }\n  }\n\n  function trim(out) {\n    if (out.length === 0) {\n      return 0;\n    }\n\n    let trimCount = 0; // Trim whitespace at the end of line\n\n    while (out.length > 0 && typeof getLast(out) === \"string\" && /^[\\t ]*$/.test(getLast(out))) {\n      trimCount += out.pop().length;\n    }\n\n    if (out.length > 0 && typeof getLast(out) === \"string\") {\n      const trimmed = getLast(out).replace(/[\\t ]*$/, \"\");\n      trimCount += getLast(out).length - trimmed.length;\n      out[out.length - 1] = trimmed;\n    }\n\n    return trimCount;\n  }\n\n  function fits(next, restCommands, width, options, hasLineSuffix, mustBeFlat) {\n    let restIdx = restCommands.length;\n    const cmds = [next]; // `out` is only used for width counting because `trim` requires to look\n    // backwards for space characters.\n\n    const out = [];\n\n    while (width >= 0) {\n      if (cmds.length === 0) {\n        if (restIdx === 0) {\n          return true;\n        }\n\n        cmds.push(restCommands[restIdx - 1]);\n        restIdx--;\n        continue;\n      }\n\n      const [ind, mode, doc] = cmds.pop();\n\n      if (typeof doc === \"string\") {\n        out.push(doc);\n        width -= getStringWidth(doc);\n      } else if (isConcat$1(doc)) {\n        const parts = getDocParts$1(doc);\n\n        for (let i = parts.length - 1; i >= 0; i--) {\n          cmds.push([ind, mode, parts[i]]);\n        }\n      } else {\n        switch (doc.type) {\n          case \"indent\":\n            cmds.push([makeIndent(ind, options), mode, doc.contents]);\n            break;\n\n          case \"align\":\n            cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);\n            break;\n\n          case \"trim\":\n            width += trim(out);\n            break;\n\n          case \"group\":\n            {\n              if (mustBeFlat && doc.break) {\n                return false;\n              }\n\n              const groupMode = doc.break ? MODE_BREAK : mode;\n              cmds.push([ind, groupMode, // The most expanded state takes up the least space on the current line.\n              doc.expandedStates && groupMode === MODE_BREAK ? getLast(doc.expandedStates) : doc.contents]);\n\n              if (doc.id) {\n                groupModeMap[doc.id] = groupMode;\n              }\n\n              break;\n            }\n\n          case \"fill\":\n            for (let i = doc.parts.length - 1; i >= 0; i--) {\n              cmds.push([ind, mode, doc.parts[i]]);\n            }\n\n            break;\n\n          case \"if-break\":\n          case \"indent-if-break\":\n            {\n              const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;\n\n              if (groupMode === MODE_BREAK) {\n                const breakContents = doc.type === \"if-break\" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);\n\n                if (breakContents) {\n                  cmds.push([ind, mode, breakContents]);\n                }\n              }\n\n              if (groupMode === MODE_FLAT) {\n                const flatContents = doc.type === \"if-break\" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;\n\n                if (flatContents) {\n                  cmds.push([ind, mode, flatContents]);\n                }\n              }\n\n              break;\n            }\n\n          case \"line\":\n            switch (mode) {\n              // fallthrough\n              case MODE_FLAT:\n                if (!doc.hard) {\n                  if (!doc.soft) {\n                    out.push(\" \");\n                    width -= 1;\n                  }\n\n                  break;\n                }\n\n                return true;\n\n              case MODE_BREAK:\n                return true;\n            }\n\n            break;\n\n          case \"line-suffix\":\n            hasLineSuffix = true;\n            break;\n\n          case \"line-suffix-boundary\":\n            if (hasLineSuffix) {\n              return false;\n            }\n\n            break;\n\n          case \"label\":\n            cmds.push([ind, mode, doc.contents]);\n            break;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  function printDocToString(doc, options) {\n    groupModeMap = {};\n    const width = options.printWidth;\n    const newLine = convertEndOfLineToChars(options.endOfLine);\n    let pos = 0; // cmds is basically a stack. We've turned a recursive call into a\n    // while loop which is much faster. The while loop below adds new\n    // cmds to the array instead of recursively calling `print`.\n\n    const cmds = [[rootIndent(), MODE_BREAK, doc]];\n    const out = [];\n    let shouldRemeasure = false;\n    let lineSuffix = [];\n\n    while (cmds.length > 0) {\n      const [ind, mode, doc] = cmds.pop();\n\n      if (typeof doc === \"string\") {\n        const formatted = newLine !== \"\\n\" ? doc.replace(/\\n/g, newLine) : doc;\n        out.push(formatted);\n        pos += getStringWidth(formatted);\n      } else if (isConcat$1(doc)) {\n        const parts = getDocParts$1(doc);\n\n        for (let i = parts.length - 1; i >= 0; i--) {\n          cmds.push([ind, mode, parts[i]]);\n        }\n      } else {\n        switch (doc.type) {\n          case \"cursor\":\n            out.push(cursor.placeholder);\n            break;\n\n          case \"indent\":\n            cmds.push([makeIndent(ind, options), mode, doc.contents]);\n            break;\n\n          case \"align\":\n            cmds.push([makeAlign(ind, doc.n, options), mode, doc.contents]);\n            break;\n\n          case \"trim\":\n            pos -= trim(out);\n            break;\n\n          case \"group\":\n            switch (mode) {\n              case MODE_FLAT:\n                if (!shouldRemeasure) {\n                  cmds.push([ind, doc.break ? MODE_BREAK : MODE_FLAT, doc.contents]);\n                  break;\n                }\n\n              // fallthrough\n\n              case MODE_BREAK:\n                {\n                  shouldRemeasure = false;\n                  const next = [ind, MODE_FLAT, doc.contents];\n                  const rem = width - pos;\n                  const hasLineSuffix = lineSuffix.length > 0;\n\n                  if (!doc.break && fits(next, cmds, rem, options, hasLineSuffix)) {\n                    cmds.push(next);\n                  } else {\n                    // Expanded states are a rare case where a document\n                    // can manually provide multiple representations of\n                    // itself. It provides an array of documents\n                    // going from the least expanded (most flattened)\n                    // representation first to the most expanded. If a\n                    // group has these, we need to manually go through\n                    // these states and find the first one that fits.\n                    if (doc.expandedStates) {\n                      const mostExpanded = getLast(doc.expandedStates);\n\n                      if (doc.break) {\n                        cmds.push([ind, MODE_BREAK, mostExpanded]);\n                        break;\n                      } else {\n                        for (let i = 1; i < doc.expandedStates.length + 1; i++) {\n                          if (i >= doc.expandedStates.length) {\n                            cmds.push([ind, MODE_BREAK, mostExpanded]);\n                            break;\n                          } else {\n                            const state = doc.expandedStates[i];\n                            const cmd = [ind, MODE_FLAT, state];\n\n                            if (fits(cmd, cmds, rem, options, hasLineSuffix)) {\n                              cmds.push(cmd);\n                              break;\n                            }\n                          }\n                        }\n                      }\n                    } else {\n                      cmds.push([ind, MODE_BREAK, doc.contents]);\n                    }\n                  }\n\n                  break;\n                }\n            }\n\n            if (doc.id) {\n              groupModeMap[doc.id] = getLast(cmds)[1];\n            }\n\n            break;\n          // Fills each line with as much code as possible before moving to a new\n          // line with the same indentation.\n          //\n          // Expects doc.parts to be an array of alternating content and\n          // whitespace. The whitespace contains the linebreaks.\n          //\n          // For example:\n          //   [\"I\", line, \"love\", line, \"monkeys\"]\n          // or\n          //   [{ type: group, ... }, softline, { type: group, ... }]\n          //\n          // It uses this parts structure to handle three main layout cases:\n          // * The first two content items fit on the same line without\n          //   breaking\n          //   -> output the first content item and the whitespace \"flat\".\n          // * Only the first content item fits on the line without breaking\n          //   -> output the first content item \"flat\" and the whitespace with\n          //   \"break\".\n          // * Neither content item fits on the line without breaking\n          //   -> output the first content item and the whitespace with \"break\".\n\n          case \"fill\":\n            {\n              const rem = width - pos;\n              const {\n                parts\n              } = doc;\n\n              if (parts.length === 0) {\n                break;\n              }\n\n              const [content, whitespace] = parts;\n              const contentFlatCmd = [ind, MODE_FLAT, content];\n              const contentBreakCmd = [ind, MODE_BREAK, content];\n              const contentFits = fits(contentFlatCmd, [], rem, options, lineSuffix.length > 0, true);\n\n              if (parts.length === 1) {\n                if (contentFits) {\n                  cmds.push(contentFlatCmd);\n                } else {\n                  cmds.push(contentBreakCmd);\n                }\n\n                break;\n              }\n\n              const whitespaceFlatCmd = [ind, MODE_FLAT, whitespace];\n              const whitespaceBreakCmd = [ind, MODE_BREAK, whitespace];\n\n              if (parts.length === 2) {\n                if (contentFits) {\n                  cmds.push(whitespaceFlatCmd, contentFlatCmd);\n                } else {\n                  cmds.push(whitespaceBreakCmd, contentBreakCmd);\n                }\n\n                break;\n              } // At this point we've handled the first pair (context, separator)\n              // and will create a new fill doc for the rest of the content.\n              // Ideally we wouldn't mutate the array here but copying all the\n              // elements to a new array would make this algorithm quadratic,\n              // which is unusable for large arrays (e.g. large texts in JSX).\n\n\n              parts.splice(0, 2);\n              const remainingCmd = [ind, mode, fill(parts)];\n              const secondContent = parts[0];\n              const firstAndSecondContentFlatCmd = [ind, MODE_FLAT, [content, whitespace, secondContent]];\n              const firstAndSecondContentFits = fits(firstAndSecondContentFlatCmd, [], rem, options, lineSuffix.length > 0, true);\n\n              if (firstAndSecondContentFits) {\n                cmds.push(remainingCmd, whitespaceFlatCmd, contentFlatCmd);\n              } else if (contentFits) {\n                cmds.push(remainingCmd, whitespaceBreakCmd, contentFlatCmd);\n              } else {\n                cmds.push(remainingCmd, whitespaceBreakCmd, contentBreakCmd);\n              }\n\n              break;\n            }\n\n          case \"if-break\":\n          case \"indent-if-break\":\n            {\n              const groupMode = doc.groupId ? groupModeMap[doc.groupId] : mode;\n\n              if (groupMode === MODE_BREAK) {\n                const breakContents = doc.type === \"if-break\" ? doc.breakContents : doc.negate ? doc.contents : indent(doc.contents);\n\n                if (breakContents) {\n                  cmds.push([ind, mode, breakContents]);\n                }\n              }\n\n              if (groupMode === MODE_FLAT) {\n                const flatContents = doc.type === \"if-break\" ? doc.flatContents : doc.negate ? indent(doc.contents) : doc.contents;\n\n                if (flatContents) {\n                  cmds.push([ind, mode, flatContents]);\n                }\n              }\n\n              break;\n            }\n\n          case \"line-suffix\":\n            lineSuffix.push([ind, mode, doc.contents]);\n            break;\n\n          case \"line-suffix-boundary\":\n            if (lineSuffix.length > 0) {\n              cmds.push([ind, mode, {\n                type: \"line\",\n                hard: true\n              }]);\n            }\n\n            break;\n\n          case \"line\":\n            switch (mode) {\n              case MODE_FLAT:\n                if (!doc.hard) {\n                  if (!doc.soft) {\n                    out.push(\" \");\n                    pos += 1;\n                  }\n\n                  break;\n                } else {\n                  // This line was forced into the output even if we\n                  // were in flattened mode, so we need to tell the next\n                  // group that no matter what, it needs to remeasure\n                  // because the previous measurement didn't accurately\n                  // capture the entire expression (this is necessary\n                  // for nested groups)\n                  shouldRemeasure = true;\n                }\n\n              // fallthrough\n\n              case MODE_BREAK:\n                if (lineSuffix.length > 0) {\n                  cmds.push([ind, mode, doc], ...lineSuffix.reverse());\n                  lineSuffix = [];\n                  break;\n                }\n\n                if (doc.literal) {\n                  if (ind.root) {\n                    out.push(newLine, ind.root.value);\n                    pos = ind.root.length;\n                  } else {\n                    out.push(newLine);\n                    pos = 0;\n                  }\n                } else {\n                  pos -= trim(out);\n                  out.push(newLine + ind.value);\n                  pos = ind.length;\n                }\n\n                break;\n            }\n\n            break;\n\n          case \"label\":\n            cmds.push([ind, mode, doc.contents]);\n            break;\n        }\n      } // Flush remaining line-suffix contents at the end of the document, in case\n      // there is no new line after the line-suffix.\n\n\n      if (cmds.length === 0 && lineSuffix.length > 0) {\n        cmds.push(...lineSuffix.reverse());\n        lineSuffix = [];\n      }\n    }\n\n    const cursorPlaceholderIndex = out.indexOf(cursor.placeholder);\n\n    if (cursorPlaceholderIndex !== -1) {\n      const otherCursorPlaceholderIndex = out.indexOf(cursor.placeholder, cursorPlaceholderIndex + 1);\n      const beforeCursor = out.slice(0, cursorPlaceholderIndex).join(\"\");\n      const aroundCursor = out.slice(cursorPlaceholderIndex + 1, otherCursorPlaceholderIndex).join(\"\");\n      const afterCursor = out.slice(otherCursorPlaceholderIndex + 1).join(\"\");\n      return {\n        formatted: beforeCursor + aroundCursor + afterCursor,\n        cursorNodeStart: beforeCursor.length,\n        cursorNodeText: aroundCursor\n      };\n    }\n\n    return {\n      formatted: out.join(\"\")\n    };\n  }\n\n  var docPrinter = {\n    printDocToString\n  };\n\n  const {\n    isConcat,\n    getDocParts\n  } = docUtils;\n\n  function flattenDoc(doc) {\n    if (!doc) {\n      return \"\";\n    }\n\n    if (isConcat(doc)) {\n      const res = [];\n\n      for (const part of getDocParts(doc)) {\n        if (isConcat(part)) {\n          res.push(...flattenDoc(part).parts);\n        } else {\n          const flattened = flattenDoc(part);\n\n          if (flattened !== \"\") {\n            res.push(flattened);\n          }\n        }\n      }\n\n      return {\n        type: \"concat\",\n        parts: res\n      };\n    }\n\n    if (doc.type === \"if-break\") {\n      return Object.assign({}, doc, {\n        breakContents: flattenDoc(doc.breakContents),\n        flatContents: flattenDoc(doc.flatContents)\n      });\n    }\n\n    if (doc.type === \"group\") {\n      return Object.assign({}, doc, {\n        contents: flattenDoc(doc.contents),\n        expandedStates: doc.expandedStates && doc.expandedStates.map(flattenDoc)\n      });\n    }\n\n    if (doc.type === \"fill\") {\n      return {\n        type: \"fill\",\n        parts: doc.parts.map(flattenDoc)\n      };\n    }\n\n    if (doc.contents) {\n      return Object.assign({}, doc, {\n        contents: flattenDoc(doc.contents)\n      });\n    }\n\n    return doc;\n  }\n\n  function printDocToDebug(doc) {\n    /** @type Record<symbol, string> */\n    const printedSymbols = Object.create(null);\n    /** @type Set<string> */\n\n    const usedKeysForSymbols = new Set();\n    return printDoc(flattenDoc(doc));\n\n    function printDoc(doc, index, parentParts) {\n      if (typeof doc === \"string\") {\n        return JSON.stringify(doc);\n      }\n\n      if (isConcat(doc)) {\n        const printed = getDocParts(doc).map(printDoc).filter(Boolean);\n        return printed.length === 1 ? printed[0] : \"[\".concat(printed.join(\", \"), \"]\");\n      }\n\n      if (doc.type === \"line\") {\n        const withBreakParent = Array.isArray(parentParts) && parentParts[index + 1] && parentParts[index + 1].type === \"break-parent\";\n\n        if (doc.literal) {\n          return withBreakParent ? \"literalline\" : \"literallineWithoutBreakParent\";\n        }\n\n        if (doc.hard) {\n          return withBreakParent ? \"hardline\" : \"hardlineWithoutBreakParent\";\n        }\n\n        if (doc.soft) {\n          return \"softline\";\n        }\n\n        return \"line\";\n      }\n\n      if (doc.type === \"break-parent\") {\n        const afterHardline = Array.isArray(parentParts) && parentParts[index - 1] && parentParts[index - 1].type === \"line\" && parentParts[index - 1].hard;\n        return afterHardline ? undefined : \"breakParent\";\n      }\n\n      if (doc.type === \"trim\") {\n        return \"trim\";\n      }\n\n      if (doc.type === \"indent\") {\n        return \"indent(\" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"align\") {\n        return doc.n === Number.NEGATIVE_INFINITY ? \"dedentToRoot(\" + printDoc(doc.contents) + \")\" : doc.n < 0 ? \"dedent(\" + printDoc(doc.contents) + \")\" : doc.n.type === \"root\" ? \"markAsRoot(\" + printDoc(doc.contents) + \")\" : \"align(\" + JSON.stringify(doc.n) + \", \" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"if-break\") {\n        return \"ifBreak(\" + printDoc(doc.breakContents) + (doc.flatContents ? \", \" + printDoc(doc.flatContents) : \"\") + (doc.groupId ? (!doc.flatContents ? ', \"\"' : \"\") + \", { groupId: \".concat(printGroupId(doc.groupId), \" }\") : \"\") + \")\";\n      }\n\n      if (doc.type === \"indent-if-break\") {\n        const optionsParts = [];\n\n        if (doc.negate) {\n          optionsParts.push(\"negate: true\");\n        }\n\n        if (doc.groupId) {\n          optionsParts.push(\"groupId: \".concat(printGroupId(doc.groupId)));\n        }\n\n        const options = optionsParts.length > 0 ? \", { \".concat(optionsParts.join(\", \"), \" }\") : \"\";\n        return \"indentIfBreak(\".concat(printDoc(doc.contents)).concat(options, \")\");\n      }\n\n      if (doc.type === \"group\") {\n        const optionsParts = [];\n\n        if (doc.break && doc.break !== \"propagated\") {\n          optionsParts.push(\"shouldBreak: true\");\n        }\n\n        if (doc.id) {\n          optionsParts.push(\"id: \".concat(printGroupId(doc.id)));\n        }\n\n        const options = optionsParts.length > 0 ? \", { \".concat(optionsParts.join(\", \"), \" }\") : \"\";\n\n        if (doc.expandedStates) {\n          return \"conditionalGroup([\".concat(doc.expandedStates.map(part => printDoc(part)).join(\",\"), \"]\").concat(options, \")\");\n        }\n\n        return \"group(\".concat(printDoc(doc.contents)).concat(options, \")\");\n      }\n\n      if (doc.type === \"fill\") {\n        return \"fill([\".concat(doc.parts.map(part => printDoc(part)).join(\", \"), \"])\");\n      }\n\n      if (doc.type === \"line-suffix\") {\n        return \"lineSuffix(\" + printDoc(doc.contents) + \")\";\n      }\n\n      if (doc.type === \"line-suffix-boundary\") {\n        return \"lineSuffixBoundary\";\n      }\n\n      if (doc.type === \"label\") {\n        return \"label(\".concat(JSON.stringify(doc.label), \", \").concat(printDoc(doc.contents), \")\");\n      }\n\n      throw new Error(\"Unknown doc type \" + doc.type);\n    }\n\n    function printGroupId(id) {\n      if (typeof id !== \"symbol\") {\n        return JSON.stringify(String(id));\n      }\n\n      if (id in printedSymbols) {\n        return printedSymbols[id];\n      } // TODO: use Symbol.prototype.description instead of slice once Node 10 is dropped\n\n\n      const prefix = String(id).slice(7, -1) || \"symbol\";\n\n      for (let counter = 0;; counter++) {\n        const key = prefix + (counter > 0 ? \" #\".concat(counter) : \"\");\n\n        if (!usedKeysForSymbols.has(key)) {\n          usedKeysForSymbols.add(key);\n          return printedSymbols[id] = \"Symbol.for(\".concat(JSON.stringify(key), \")\");\n        }\n      }\n    }\n  }\n\n  var docDebug = {\n    printDocToDebug\n  };\n\n  /**\n   * @typedef {import(\"./doc-builders\").Doc} Doc\n   */\n\n\n  var document = {\n    builders: docBuilders,\n    printer: docPrinter,\n    utils: docUtils,\n    debug: docDebug\n  };\n\n  return document;\n\n})));\n"]},"metadata":{},"sourceType":"script"}