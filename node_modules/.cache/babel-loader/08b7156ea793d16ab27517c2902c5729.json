{"ast":null,"code":"import { ar, er } from \"../../../redux/dr.js\";\nimport Dialog from \"../Dialog\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    person: state.myPage.person,\n    messages: state.myPage.messages,\n    newmsg: state.myPage.newmsg,\n    isAuth: state.auth.isAuth\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    AddF: () => {\n      dispatch(ar());\n    },\n    onchmsgF: texts => {\n      let ac = er(texts);\n      dispatch(ac);\n    }\n  };\n};\n\nconst DialogF = connect(mapStateToProps, mapDispatchToProps)(Dialog);\nexport default DialogF;","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/conponents/Dialogs/Message/DialogF.jsx"],"names":["ar","er","Dialog","connect","mapStateToProps","state","person","myPage","messages","newmsg","isAuth","auth","mapDispatchToProps","dispatch","AddF","onchmsgF","texts","ac","DialogF"],"mappings":"AAAA,SAASA,EAAT,EAAaC,EAAb,QAAuB,sBAAvB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,IAAIC,eAAe,GAAIC,KAAD,IAAW;AAC/B,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,MAAN,CAAaD,MADhB;AAELE,IAAAA,QAAQ,EAAEH,KAAK,CAACE,MAAN,CAAaC,QAFlB;AAGLC,IAAAA,MAAM,EAAEJ,KAAK,CAACE,MAAN,CAAaE,MAHhB;AAILC,IAAAA,MAAM,EAAEL,KAAK,CAACM,IAAN,CAAWD;AAJd,GAAP;AAMD,CAPD;;AASA,IAAIE,kBAAkB,GAAIC,QAAD,IAAc;AACrC,SAAO;AACLC,IAAAA,IAAI,EAAE,MAAM;AACVD,MAAAA,QAAQ,CAACb,EAAE,EAAH,CAAR;AACD,KAHI;AAILe,IAAAA,QAAQ,EAAGC,KAAD,IAAW;AACnB,UAAIC,EAAE,GAAGhB,EAAE,CAACe,KAAD,CAAX;AACAH,MAAAA,QAAQ,CAACI,EAAD,CAAR;AACD;AAPI,GAAP;AASD,CAVD;;AAYA,MAAMC,OAAO,GAAGf,OAAO,CAACC,eAAD,EAAkBQ,kBAAlB,CAAP,CAA6CV,MAA7C,CAAhB;AAEA,eAAegB,OAAf","sourcesContent":["import { ar, er } from \"../../../redux/dr.js\";\nimport Dialog from \"../Dialog\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n  return {\n    person: state.myPage.person,\n    messages: state.myPage.messages,\n    newmsg: state.myPage.newmsg,\n    isAuth: state.auth.isAuth,\n  };\n};\n\nlet mapDispatchToProps = (dispatch) => {\n  return {\n    AddF: () => {\n      dispatch(ar());\n    },\n    onchmsgF: (texts) => {\n      let ac = er(texts);\n      dispatch(ac);\n    },\n  };\n};\n\nconst DialogF = connect(mapStateToProps, mapDispatchToProps)(Dialog);\n\nexport default DialogF;\n"]},"metadata":{},"sourceType":"module"}