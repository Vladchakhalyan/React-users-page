{"ast":null,"code":"import { UsersApi } from '../API/api';\nconst FOLOW = 'FOLOW';\nconst UNFOLOW = 'UNFOLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_USERS_CH = 'SET_USERS_CH';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst IS_FETCHING = 'IS_FETCHING';\nconst IS_TOGGLE_FLUN = 'IS_TOGGLE_FLUN';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: false,\n  toggleFLUN: []\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLOW:\n      {\n        return { ...state,\n          users: state.users.map(dd => {\n            if (dd.id === action.usersID) {\n              return { ...dd,\n                followed: true\n              };\n            }\n\n            return dd;\n          })\n        };\n      }\n\n    case UNFOLOW:\n      {\n        return { ...state,\n          users: state.users.map(ddd => {\n            if (ddd.id === action.usersID) {\n              return { ...ddd,\n                followed: false\n              };\n            }\n\n            return ddd;\n          })\n        };\n      }\n\n    case SET_USERS:\n      {\n        return { ...state,\n          users: action.users\n        };\n      }\n\n    case SET_USERS_CH:\n      {\n        return { ...state,\n          currentPage: action.currentPage\n        };\n      }\n\n    case SET_TOTAL_USERS_COUNT:\n      {\n        return { ...state,\n          totalUsersCount: action.count\n        };\n      }\n\n    case IS_FETCHING:\n      {\n        return { ...state,\n          isFetching: action.isfch\n        };\n      }\n\n    case IS_TOGGLE_FLUN:\n      {\n        return { ...state,\n          toggleFLUN: action.isFetching ? [...state.toggleFLUN, action.userId] : state.toggleFLUN.filter(id => id !== action.userId)\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const folow = usersID => ({\n  type: FOLOW,\n  usersID\n});\nexport const unfolow = usersID => ({\n  type: UNFOLOW,\n  usersID\n});\nexport const setusers = users => ({\n  type: SET_USERS,\n  users\n});\nexport const SetUserCh = currentPage => ({\n  type: SET_USERS_CH,\n  currentPage\n});\n_c = SetUserCh;\nexport const setTotalUserCount = totalUsersCountt => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCountt\n});\nexport const isFetchings = isfch => ({\n  type: IS_FETCHING,\n  isfch\n});\nexport const isFLUN = (isFetching, userId) => ({\n  type: IS_TOGGLE_FLUN,\n  isFetching,\n  userId\n});\nexport const getPageUsers = (page, mklient) => {\n  return dispatch => {\n    dispatch(isFetchings(true));\n    dispatch(SetUserCh(page));\n    UsersApi.getUsers(page, mklient).then(data => {\n      dispatch(isFetchings(false));\n      dispatch(setusers(data.items));\n      dispatch(setTotalUserCount(data.totalCount));\n    });\n  };\n};\nexport const Usersunfolow = id => {\n  return dispatch => {\n    UsersApi.getUsers2(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(unfolow(id));\n      }\n\n      dispatch(isFLUN(false, id));\n    });\n  };\n};\n_c2 = Usersunfolow;\nexport const Usersfolow = id => {\n  return dispatch => {\n    UsersApi.getUsers3(id).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(folow(id));\n      }\n\n      dispatch(isFLUN(false, id));\n    });\n  };\n};\n_c3 = Usersfolow;\nexport default usersReducer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"SetUserCh\");\n$RefreshReg$(_c2, \"Usersunfolow\");\n$RefreshReg$(_c3, \"Usersfolow\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React-js/React-Page.js/src/redux/UsersRedux.js"],"names":["UsersApi","FOLOW","UNFOLOW","SET_USERS","SET_USERS_CH","SET_TOTAL_USERS_COUNT","IS_FETCHING","IS_TOGGLE_FLUN","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","toggleFLUN","usersReducer","state","action","type","map","dd","id","usersID","followed","ddd","count","isfch","userId","filter","folow","unfolow","setusers","SetUserCh","setTotalUserCount","totalUsersCountt","isFetchings","isFLUN","getPageUsers","page","mklient","dispatch","getUsers","then","data","items","totalCount","Usersunfolow","getUsers2","resultCode","Usersfolow","getUsers3"],"mappings":"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","sourcesContent":["import {UsersApi} from '../API/api';\n\nconst FOLOW = 'FOLOW';\nconst UNFOLOW = 'UNFOLOW';\nconst SET_USERS = 'SET_USERS';\nconst SET_USERS_CH = 'SET_USERS_CH';\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\nconst IS_FETCHING = 'IS_FETCHING';\nconst IS_TOGGLE_FLUN = 'IS_TOGGLE_FLUN';\n\nlet initialState = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 0,\n    currentPage: 1,\n    isFetching: false,\n    toggleFLUN: [],\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case FOLOW: {\n            return {\n                ...state,\n                users: state.users.map((dd) => {\n                    if (dd.id === action.usersID) {\n                        return {...dd, followed: true};\n                    }\n                    return dd;\n                }),\n            };\n        }\n        case UNFOLOW: {\n            return {\n                ...state,\n                users: state.users.map((ddd) => {\n                    if (ddd.id === action.usersID) {\n                        return {...ddd, followed: false};\n                    }\n                    return ddd;\n                }),\n            };\n        }\n        case SET_USERS: {\n            return {...state, users: action.users};\n        }\n        case SET_USERS_CH: {\n            return {...state, currentPage: action.currentPage};\n        }\n        case SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.count};\n        }\n        case IS_FETCHING: {\n            return {...state, isFetching: action.isfch};\n        }\n        case IS_TOGGLE_FLUN: {\n            return {\n                ...state,\n                toggleFLUN: action.isFetching\n                    ? [...state.toggleFLUN, action.userId]\n                    : state.toggleFLUN.filter((id) => id !== action.userId),\n            };\n        }\n        default:\n            return state;\n    }\n};\n\nexport const folow = (usersID) => ({type: FOLOW, usersID});\nexport const unfolow = (usersID) => ({type: UNFOLOW, usersID});\nexport const setusers = (users) => ({type: SET_USERS, users});\nexport const SetUserCh = (currentPage) => ({type: SET_USERS_CH, currentPage});\nexport const setTotalUserCount = (totalUsersCountt) => ({\n    type: SET_TOTAL_USERS_COUNT,\n    count: totalUsersCountt,\n});\nexport const isFetchings = (isfch) => ({type: IS_FETCHING, isfch});\nexport const isFLUN = (isFetching, userId) => ({\n    type: IS_TOGGLE_FLUN,\n    isFetching,\n    userId,\n});\n\nexport const getPageUsers = (page, mklient) => {\n    return (dispatch) => {\n        dispatch(isFetchings(true));\n        dispatch(SetUserCh(page));\n        UsersApi.getUsers(page, mklient).then((data) => {\n            dispatch(isFetchings(false));\n            dispatch(setusers(data.items));\n            dispatch(setTotalUserCount(data.totalCount));\n        });\n    };\n};\n\nexport const Usersunfolow = (id) => {\n    return (dispatch) => {\n        UsersApi.getUsers2(id).then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(unfolow(id));\n            }\n            dispatch(isFLUN(false, id));\n        });\n    };\n};\n\nexport const Usersfolow = (id) => {\n    return (dispatch) => {\n        UsersApi.getUsers3(id).then((data) => {\n            if (data.resultCode === 0) {\n                dispatch(folow(id));\n            }\n            dispatch(isFLUN(false, id));\n        });\n    };\n};\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}