{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\React\\\\src\\\\conponents\\\\common\\\\FormsControls\\\\formscontrols.js\";\nimport React from \"react\";\nimport s from \"./formscontrols.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Textarea = (input, meta, ...props) => {\n  let hasErorr = meta.touched && meta.error;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.FormC + \" \" + s.error,\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), meta.touched && meta.error && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [props.validate, \"\\\"some error\\\"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 38\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Textarea;\n\nvar _c;\n\n$RefreshReg$(_c, \"Textarea\");","map":{"version":3,"sources":["C:/Users/user/OneDrive/Рабочий стол/React/src/conponents/common/FormsControls/formscontrols.js"],"names":["React","s","Textarea","input","meta","props","hasErorr","touched","error","FormC","validate"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,4BAAd;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,IAAR,EAAc,GAAGC,KAAjB,KAA2B;AACjD,MAAIC,QAAQ,GAAGF,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAApC;AACA,sBACE;AAAK,IAAA,SAAS,EAAEP,CAAC,CAACQ,KAAF,GAAU,GAAV,GAAgBR,CAAC,CAACO,KAAlC;AAAA,4BACE,yBAAcL,KAAd;AAAA,SAAyBE;AAAzB;AAAA;AAAA;AAAA;AAAA,YADF,EAEGD,IAAI,CAACG,OAAL,IAAgBH,IAAI,CAACI,KAArB,iBAA8B;AAAA,iBAAOH,KAAK,CAACK,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA,YAFjC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD,CARM;KAAMR,Q","sourcesContent":["import React from \"react\";\nimport s from \"./formscontrols.module.css\";\n\nexport const Textarea = (input, meta, ...props) => {\n  let hasErorr = meta.touched && meta.error;\n  return (\n    <div className={s.FormC + \" \" + s.error}>\n      <textarea {...input} {...props} />\n      {meta.touched && meta.error && <span>{props.validate}\"some error\"</span>}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}